type: application
language: rust
toolchain:
  rust:
    version: '1.82.0'

env:
  CARGO_TERM_COLOR: 'always'

fileGroups:
  sources:
    - 'bindings/**/*'
    - 'sequencer/src/**/*'
    - 'sequencer/Cargo.toml'
    - 'Cargo.toml'

tasks:
  build:
    command: cargo build --release
    inputs: ['@globs(sources)']
    outputs: ['target/release/sequencer']
    env:
      SCCACHE_GCS_KEY_PREFIX: sequencer-release
  
  build-image-local:
    script: 'docker buildx build -t gaspxyz/sequencer:local -t gaspxyz/sequencer:localarb -t gaspxyz/sequencer:localbase .'
    inputs: ['@globs(sources)', 'Dockerfile']

  build-image-ci:
    command: 'docker buildx build -t gaspxyz/sequencer:${IMAGE_TAG:-ci} -f Dockerfile.ci --load .'
    deps: ['build']

  rustfmt:
    command: cargo fmt --all -- --check
    inputs: ['@globs(sources)']
    options:
      runInCI: false

  rustfmt-ci:
    command: cargo fmt --all -- --check
    inputs: ['@globs(sources)']

  clippy:
    command: cargo clippy
    inputs: ['@globs(sources)']
    options:
      runInCI: false
    env:
      RUSTC_WRAPPER: sccache

  clippy-ci:
    command: cargo clippy
    inputs: ['@globs(sources)']
    env:
      SCCACHE_GCS_KEY_PREFIX: sequencer

  cargo-test:
    command: cargo test -- l1::test::test_can_connect sequencer::test::test_find_malicious_update_ignores_updates_from_other_chains sequencer::test::test_find_malicious_update_ignores_valid_updates sequencer::test::test_find_malicious_update_with_invalid_range_works sequencer::test::test_find_malicious_update_works sequencer::test::test_find_pending_cancels_ignores_closed_cancels sequencer::test::test_find_pending_cancels_to_close sequencer::test::test_find_pending_cancels_to_close2 sequencer::test::test_find_pending_cancels_to_close_when_there_is_no_merkle_root_provided_to_l1 sequencer::test::test_get_pending_update_when_there_are_no_requests sequencer::test::test_get_pending_update_when_there_are_requests sequencer::test::test_get_pending_update_when_there_are_too_many_requests_for_single_update
    inputs: ['@globs(sources)']
    options:
      runInCI: false
    env:
      RUSTC_WRAPPER: sccache

  cargo-test-ci:
    command: cargo test -- l1::test::test_can_connect sequencer::test::test_find_malicious_update_ignores_updates_from_other_chains sequencer::test::test_find_malicious_update_ignores_valid_updates sequencer::test::test_find_malicious_update_with_invalid_range_works sequencer::test::test_find_malicious_update_works sequencer::test::test_find_pending_cancels_ignores_closed_cancels sequencer::test::test_find_pending_cancels_to_close sequencer::test::test_find_pending_cancels_to_close2 sequencer::test::test_find_pending_cancels_to_close_when_there_is_no_merkle_root_provided_to_l1 sequencer::test::test_get_pending_update_when_there_are_no_requests sequencer::test::test_get_pending_update_when_there_are_requests sequencer::test::test_get_pending_update_when_there_are_too_many_requests_for_single_update
    inputs: ['@globs(sources)']
    env:
      SCCACHE_GCS_KEY_PREFIX: sequencer
