{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "_registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_taskResponseWindowBlock",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "taskIndex",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "taskCreatedBlock",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "quorumThresholdPercentage",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IFinalizerTaskManager.Task",
          "name": "task",
          "type": "tuple"
        }
      ],
      "name": "NewTaskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "pauserRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "PauserRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "StaleStakesForbiddenUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "taskIndex",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "referenceTaskIndex",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "storageProofHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "pendingStateHash",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct IFinalizerTaskManager.TaskResponse",
          "name": "taskResponse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "taskResponsedBlock",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "hashOfNonSigners",
              "type": "bytes32"
            },
            {
              "internalType": "uint96[]",
              "name": "quroumStakeTotals",
              "type": "uint96[]"
            },
            {
              "internalType": "uint96[]",
              "name": "quroumStakeSigned",
              "type": "uint96[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IFinalizerTaskManager.TaskResponseMetadata",
          "name": "taskResponseMetadata",
          "type": "tuple"
        }
      ],
      "name": "TaskResponded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "allTaskHashes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "allTaskResponses",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blsApkRegistry",
      "outputs": [
        {
          "internalType": "contract IBLSApkRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "referenceBlockNumber",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint32[]",
              "name": "nonSignerQuorumBitmapIndices",
              "type": "uint32[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point[]",
              "name": "nonSignerPubkeys",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point[]",
              "name": "quorumApks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct BN254.G2Point",
              "name": "apkG2",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point",
              "name": "sigma",
              "type": "tuple"
            },
            {
              "internalType": "uint32[]",
              "name": "quorumApkIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[]",
              "name": "totalStakeIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[][]",
              "name": "nonSignerStakeIndices",
              "type": "uint32[][]"
            }
          ],
          "internalType": "struct IBLSSignatureChecker.NonSignerStakesAndSignature",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "checkSignatures",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint96[]",
              "name": "signedStakeForQuorum",
              "type": "uint96[]"
            },
            {
              "internalType": "uint96[]",
              "name": "totalStakeForQuorum",
              "type": "uint96[]"
            }
          ],
          "internalType": "struct IBLSSignatureChecker.QuorumStakeTotals",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "quorumThresholdPercentage",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "createNewTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "generator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "referenceBlockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "nonSignerOperatorIds",
          "type": "bytes32[]"
        }
      ],
      "name": "getCheckSignaturesIndices",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32[]",
              "name": "nonSignerQuorumBitmapIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[]",
              "name": "quorumApkIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[]",
              "name": "totalStakeIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[][]",
              "name": "nonSignerStakeIndices",
              "type": "uint32[][]"
            }
          ],
          "internalType": "struct OperatorStateRetriever.CheckSignaturesIndices",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPendingStateHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getOperatorState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct OperatorStateRetriever.Operator[][]",
          "name": "",
          "type": "tuple[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getOperatorState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct OperatorStateRetriever.Operator[][]",
          "name": "",
          "type": "tuple[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTaskResponseWindowBlock",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_generator",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTaskNum",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registryCoordinator",
      "outputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "taskCreatedBlock",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "quorumThresholdPercentage",
              "type": "uint32"
            }
          ],
          "internalType": "struct IFinalizerTaskManager.Task",
          "name": "task",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "referenceTaskIndex",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "storageProofHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "pendingStateHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IFinalizerTaskManager.TaskResponse",
          "name": "taskResponse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32[]",
              "name": "nonSignerQuorumBitmapIndices",
              "type": "uint32[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point[]",
              "name": "nonSignerPubkeys",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point[]",
              "name": "quorumApks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct BN254.G2Point",
              "name": "apkG2",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point",
              "name": "sigma",
              "type": "tuple"
            },
            {
              "internalType": "uint32[]",
              "name": "quorumApkIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[]",
              "name": "totalStakeIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[][]",
              "name": "nonSignerStakeIndices",
              "type": "uint32[][]"
            }
          ],
          "internalType": "struct IBLSSignatureChecker.NonSignerStakesAndSignature",
          "name": "nonSignerStakesAndSignature",
          "type": "tuple"
        }
      ],
      "name": "respondToTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "setPauserRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setStaleStakesForbidden",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeRegistry",
      "outputs": [
        {
          "internalType": "contract IStakeRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staleStakesForbidden",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taskNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "X",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Y",
              "type": "uint256"
            }
          ],
          "internalType": "struct BN254.G1Point",
          "name": "apk",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256[2]",
              "name": "X",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[2]",
              "name": "Y",
              "type": "uint256[2]"
            }
          ],
          "internalType": "struct BN254.G2Point",
          "name": "apkG2",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "X",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Y",
              "type": "uint256"
            }
          ],
          "internalType": "struct BN254.G1Point",
          "name": "sigma",
          "type": "tuple"
        }
      ],
      "name": "trySignatureAndApkVerification",
      "outputs": [
        {
          "internalType": "bool",
          "name": "pairingSuccessful",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "siganatureIsValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101206040523480156200001257600080fd5b5060405162005517380380620055178339810160408190526200003591620001f7565b81806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200008f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b591906200023e565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200010d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013391906200023e565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b031663df5cf7236040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b391906200023e565b6001600160a01b031660e052506097805460ff1916600117905563ffffffff16610100525062000265565b6001600160a01b0381168114620001f457600080fd5b50565b600080604083850312156200020b57600080fd5b82516200021881620001de565b602084015190925063ffffffff811681146200023357600080fd5b809150509250929050565b6000602082840312156200025157600080fd5b81516200025e81620001de565b9392505050565b60805160a05160c05160e0516101005161522e620002e9600039600081816104f30152612b0b0152600081816104a90152611f44015260008181610364015261212701526000818161038b015281816122fd01526124bf0152600081816103c501528181610d5a01528181611c0f01528181611da70152611fe1015261522e6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636d14a9871161010f578063b98d0908116100a2578063f2fde38b11610071578063f2fde38b146104de578063f5c9899d146104f1578063f8c8765e14610517578063fabc1cbc1461052a57600080fd5b8063b98d090814610476578063cefdc1d414610483578063df5cf723146104a4578063e4e3ad77146104cb57600080fd5b80637afa1eed116100de5780637afa1eed1461042f578063886f1195146104425780638b00ce7c146104555780638da5cb5b1461046557600080fd5b80636d14a987146103c05780636efb4636146103e7578063715018a61461040857806372d18e8d1461041057600080fd5b8063416c7e5e116101875780635c975abb116101565780635c975abb146103575780635df459461461035f57806368304835146103865780636b92787e146103ad57600080fd5b8063416c7e5e146102e95780634f739f74146102fc578063595c6a671461031c5780635ac86ab71461032457600080fd5b8063245a7bfc116101c3578063245a7bfc1461025e5780632cb223d5146102895780632d89f6fc146102a95780633563b0d1146102c957600080fd5b80630373408d146101f557806310d67a2f1461020c578063136439dd14610221578063171f1d5b14610234575b600080fd5b60ce545b6040519081526020015b60405180910390f35b61021f61021a366004613eba565b61053d565b005b61021f61022f366004613ed7565b6105f9565b610247610242366004614055565b610738565b604080519215158352901515602083015201610203565b60cc54610271906001600160a01b031681565b6040516001600160a01b039091168152602001610203565b6101f96102973660046140c3565b60cb6020526000908152604090205481565b6101f96102b73660046140c3565b60ca6020526000908152604090205481565b6102dc6102d73660046140e0565b6108c2565b604051610203919061423b565b61021f6102f7366004614263565b610d58565b61030f61030a3660046142c8565b610ecd565b60405161020391906143cc565b61021f6115f3565b610347610332366004614496565b606654600160ff9092169190911b9081161490565b6040519015158152602001610203565b6066546101f9565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b61021f6103bb3660046144b3565b6116ba565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b6103fa6103f53660046147b2565b61185b565b604051610203929190614872565b61021f612774565b60c95463ffffffff165b60405163ffffffff9091168152602001610203565b60cd54610271906001600160a01b031681565b606554610271906001600160a01b031681565b60c95461041a9063ffffffff1681565b6033546001600160a01b0316610271565b6097546103479060ff1681565b6104966104913660046148bb565b612788565b6040516102039291906148fd565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b61021f6104d9366004614936565b61291a565b61021f6104ec366004613eba565b612d94565b7f000000000000000000000000000000000000000000000000000000000000000061041a565b61021f6105253660046149aa565b612e0a565b61021f610538366004613ed7565b612f5b565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b49190614a06565b6001600160a01b0316336001600160a01b0316146105ed5760405162461bcd60e51b81526004016105e490614a23565b60405180910390fd5b6105f6816130b7565b50565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106659190614a6d565b6106815760405162461bcd60e51b81526004016105e490614a8a565b606654818116146106fa5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105e4565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018787600001518860200151886000015160006002811061078057610780614ad2565b60200201518951600160200201518a602001516000600281106107a5576107a5614ad2565b60200201518b602001516001600281106107c1576107c1614ad2565b602090810291909101518c518d83015160405161081e9a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c6108419190614ae8565b90506108b461085a61085388846131ae565b8690613245565b6108626132d9565b6108aa61089b85610895604080518082018252600080825260209182015281518083019092526001825260029082015290565b906131ae565b6108a48c613399565b90613245565b886201d4c0613429565b909890975095505050505050565b60606000846001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610904573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109289190614a06565b90506000856001600160a01b0316639e9923c26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190614a06565b90506000866001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190614a06565b9050600086516001600160401b03811115610a1157610a11613ef0565b604051908082528060200260200182016040528015610a4457816020015b6060815260200190600190039081610a2f5790505b50905060005b8751811015610d4c576000888281518110610a6757610a67614ad2565b0160200151604051638902624560e01b815260f89190911c6004820181905263ffffffff8a16602483015291506000906001600160a01b03871690638902624590604401600060405180830381865afa158015610ac8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610af09190810190614b0a565b905080516001600160401b03811115610b0b57610b0b613ef0565b604051908082528060200260200182016040528015610b5657816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610b295790505b50848481518110610b6957610b69614ad2565b602002602001018190525060005b8151811015610d36576040518060600160405280876001600160a01b03166347b314e8858581518110610bac57610bac614ad2565b60200260200101516040518263ffffffff1660e01b8152600401610bd291815260200190565b602060405180830381865afa158015610bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c139190614a06565b6001600160a01b03168152602001838381518110610c3357610c33614ad2565b60200260200101518152602001896001600160a01b031663fa28c627858581518110610c6157610c61614ad2565b60209081029190910101516040516001600160e01b031960e084901b168152600481019190915260ff8816602482015263ffffffff8f166044820152606401602060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190614b9a565b6001600160601b0316815250858581518110610cff57610cff614ad2565b60200260200101518281518110610d1857610d18614ad2565b60200260200101819052508080610d2e90614bd9565b915050610b77565b5050508080610d4490614bd9565b915050610a4a565b50979650505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda9190614a06565b6001600160a01b0316336001600160a01b031614610e865760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a4016105e4565b6097805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200160405180910390a150565b610ef86040518060800160405280606081526020016060815260200160608152602001606081525090565b6000876001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c9190614a06565b9050610f896040518060800160405280606081526020016060815260200160608152602001606081525090565b6040516361c8a12f60e11b81526001600160a01b038a169063c391425e90610fb9908b9089908990600401614bf4565b600060405180830381865afa158015610fd6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ffe9190810190614c3e565b81526040516340e03a8160e11b81526001600160a01b038316906381c0750290611030908b908b908b90600401614cf5565b600060405180830381865afa15801561104d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110759190810190614c3e565b6040820152856001600160401b0381111561109257611092613ef0565b6040519080825280602002602001820160405280156110c557816020015b60608152602001906001900390816110b05790505b50606082015260005b60ff8116871115611504576000856001600160401b038111156110f3576110f3613ef0565b60405190808252806020026020018201604052801561111c578160200160208202803683370190505b5083606001518360ff168151811061113657611136614ad2565b602002602001018190525060005b868110156114045760008c6001600160a01b03166304ec63518a8a8581811061116f5761116f614ad2565b905060200201358e8860000151868151811061118d5761118d614ad2565b60200260200101516040518463ffffffff1660e01b81526004016111ca9392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa1580156111e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120b9190614d1e565b90506001600160c01b0381166112af5760405162461bcd60e51b815260206004820152605c60248201527f4f70657261746f7253746174655265747269657665722e676574436865636b5360448201527f69676e617475726573496e64696365733a206f70657261746f72206d7573742060648201527f6265207265676973746572656420617420626c6f636b6e756d62657200000000608482015260a4016105e4565b8a8a8560ff168181106112c4576112c4614ad2565b6001600160c01b03841692013560f81c9190911c6001908116141590506113f157856001600160a01b031663dd9846b98a8a8581811061130657611306614ad2565b905060200201358d8d8860ff1681811061132257611322614ad2565b6040516001600160e01b031960e087901b1681526004810194909452919091013560f81c60248301525063ffffffff8f166044820152606401602060405180830381865afa158015611378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139c9190614d47565b85606001518560ff16815181106113b5576113b5614ad2565b602002602001015184815181106113ce576113ce614ad2565b63ffffffff90921660209283029190910190910152826113ed81614bd9565b9350505b50806113fc81614bd9565b915050611144565b506000816001600160401b0381111561141f5761141f613ef0565b604051908082528060200260200182016040528015611448578160200160208202803683370190505b50905060005b828110156114c95784606001518460ff168151811061146f5761146f614ad2565b6020026020010151818151811061148857611488614ad2565b60200260200101518282815181106114a2576114a2614ad2565b63ffffffff90921660209283029190910190910152806114c181614bd9565b91505061144e565b508084606001518460ff16815181106114e4576114e4614ad2565b6020026020010181905250505080806114fc90614d64565b9150506110ce565b506000896001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa158015611545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115699190614a06565b60405163354952a360e21b81529091506001600160a01b0382169063d5254a8c9061159c908b908b908e90600401614d84565b600060405180830381865afa1580156115b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115e19190810190614c3e565b60208301525098975050505050505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa15801561163b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165f9190614a6d565b61167b5760405162461bcd60e51b81526004016105e490614a8a565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60cd546001600160a01b0316331461171e5760405162461bcd60e51b815260206004820152602160248201527f5461736b2067656e657261746f72206d757374206265207468652063616c6c656044820152603960f91b60648201526084016105e4565b611755604051806080016040528060008152602001600063ffffffff16815260200160608152602001600063ffffffff1681525090565b84815263ffffffff438116602080840191909152908516606083015260408051601f8501839004830281018301909152838152908490849081908401838280828437600092019190915250505050604080830191909152516117bb908290602001614dae565b60408051601f19818403018152828252805160209182012060c9805463ffffffff908116600090815260ca90945293909220555416907f1695b8d06ec800b4615e745cfb5bd00c1f2875615d42925c3b5afa543bb24c489061181e908490614dae565b60405180910390a260c95461183a9063ffffffff166001614e39565b60c9805463ffffffff191663ffffffff929092169190911790555050505050565b60408051808201909152606080825260208201526000846118d25760405162461bcd60e51b815260206004820152603760248201526000805160206151d983398151915260448201527f7265733a20656d7074792071756f72756d20696e70757400000000000000000060648201526084016105e4565b604083015151851480156118ea575060a08301515185145b80156118fa575060c08301515185145b801561190a575060e08301515185145b6119745760405162461bcd60e51b815260206004820152604160248201526000805160206151d983398151915260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a4016105e4565b825151602084015151146119ec5760405162461bcd60e51b8152602060048201526044602482018190526000805160206151d9833981519152908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a4016105e4565b4363ffffffff168463ffffffff161115611a5c5760405162461bcd60e51b815260206004820152603c60248201526000805160206151d983398151915260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b0000000060648201526084016105e4565b6040805180820182526000808252602080830191909152825180840190935260608084529083015290866001600160401b03811115611a9d57611a9d613ef0565b604051908082528060200260200182016040528015611ac6578160200160208202803683370190505b506020820152866001600160401b03811115611ae457611ae4613ef0565b604051908082528060200260200182016040528015611b0d578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b03811115611b4157611b41613ef0565b604051908082528060200260200182016040528015611b6a578160200160208202803683370190505b5081526020860151516001600160401b03811115611b8a57611b8a613ef0565b604051908082528060200260200182016040528015611bb3578160200160208202803683370190505b5081602001819052506000611c858a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa158015611c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c809190614e61565b61364d565b905060005b876020015151811015611f2057611ccf88602001518281518110611cb057611cb0614ad2565b6020026020010151805160009081526020918201519091526040902090565b83602001518281518110611ce557611ce5614ad2565b60209081029190910101528015611da5576020830151611d06600183614e7e565b81518110611d1657611d16614ad2565b602002602001015160001c83602001518281518110611d3757611d37614ad2565b602002602001015160001c11611da5576040805162461bcd60e51b81526020600482015260248101919091526000805160206151d983398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f7274656460648201526084016105e4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec635184602001518381518110611dea57611dea614ad2565b60200260200101518b8b600001518581518110611e0957611e09614ad2565b60200260200101516040518463ffffffff1660e01b8152600401611e469392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611e63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e879190614d1e565b6001600160c01b031683600001518281518110611ea657611ea6614ad2565b602002602001018181525050611f0c610853611ee08486600001518581518110611ed257611ed2614ad2565b602002602001015116613708565b8a602001518481518110611ef657611ef6614ad2565b602002602001015161373390919063ffffffff16565b945080611f1881614bd9565b915050611c8a565b5050611f2b83613817565b60975490935060ff16600081611f42576000611fc4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc49190614e95565b905060005b8a811015612643578215612125578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f8681811061202057612020614ad2565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015612060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120849190614e95565b61208e9190614eae565b10156121255760405162461bcd60e51b815260206004820152606660248201526000805160206151d983398151915260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c4016105e4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d8481811061216657612166614ad2565b9050013560f81c60f81b60f81c8c8c60a00151858151811061218a5761218a614ad2565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156121e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220a9190614ec6565b6001600160401b03191661222d8a604001518381518110611cb057611cb0614ad2565b67ffffffffffffffff1916146122c95760405162461bcd60e51b815260206004820152606160248201526000805160206151d983398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c4016105e4565b6122f9896040015182815181106122e2576122e2614ad2565b60200260200101518761324590919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d8481811061233c5761233c614ad2565b9050013560f81c60f81b60f81c8c8c60c00151858151811061236057612360614ad2565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156123bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e09190614b9a565b856020015182815181106123f6576123f6614ad2565b6001600160601b0390921660209283029190910182015285015180518290811061242257612422614ad2565b60200260200101518560000151828151811061244057612440614ad2565b60200260200101906001600160601b031690816001600160601b0316815250506000805b8a602001515181101561262e576124b88660000151828151811061248a5761248a614ad2565b60200260200101518f8f868181106124a4576124a4614ad2565b600192013560f81c9290921c811614919050565b1561261c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f868181106124fe576124fe614ad2565b9050013560f81c60f81b60f81c8e8960200151858151811061252257612522614ad2565b60200260200101518f60e00151888151811061254057612540614ad2565b6020026020010151878151811061255957612559614ad2565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa1580156125bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e19190614b9a565b87518051859081106125f5576125f5614ad2565b602002602001018181516126099190614ef1565b6001600160601b03169052506001909101905b8061262681614bd9565b915050612464565b5050808061263b90614bd9565b915050611fc9565b50505060008061265d8c868a606001518b60800151610738565b91509150816126ce5760405162461bcd60e51b815260206004820152604360248201526000805160206151d983398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a4016105e4565b8061272f5760405162461bcd60e51b815260206004820152603960248201526000805160206151d983398151915260448201527f7265733a207369676e617475726520697320696e76616c69640000000000000060648201526084016105e4565b5050600087826020015160405160200161274a929190614f19565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b61277c6138b2565b612786600061390c565b565b60408051600180825281830190925260009160609183916020808301908036833701905050905084816000815181106127c3576127c3614ad2565b60209081029190910101526040516361c8a12f60e11b81526000906001600160a01b0388169063c391425e906127ff9088908690600401614f61565b600060405180830381865afa15801561281c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128449190810190614c3e565b60008151811061285657612856614ad2565b60209081029190910101516040516304ec635160e01b81526004810188905263ffffffff87811660248301529091166044820181905291506000906001600160a01b038916906304ec635190606401602060405180830381865afa1580156128c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e69190614d1e565b6001600160c01b0316905060006128fc8261395e565b90508161290a8a838a6108c2565b9550955050505050935093915050565b60cc546001600160a01b031633146129745760405162461bcd60e51b815260206004820152601d60248201527f41676772656761746f72206d757374206265207468652063616c6c657200000060448201526064016105e4565b600061298660408501602086016140c3565b90503660006129986040870187614fb5565b909250905060006129af60808801606089016140c3565b905060ca60006129c260208901896140c3565b63ffffffff1663ffffffff16815260200190815260200160002054876040516020016129ee9190614ffb565b6040516020818303038152906040528051906020012014612a775760405162461bcd60e51b815260206004820152603d60248201527f737570706c696564207461736b20646f6573206e6f74206d617463682074686560448201527f206f6e65207265636f7264656420696e2074686520636f6e747261637400000060648201526084016105e4565b600060cb81612a8960208a018a6140c3565b63ffffffff1663ffffffff1681526020019081526020016000205414612b065760405162461bcd60e51b815260206004820152602c60248201527f41676772656761746f722068617320616c726561647920726573706f6e64656460448201526b20746f20746865207461736b60a01b60648201526084016105e4565b612b307f000000000000000000000000000000000000000000000000000000000000000085614e39565b63ffffffff164363ffffffff161115612ba15760405162461bcd60e51b815260206004820152602d60248201527f41676772656761746f722068617320726573706f6e64656420746f207468652060448201526c7461736b20746f6f206c61746560981b60648201526084016105e4565b600086604051602001612bb491906150ce565b604051602081830303815290604052805190602001209050600080612bdc8387878a8c61185b565b6040805160808101825263ffffffff43168152602080820184905280850151828401528451606083015291519395509193509091612c1e918c918491016150dc565b6040516020818303038152906040528051906020012060cb60008c6000016020810190612c4b91906140c3565b63ffffffff1663ffffffff168152602001908152602001600020819055507fb6b77f791d125b1522410ab3adf6a5ea133c836a193ce67ed29c129ca1d8f5c08a82604051612c9a9291906150dc565b60405180910390a160005b86811015612d3b578560ff1684602001518281518110612cc757612cc7614ad2565b6020026020010151612cd99190615148565b6001600160601b0316606485600001518381518110612cfa57612cfa614ad2565b60200260200101516001600160601b0316612d159190615177565b1015612d2957505050505050505050505050565b80612d3381614bd9565b915050612ca5565b5060608a013560ce5560208a01803590612d55908c6140c3565b63ffffffff167f8378be8a33cf3a493910a16e275cd96af4f048c5eb1a2c2962d4066e697fea8060405160405180910390a35050505050505050505050565b612d9c6138b2565b6001600160a01b038116612e015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e4565b6105f68161390c565b600054610100900460ff1615808015612e2a5750600054600160ff909116105b80612e445750303b158015612e44575060005460ff166001145b612ea75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e4565b6000805460ff191660011790558015612eca576000805461ff0019166101001790555b612ed5856000613a2a565b612ede8461390c565b60cc80546001600160a01b038086166001600160a01b03199283161790925560cd8054928516929091169190911790558015612f54576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fd29190614a06565b6001600160a01b0316336001600160a01b0316146130025760405162461bcd60e51b81526004016105e490614a23565b6066541981196066541916146130805760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105e4565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200161072d565b6001600160a01b0381166131455760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016105e4565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152600080825260208201526131ca613dcb565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa90508080156131fd576131ff565bfe5b508061323d5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016105e4565b505092915050565b6040805180820190915260008082526020820152613261613de9565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa90508080156131fd57508061323d5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016105e4565b6132e1613e07565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820190915260008082526020820152600080806133c96000805160206151b983398151915286614ae8565b90505b6133d581613b14565b90935091506000805160206151b983398151915282830983141561340f576040805180820190915290815260208101919091529392505050565b6000805160206151b98339815191526001820890506133cc565b60408051808201825286815260208082018690528251808401909352868352820184905260009182919061345b613e2c565b60005b6002811015613620576000613474826006615177565b905084826002811061348857613488614ad2565b6020020151518361349a836000614eae565b600c81106134aa576134aa614ad2565b60200201528482600281106134c1576134c1614ad2565b602002015160200151838260016134d89190614eae565b600c81106134e8576134e8614ad2565b60200201528382600281106134ff576134ff614ad2565b6020020151515183613512836002614eae565b600c811061352257613522614ad2565b602002015283826002811061353957613539614ad2565b6020020151516001602002015183613552836003614eae565b600c811061356257613562614ad2565b602002015283826002811061357957613579614ad2565b60200201516020015160006002811061359457613594614ad2565b6020020151836135a5836004614eae565b600c81106135b5576135b5614ad2565b60200201528382600281106135cc576135cc614ad2565b6020020151602001516001600281106135e7576135e7614ad2565b6020020151836135f8836005614eae565b600c811061360857613608614ad2565b6020020152508061361881614bd9565b91505061345e565b50613629613e4b565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b60008061365984613b96565b905080156136ff578260ff1684600186516136749190614e7e565b8151811061368457613684614ad2565b016020015160f81c106136ff5760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c75650060648201526084016105e4565b90505b92915050565b6000805b82156137025761371d600184614e7e565b909216918061372b81615196565b91505061370c565b60408051808201909152600080825260208201526102008261ffff161061378f5760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b60448201526064016105e4565b8161ffff16600114156137a3575081613702565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff161061380c57600161ffff871660ff83161c811614156137ef576137ec8484613245565b93505b6137f98384613245565b92506201fffe600192831b1691016137bf565b509195945050505050565b6040805180820190915260008082526020820152815115801561383c57506020820151155b1561385a575050604080518082019091526000808252602082015290565b6040518060400160405280836000015181526020016000805160206151b9833981519152846020015161388d9190614ae8565b6138a5906000805160206151b9833981519152614e7e565b905292915050565b919050565b6033546001600160a01b031633146127865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e4565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060008061396c84613708565b61ffff166001600160401b0381111561398757613987613ef0565b6040519080825280601f01601f1916602001820160405280156139b1576020820181803683370190505b5090506000805b8251821080156139c9575061010081105b15613a20576001811b935085841615613a10578060f81b8383815181106139f2576139f2614ad2565b60200101906001600160f81b031916908160001a9053508160010191505b613a1981614bd9565b90506139b8565b5090949350505050565b6065546001600160a01b0316158015613a4b57506001600160a01b03821615155b613acd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105e4565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2613b10826130b7565b5050565b600080806000805160206151b983398151915260036000805160206151b9833981519152866000805160206151b9833981519152888909090890506000613b8a827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526000805160206151b9833981519152613d23565b91959194509092505050565b600061010082511115613c1f5760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a4016105e4565b8151613c2d57506000919050565b60008083600081518110613c4357613c43614ad2565b0160200151600160f89190911c81901b92505b8451811015613d1a57848181518110613c7157613c71614ad2565b0160200151600160f89190911c1b9150828211613d065760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a4016105e4565b91811791613d1381614bd9565b9050613c56565b50909392505050565b600080613d2e613e4b565b613d36613e69565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa92508280156131fd575082613dc05760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016105e4565b505195945050505050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280613e1a613e87565b8152602001613e27613e87565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b03811681146105f657600080fd5b600060208284031215613ecc57600080fd5b81356136ff81613ea5565b600060208284031215613ee957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613f2857613f28613ef0565b60405290565b60405161010081016001600160401b0381118282101715613f2857613f28613ef0565b604051601f8201601f191681016001600160401b0381118282101715613f7957613f79613ef0565b604052919050565b600060408284031215613f9357600080fd5b613f9b613f06565b9050813581526020820135602082015292915050565b600082601f830112613fc257600080fd5b604051604081018181106001600160401b0382111715613fe457613fe4613ef0565b8060405250806040840185811115613ffb57600080fd5b845b8181101561380c578035835260209283019201613ffd565b60006080828403121561402757600080fd5b61402f613f06565b905061403b8383613fb1565b815261404a8360408401613fb1565b602082015292915050565b600080600080610120858703121561406c57600080fd5b8435935061407d8660208701613f81565b925061408c8660608701614015565b915061409b8660e08701613f81565b905092959194509250565b63ffffffff811681146105f657600080fd5b80356138ad816140a6565b6000602082840312156140d557600080fd5b81356136ff816140a6565b6000806000606084860312156140f557600080fd5b833561410081613ea5565b92506020848101356001600160401b038082111561411d57600080fd5b818701915087601f83011261413157600080fd5b81358181111561414357614143613ef0565b614155601f8201601f19168501613f51565b9150808252888482850101111561416b57600080fd5b808484018584013760008482840101525080945050505061418e604085016140b8565b90509250925092565b600081518084526020808501808196508360051b810191508286016000805b8681101561422d578385038a52825180518087529087019087870190845b8181101561421857835180516001600160a01b031684528a8101518b8501526040908101516001600160601b031690840152928901926060909201916001016141d4565b50509a87019a955050918501916001016141b6565b509298975050505050505050565b60208152600061424e6020830184614197565b9392505050565b80151581146105f657600080fd5b60006020828403121561427557600080fd5b81356136ff81614255565b60008083601f84011261429257600080fd5b5081356001600160401b038111156142a957600080fd5b6020830191508360208285010111156142c157600080fd5b9250929050565b600080600080600080608087890312156142e157600080fd5b86356142ec81613ea5565b955060208701356142fc816140a6565b945060408701356001600160401b038082111561431857600080fd5b6143248a838b01614280565b9096509450606089013591508082111561433d57600080fd5b818901915089601f83011261435157600080fd5b81358181111561436057600080fd5b8a60208260051b850101111561437557600080fd5b6020830194508093505050509295509295509295565b600081518084526020808501945080840160005b838110156143c157815163ffffffff168752958201959082019060010161439f565b509495945050505050565b6000602080835283516080828501526143e860a085018261438b565b905081850151601f1980868403016040870152614405838361438b565b92506040870151915080868403016060870152614422838361438b565b60608801518782038301608089015280518083529194508501925084840190600581901b8501860160005b82811015614479578487830301845261446782875161438b565b9588019593880193915060010161444d565b509998505050505050505050565b60ff811681146105f657600080fd5b6000602082840312156144a857600080fd5b81356136ff81614487565b600080600080606085870312156144c957600080fd5b8435935060208501356144db816140a6565b925060408501356001600160401b038111156144f657600080fd5b61450287828801614280565b95989497509550505050565b60006001600160401b0382111561452757614527613ef0565b5060051b60200190565b600082601f83011261454257600080fd5b813560206145576145528361450e565b613f51565b82815260059290921b8401810191818101908684111561457657600080fd5b8286015b8481101561459a57803561458d816140a6565b835291830191830161457a565b509695505050505050565b600082601f8301126145b657600080fd5b813560206145c66145528361450e565b82815260069290921b840181019181810190868411156145e557600080fd5b8286015b8481101561459a576145fb8882613f81565b8352918301916040016145e9565b600082601f83011261461a57600080fd5b8135602061462a6145528361450e565b82815260059290921b8401810191818101908684111561464957600080fd5b8286015b8481101561459a5780356001600160401b0381111561466c5760008081fd5b61467a8986838b0101614531565b84525091830191830161464d565b6000610180828403121561469b57600080fd5b6146a3613f2e565b905081356001600160401b03808211156146bc57600080fd5b6146c885838601614531565b835260208401359150808211156146de57600080fd5b6146ea858386016145a5565b6020840152604084013591508082111561470357600080fd5b61470f858386016145a5565b60408401526147218560608601614015565b60608401526147338560e08601613f81565b608084015261012084013591508082111561474d57600080fd5b61475985838601614531565b60a084015261014084013591508082111561477357600080fd5b61477f85838601614531565b60c084015261016084013591508082111561479957600080fd5b506147a684828501614609565b60e08301525092915050565b6000806000806000608086880312156147ca57600080fd5b8535945060208601356001600160401b03808211156147e857600080fd5b6147f489838a01614280565b909650945060408801359150614809826140a6565b9092506060870135908082111561481f57600080fd5b5061482c88828901614688565b9150509295509295909350565b600081518084526020808501945080840160005b838110156143c15781516001600160601b03168752958201959082019060010161484d565b604081526000835160408084015261488d6080840182614839565b90506020850151603f198483030160608501526148aa8282614839565b925050508260208301529392505050565b6000806000606084860312156148d057600080fd5b83356148db81613ea5565b92506020840135915060408401356148f2816140a6565b809150509250925092565b8281526040602082015260006149166040830184614197565b949350505050565b60006080828403121561493057600080fd5b50919050565b600080600060c0848603121561494b57600080fd5b83356001600160401b038082111561496257600080fd5b61496e8783880161491e565b945061497d876020880161491e565b935060a086013591508082111561499357600080fd5b506149a086828701614688565b9150509250925092565b600080600080608085870312156149c057600080fd5b84356149cb81613ea5565b935060208501356149db81613ea5565b925060408501356149eb81613ea5565b915060608501356149fb81613ea5565b939692955090935050565b600060208284031215614a1857600080fd5b81516136ff81613ea5565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b600060208284031215614a7f57600080fd5b81516136ff81614255565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082614b0557634e487b7160e01b600052601260045260246000fd5b500690565b60006020808385031215614b1d57600080fd5b82516001600160401b03811115614b3357600080fd5b8301601f81018513614b4457600080fd5b8051614b526145528261450e565b81815260059190911b82018301908381019087831115614b7157600080fd5b928401925b82841015614b8f57835182529284019290840190614b76565b979650505050505050565b600060208284031215614bac57600080fd5b81516001600160601b03811681146136ff57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415614bed57614bed614bc3565b5060010190565b63ffffffff84168152604060208201819052810182905260006001600160fb1b03831115614c2157600080fd5b8260051b8085606085013760009201606001918252509392505050565b60006020808385031215614c5157600080fd5b82516001600160401b03811115614c6757600080fd5b8301601f81018513614c7857600080fd5b8051614c866145528261450e565b81815260059190911b82018301908381019087831115614ca557600080fd5b928401925b82841015614b8f578351614cbd816140a6565b82529284019290840190614caa565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b63ffffffff84168152604060208201526000614d15604083018486614ccc565b95945050505050565b600060208284031215614d3057600080fd5b81516001600160c01b03811681146136ff57600080fd5b600060208284031215614d5957600080fd5b81516136ff816140a6565b600060ff821660ff811415614d7b57614d7b614bc3565b60010192915050565b604081526000614d98604083018587614ccc565b905063ffffffff83166020830152949350505050565b6000602080835283518184015263ffffffff8185015116604084015260408401516080606085015280518060a086015260005b81811015614dfd5782810184015186820160c001528301614de1565b81811115614e0f57600060c083880101525b50606086015163ffffffff811660808701529250601f01601f19169390930160c001949350505050565b600063ffffffff808316818516808303821115614e5857614e58614bc3565b01949350505050565b600060208284031215614e7357600080fd5b81516136ff81614487565b600082821015614e9057614e90614bc3565b500390565b600060208284031215614ea757600080fd5b5051919050565b60008219821115614ec157614ec1614bc3565b500190565b600060208284031215614ed857600080fd5b815167ffffffffffffffff19811681146136ff57600080fd5b60006001600160601b0383811690831681811015614f1157614f11614bc3565b039392505050565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b83811015614f5457815185529382019390820190600101614f38565b5092979650505050505050565b60006040820163ffffffff851683526020604081850152818551808452606086019150828701935060005b81811015614fa857845183529383019391830191600101614f8c565b5090979650505050505050565b6000808335601e19843603018112614fcc57600080fd5b8301803591506001600160401b03821115614fe657600080fd5b6020019150368190038213156142c157600080fd5b602081528135602082015260006020830135615016816140a6565b63ffffffff81166040840152506040830135601e1984360301811261503a57600080fd5b830180356001600160401b0381111561505257600080fd5b80360385131561506157600080fd5b6080606085015261507960a085018260208501614ccc565b915050615088606085016140b8565b63ffffffff81166080850152509392505050565b80356150a7816140a6565b63ffffffff1682526020818101359083015260408082013590830152606090810135910152565b60808101613702828461509c565b6150e6818461509c565b60a0608082015263ffffffff82511660a0820152602082015160c082015260006040830151608060e0840152615120610120840182614839565b90506060840151609f198483030161010085015261513e8282614839565b9695505050505050565b60006001600160601b038083168185168183048111821515161561516e5761516e614bc3565b02949350505050565b600081600019048311821515161561519157615191614bc3565b500290565b600061ffff808316818114156151ae576151ae614bc3565b600101939250505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a2646970667358221220a5cf49cc2a6798faa9d031ad1cd1377bfd3f6ab8ab6c2376ce530296ce16942b64736f6c634300080c0033",
    "sourceMap": "805:6015:125:-:0;;;2246:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2362:20;1701::72;-1:-1:-1;;;;;1679:42:72;;;-1:-1:-1;;;;;1679:42:72;;;;;1747:20;-1:-1:-1;;;;;1747:34:72;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1731:52:72;;;-1:-1:-1;;;;;1731:52:72;;;;;1810:20;-1:-1:-1;;;;;1810:35:72;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1793:54:72;;;-1:-1:-1;;;;;1793:54:72;;;;;1870:13;;-1:-1:-1;;;;;1870:24:72;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1857:39:72;;;-1:-1:-1;1915:20:72;:27;;-1:-1:-1;;1915:27:72;1938:4;1915:27;;;2398:54:125::1;;1915:27:72::0;2398:54:125;-1:-1:-1;805:6015:125;;14:153:129;-1:-1:-1;;;;;111:31:129;;101:42;;91:70;;157:1;154;147:12;91:70;14:153;:::o;172:468::-;280:6;288;341:2;329:9;320:7;316:23;312:32;309:52;;;357:1;354;347:12;309:52;389:9;383:16;408:53;455:5;408:53;:::i;:::-;530:2;515:18;;509:25;480:5;;-1:-1:-1;578:10:129;565:24;;553:37;;543:65;;604:1;601;594:12;543:65;627:7;617:17;;;172:468;;;;;:::o;645:297::-;739:6;792:2;780:9;771:7;767:23;763:32;760:52;;;808:1;805;798:12;760:52;840:9;834:16;859:53;906:5;859:53;:::i;:::-;931:5;645:297;-1:-1:-1;;;645:297:129:o;1250:300::-;805:6015:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80636d14a9871161010f578063b98d0908116100a2578063f2fde38b11610071578063f2fde38b146104de578063f5c9899d146104f1578063f8c8765e14610517578063fabc1cbc1461052a57600080fd5b8063b98d090814610476578063cefdc1d414610483578063df5cf723146104a4578063e4e3ad77146104cb57600080fd5b80637afa1eed116100de5780637afa1eed1461042f578063886f1195146104425780638b00ce7c146104555780638da5cb5b1461046557600080fd5b80636d14a987146103c05780636efb4636146103e7578063715018a61461040857806372d18e8d1461041057600080fd5b8063416c7e5e116101875780635c975abb116101565780635c975abb146103575780635df459461461035f57806368304835146103865780636b92787e146103ad57600080fd5b8063416c7e5e146102e95780634f739f74146102fc578063595c6a671461031c5780635ac86ab71461032457600080fd5b8063245a7bfc116101c3578063245a7bfc1461025e5780632cb223d5146102895780632d89f6fc146102a95780633563b0d1146102c957600080fd5b80630373408d146101f557806310d67a2f1461020c578063136439dd14610221578063171f1d5b14610234575b600080fd5b60ce545b6040519081526020015b60405180910390f35b61021f61021a366004613eba565b61053d565b005b61021f61022f366004613ed7565b6105f9565b610247610242366004614055565b610738565b604080519215158352901515602083015201610203565b60cc54610271906001600160a01b031681565b6040516001600160a01b039091168152602001610203565b6101f96102973660046140c3565b60cb6020526000908152604090205481565b6101f96102b73660046140c3565b60ca6020526000908152604090205481565b6102dc6102d73660046140e0565b6108c2565b604051610203919061423b565b61021f6102f7366004614263565b610d58565b61030f61030a3660046142c8565b610ecd565b60405161020391906143cc565b61021f6115f3565b610347610332366004614496565b606654600160ff9092169190911b9081161490565b6040519015158152602001610203565b6066546101f9565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b61021f6103bb3660046144b3565b6116ba565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b6103fa6103f53660046147b2565b61185b565b604051610203929190614872565b61021f612774565b60c95463ffffffff165b60405163ffffffff9091168152602001610203565b60cd54610271906001600160a01b031681565b606554610271906001600160a01b031681565b60c95461041a9063ffffffff1681565b6033546001600160a01b0316610271565b6097546103479060ff1681565b6104966104913660046148bb565b612788565b6040516102039291906148fd565b6102717f000000000000000000000000000000000000000000000000000000000000000081565b61021f6104d9366004614936565b61291a565b61021f6104ec366004613eba565b612d94565b7f000000000000000000000000000000000000000000000000000000000000000061041a565b61021f6105253660046149aa565b612e0a565b61021f610538366004613ed7565b612f5b565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b49190614a06565b6001600160a01b0316336001600160a01b0316146105ed5760405162461bcd60e51b81526004016105e490614a23565b60405180910390fd5b6105f6816130b7565b50565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106659190614a6d565b6106815760405162461bcd60e51b81526004016105e490614a8a565b606654818116146106fa5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105e4565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018787600001518860200151886000015160006002811061078057610780614ad2565b60200201518951600160200201518a602001516000600281106107a5576107a5614ad2565b60200201518b602001516001600281106107c1576107c1614ad2565b602090810291909101518c518d83015160405161081e9a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c6108419190614ae8565b90506108b461085a61085388846131ae565b8690613245565b6108626132d9565b6108aa61089b85610895604080518082018252600080825260209182015281518083019092526001825260029082015290565b906131ae565b6108a48c613399565b90613245565b886201d4c0613429565b909890975095505050505050565b60606000846001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610904573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109289190614a06565b90506000856001600160a01b0316639e9923c26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190614a06565b90506000866001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190614a06565b9050600086516001600160401b03811115610a1157610a11613ef0565b604051908082528060200260200182016040528015610a4457816020015b6060815260200190600190039081610a2f5790505b50905060005b8751811015610d4c576000888281518110610a6757610a67614ad2565b0160200151604051638902624560e01b815260f89190911c6004820181905263ffffffff8a16602483015291506000906001600160a01b03871690638902624590604401600060405180830381865afa158015610ac8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610af09190810190614b0a565b905080516001600160401b03811115610b0b57610b0b613ef0565b604051908082528060200260200182016040528015610b5657816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610b295790505b50848481518110610b6957610b69614ad2565b602002602001018190525060005b8151811015610d36576040518060600160405280876001600160a01b03166347b314e8858581518110610bac57610bac614ad2565b60200260200101516040518263ffffffff1660e01b8152600401610bd291815260200190565b602060405180830381865afa158015610bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c139190614a06565b6001600160a01b03168152602001838381518110610c3357610c33614ad2565b60200260200101518152602001896001600160a01b031663fa28c627858581518110610c6157610c61614ad2565b60209081029190910101516040516001600160e01b031960e084901b168152600481019190915260ff8816602482015263ffffffff8f166044820152606401602060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190614b9a565b6001600160601b0316815250858581518110610cff57610cff614ad2565b60200260200101518281518110610d1857610d18614ad2565b60200260200101819052508080610d2e90614bd9565b915050610b77565b5050508080610d4490614bd9565b915050610a4a565b50979650505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda9190614a06565b6001600160a01b0316336001600160a01b031614610e865760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a4016105e4565b6097805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200160405180910390a150565b610ef86040518060800160405280606081526020016060815260200160608152602001606081525090565b6000876001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c9190614a06565b9050610f896040518060800160405280606081526020016060815260200160608152602001606081525090565b6040516361c8a12f60e11b81526001600160a01b038a169063c391425e90610fb9908b9089908990600401614bf4565b600060405180830381865afa158015610fd6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ffe9190810190614c3e565b81526040516340e03a8160e11b81526001600160a01b038316906381c0750290611030908b908b908b90600401614cf5565b600060405180830381865afa15801561104d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110759190810190614c3e565b6040820152856001600160401b0381111561109257611092613ef0565b6040519080825280602002602001820160405280156110c557816020015b60608152602001906001900390816110b05790505b50606082015260005b60ff8116871115611504576000856001600160401b038111156110f3576110f3613ef0565b60405190808252806020026020018201604052801561111c578160200160208202803683370190505b5083606001518360ff168151811061113657611136614ad2565b602002602001018190525060005b868110156114045760008c6001600160a01b03166304ec63518a8a8581811061116f5761116f614ad2565b905060200201358e8860000151868151811061118d5761118d614ad2565b60200260200101516040518463ffffffff1660e01b81526004016111ca9392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa1580156111e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120b9190614d1e565b90506001600160c01b0381166112af5760405162461bcd60e51b815260206004820152605c60248201527f4f70657261746f7253746174655265747269657665722e676574436865636b5360448201527f69676e617475726573496e64696365733a206f70657261746f72206d7573742060648201527f6265207265676973746572656420617420626c6f636b6e756d62657200000000608482015260a4016105e4565b8a8a8560ff168181106112c4576112c4614ad2565b6001600160c01b03841692013560f81c9190911c6001908116141590506113f157856001600160a01b031663dd9846b98a8a8581811061130657611306614ad2565b905060200201358d8d8860ff1681811061132257611322614ad2565b6040516001600160e01b031960e087901b1681526004810194909452919091013560f81c60248301525063ffffffff8f166044820152606401602060405180830381865afa158015611378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139c9190614d47565b85606001518560ff16815181106113b5576113b5614ad2565b602002602001015184815181106113ce576113ce614ad2565b63ffffffff90921660209283029190910190910152826113ed81614bd9565b9350505b50806113fc81614bd9565b915050611144565b506000816001600160401b0381111561141f5761141f613ef0565b604051908082528060200260200182016040528015611448578160200160208202803683370190505b50905060005b828110156114c95784606001518460ff168151811061146f5761146f614ad2565b6020026020010151818151811061148857611488614ad2565b60200260200101518282815181106114a2576114a2614ad2565b63ffffffff90921660209283029190910190910152806114c181614bd9565b91505061144e565b508084606001518460ff16815181106114e4576114e4614ad2565b6020026020010181905250505080806114fc90614d64565b9150506110ce565b506000896001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa158015611545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115699190614a06565b60405163354952a360e21b81529091506001600160a01b0382169063d5254a8c9061159c908b908b908e90600401614d84565b600060405180830381865afa1580156115b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115e19190810190614c3e565b60208301525098975050505050505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa15801561163b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165f9190614a6d565b61167b5760405162461bcd60e51b81526004016105e490614a8a565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60cd546001600160a01b0316331461171e5760405162461bcd60e51b815260206004820152602160248201527f5461736b2067656e657261746f72206d757374206265207468652063616c6c656044820152603960f91b60648201526084016105e4565b611755604051806080016040528060008152602001600063ffffffff16815260200160608152602001600063ffffffff1681525090565b84815263ffffffff438116602080840191909152908516606083015260408051601f8501839004830281018301909152838152908490849081908401838280828437600092019190915250505050604080830191909152516117bb908290602001614dae565b60408051601f19818403018152828252805160209182012060c9805463ffffffff908116600090815260ca90945293909220555416907f1695b8d06ec800b4615e745cfb5bd00c1f2875615d42925c3b5afa543bb24c489061181e908490614dae565b60405180910390a260c95461183a9063ffffffff166001614e39565b60c9805463ffffffff191663ffffffff929092169190911790555050505050565b60408051808201909152606080825260208201526000846118d25760405162461bcd60e51b815260206004820152603760248201526000805160206151d983398151915260448201527f7265733a20656d7074792071756f72756d20696e70757400000000000000000060648201526084016105e4565b604083015151851480156118ea575060a08301515185145b80156118fa575060c08301515185145b801561190a575060e08301515185145b6119745760405162461bcd60e51b815260206004820152604160248201526000805160206151d983398151915260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a4016105e4565b825151602084015151146119ec5760405162461bcd60e51b8152602060048201526044602482018190526000805160206151d9833981519152908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a4016105e4565b4363ffffffff168463ffffffff161115611a5c5760405162461bcd60e51b815260206004820152603c60248201526000805160206151d983398151915260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b0000000060648201526084016105e4565b6040805180820182526000808252602080830191909152825180840190935260608084529083015290866001600160401b03811115611a9d57611a9d613ef0565b604051908082528060200260200182016040528015611ac6578160200160208202803683370190505b506020820152866001600160401b03811115611ae457611ae4613ef0565b604051908082528060200260200182016040528015611b0d578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b03811115611b4157611b41613ef0565b604051908082528060200260200182016040528015611b6a578160200160208202803683370190505b5081526020860151516001600160401b03811115611b8a57611b8a613ef0565b604051908082528060200260200182016040528015611bb3578160200160208202803683370190505b5081602001819052506000611c858a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa158015611c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c809190614e61565b61364d565b905060005b876020015151811015611f2057611ccf88602001518281518110611cb057611cb0614ad2565b6020026020010151805160009081526020918201519091526040902090565b83602001518281518110611ce557611ce5614ad2565b60209081029190910101528015611da5576020830151611d06600183614e7e565b81518110611d1657611d16614ad2565b602002602001015160001c83602001518281518110611d3757611d37614ad2565b602002602001015160001c11611da5576040805162461bcd60e51b81526020600482015260248101919091526000805160206151d983398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f7274656460648201526084016105e4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec635184602001518381518110611dea57611dea614ad2565b60200260200101518b8b600001518581518110611e0957611e09614ad2565b60200260200101516040518463ffffffff1660e01b8152600401611e469392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611e63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e879190614d1e565b6001600160c01b031683600001518281518110611ea657611ea6614ad2565b602002602001018181525050611f0c610853611ee08486600001518581518110611ed257611ed2614ad2565b602002602001015116613708565b8a602001518481518110611ef657611ef6614ad2565b602002602001015161373390919063ffffffff16565b945080611f1881614bd9565b915050611c8a565b5050611f2b83613817565b60975490935060ff16600081611f42576000611fc4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc49190614e95565b905060005b8a811015612643578215612125578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f8681811061202057612020614ad2565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015612060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120849190614e95565b61208e9190614eae565b10156121255760405162461bcd60e51b815260206004820152606660248201526000805160206151d983398151915260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c4016105e4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d8481811061216657612166614ad2565b9050013560f81c60f81b60f81c8c8c60a00151858151811061218a5761218a614ad2565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156121e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220a9190614ec6565b6001600160401b03191661222d8a604001518381518110611cb057611cb0614ad2565b67ffffffffffffffff1916146122c95760405162461bcd60e51b815260206004820152606160248201526000805160206151d983398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c4016105e4565b6122f9896040015182815181106122e2576122e2614ad2565b60200260200101518761324590919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d8481811061233c5761233c614ad2565b9050013560f81c60f81b60f81c8c8c60c00151858151811061236057612360614ad2565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156123bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e09190614b9a565b856020015182815181106123f6576123f6614ad2565b6001600160601b0390921660209283029190910182015285015180518290811061242257612422614ad2565b60200260200101518560000151828151811061244057612440614ad2565b60200260200101906001600160601b031690816001600160601b0316815250506000805b8a602001515181101561262e576124b88660000151828151811061248a5761248a614ad2565b60200260200101518f8f868181106124a4576124a4614ad2565b600192013560f81c9290921c811614919050565b1561261c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f868181106124fe576124fe614ad2565b9050013560f81c60f81b60f81c8e8960200151858151811061252257612522614ad2565b60200260200101518f60e00151888151811061254057612540614ad2565b6020026020010151878151811061255957612559614ad2565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa1580156125bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e19190614b9a565b87518051859081106125f5576125f5614ad2565b602002602001018181516126099190614ef1565b6001600160601b03169052506001909101905b8061262681614bd9565b915050612464565b5050808061263b90614bd9565b915050611fc9565b50505060008061265d8c868a606001518b60800151610738565b91509150816126ce5760405162461bcd60e51b815260206004820152604360248201526000805160206151d983398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a4016105e4565b8061272f5760405162461bcd60e51b815260206004820152603960248201526000805160206151d983398151915260448201527f7265733a207369676e617475726520697320696e76616c69640000000000000060648201526084016105e4565b5050600087826020015160405160200161274a929190614f19565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b61277c6138b2565b612786600061390c565b565b60408051600180825281830190925260009160609183916020808301908036833701905050905084816000815181106127c3576127c3614ad2565b60209081029190910101526040516361c8a12f60e11b81526000906001600160a01b0388169063c391425e906127ff9088908690600401614f61565b600060405180830381865afa15801561281c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128449190810190614c3e565b60008151811061285657612856614ad2565b60209081029190910101516040516304ec635160e01b81526004810188905263ffffffff87811660248301529091166044820181905291506000906001600160a01b038916906304ec635190606401602060405180830381865afa1580156128c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e69190614d1e565b6001600160c01b0316905060006128fc8261395e565b90508161290a8a838a6108c2565b9550955050505050935093915050565b60cc546001600160a01b031633146129745760405162461bcd60e51b815260206004820152601d60248201527f41676772656761746f72206d757374206265207468652063616c6c657200000060448201526064016105e4565b600061298660408501602086016140c3565b90503660006129986040870187614fb5565b909250905060006129af60808801606089016140c3565b905060ca60006129c260208901896140c3565b63ffffffff1663ffffffff16815260200190815260200160002054876040516020016129ee9190614ffb565b6040516020818303038152906040528051906020012014612a775760405162461bcd60e51b815260206004820152603d60248201527f737570706c696564207461736b20646f6573206e6f74206d617463682074686560448201527f206f6e65207265636f7264656420696e2074686520636f6e747261637400000060648201526084016105e4565b600060cb81612a8960208a018a6140c3565b63ffffffff1663ffffffff1681526020019081526020016000205414612b065760405162461bcd60e51b815260206004820152602c60248201527f41676772656761746f722068617320616c726561647920726573706f6e64656460448201526b20746f20746865207461736b60a01b60648201526084016105e4565b612b307f000000000000000000000000000000000000000000000000000000000000000085614e39565b63ffffffff164363ffffffff161115612ba15760405162461bcd60e51b815260206004820152602d60248201527f41676772656761746f722068617320726573706f6e64656420746f207468652060448201526c7461736b20746f6f206c61746560981b60648201526084016105e4565b600086604051602001612bb491906150ce565b604051602081830303815290604052805190602001209050600080612bdc8387878a8c61185b565b6040805160808101825263ffffffff43168152602080820184905280850151828401528451606083015291519395509193509091612c1e918c918491016150dc565b6040516020818303038152906040528051906020012060cb60008c6000016020810190612c4b91906140c3565b63ffffffff1663ffffffff168152602001908152602001600020819055507fb6b77f791d125b1522410ab3adf6a5ea133c836a193ce67ed29c129ca1d8f5c08a82604051612c9a9291906150dc565b60405180910390a160005b86811015612d3b578560ff1684602001518281518110612cc757612cc7614ad2565b6020026020010151612cd99190615148565b6001600160601b0316606485600001518381518110612cfa57612cfa614ad2565b60200260200101516001600160601b0316612d159190615177565b1015612d2957505050505050505050505050565b80612d3381614bd9565b915050612ca5565b5060608a013560ce5560208a01803590612d55908c6140c3565b63ffffffff167f8378be8a33cf3a493910a16e275cd96af4f048c5eb1a2c2962d4066e697fea8060405160405180910390a35050505050505050505050565b612d9c6138b2565b6001600160a01b038116612e015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e4565b6105f68161390c565b600054610100900460ff1615808015612e2a5750600054600160ff909116105b80612e445750303b158015612e44575060005460ff166001145b612ea75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e4565b6000805460ff191660011790558015612eca576000805461ff0019166101001790555b612ed5856000613a2a565b612ede8461390c565b60cc80546001600160a01b038086166001600160a01b03199283161790925560cd8054928516929091169190911790558015612f54576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fd29190614a06565b6001600160a01b0316336001600160a01b0316146130025760405162461bcd60e51b81526004016105e490614a23565b6066541981196066541916146130805760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105e4565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200161072d565b6001600160a01b0381166131455760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016105e4565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152600080825260208201526131ca613dcb565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa90508080156131fd576131ff565bfe5b508061323d5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016105e4565b505092915050565b6040805180820190915260008082526020820152613261613de9565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa90508080156131fd57508061323d5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016105e4565b6132e1613e07565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820190915260008082526020820152600080806133c96000805160206151b983398151915286614ae8565b90505b6133d581613b14565b90935091506000805160206151b983398151915282830983141561340f576040805180820190915290815260208101919091529392505050565b6000805160206151b98339815191526001820890506133cc565b60408051808201825286815260208082018690528251808401909352868352820184905260009182919061345b613e2c565b60005b6002811015613620576000613474826006615177565b905084826002811061348857613488614ad2565b6020020151518361349a836000614eae565b600c81106134aa576134aa614ad2565b60200201528482600281106134c1576134c1614ad2565b602002015160200151838260016134d89190614eae565b600c81106134e8576134e8614ad2565b60200201528382600281106134ff576134ff614ad2565b6020020151515183613512836002614eae565b600c811061352257613522614ad2565b602002015283826002811061353957613539614ad2565b6020020151516001602002015183613552836003614eae565b600c811061356257613562614ad2565b602002015283826002811061357957613579614ad2565b60200201516020015160006002811061359457613594614ad2565b6020020151836135a5836004614eae565b600c81106135b5576135b5614ad2565b60200201528382600281106135cc576135cc614ad2565b6020020151602001516001600281106135e7576135e7614ad2565b6020020151836135f8836005614eae565b600c811061360857613608614ad2565b6020020152508061361881614bd9565b91505061345e565b50613629613e4b565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b60008061365984613b96565b905080156136ff578260ff1684600186516136749190614e7e565b8151811061368457613684614ad2565b016020015160f81c106136ff5760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c75650060648201526084016105e4565b90505b92915050565b6000805b82156137025761371d600184614e7e565b909216918061372b81615196565b91505061370c565b60408051808201909152600080825260208201526102008261ffff161061378f5760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b60448201526064016105e4565b8161ffff16600114156137a3575081613702565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff161061380c57600161ffff871660ff83161c811614156137ef576137ec8484613245565b93505b6137f98384613245565b92506201fffe600192831b1691016137bf565b509195945050505050565b6040805180820190915260008082526020820152815115801561383c57506020820151155b1561385a575050604080518082019091526000808252602082015290565b6040518060400160405280836000015181526020016000805160206151b9833981519152846020015161388d9190614ae8565b6138a5906000805160206151b9833981519152614e7e565b905292915050565b919050565b6033546001600160a01b031633146127865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e4565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060008061396c84613708565b61ffff166001600160401b0381111561398757613987613ef0565b6040519080825280601f01601f1916602001820160405280156139b1576020820181803683370190505b5090506000805b8251821080156139c9575061010081105b15613a20576001811b935085841615613a10578060f81b8383815181106139f2576139f2614ad2565b60200101906001600160f81b031916908160001a9053508160010191505b613a1981614bd9565b90506139b8565b5090949350505050565b6065546001600160a01b0316158015613a4b57506001600160a01b03821615155b613acd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105e4565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2613b10826130b7565b5050565b600080806000805160206151b983398151915260036000805160206151b9833981519152866000805160206151b9833981519152888909090890506000613b8a827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526000805160206151b9833981519152613d23565b91959194509092505050565b600061010082511115613c1f5760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a4016105e4565b8151613c2d57506000919050565b60008083600081518110613c4357613c43614ad2565b0160200151600160f89190911c81901b92505b8451811015613d1a57848181518110613c7157613c71614ad2565b0160200151600160f89190911c1b9150828211613d065760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a4016105e4565b91811791613d1381614bd9565b9050613c56565b50909392505050565b600080613d2e613e4b565b613d36613e69565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa92508280156131fd575082613dc05760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016105e4565b505195945050505050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280613e1a613e87565b8152602001613e27613e87565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b03811681146105f657600080fd5b600060208284031215613ecc57600080fd5b81356136ff81613ea5565b600060208284031215613ee957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613f2857613f28613ef0565b60405290565b60405161010081016001600160401b0381118282101715613f2857613f28613ef0565b604051601f8201601f191681016001600160401b0381118282101715613f7957613f79613ef0565b604052919050565b600060408284031215613f9357600080fd5b613f9b613f06565b9050813581526020820135602082015292915050565b600082601f830112613fc257600080fd5b604051604081018181106001600160401b0382111715613fe457613fe4613ef0565b8060405250806040840185811115613ffb57600080fd5b845b8181101561380c578035835260209283019201613ffd565b60006080828403121561402757600080fd5b61402f613f06565b905061403b8383613fb1565b815261404a8360408401613fb1565b602082015292915050565b600080600080610120858703121561406c57600080fd5b8435935061407d8660208701613f81565b925061408c8660608701614015565b915061409b8660e08701613f81565b905092959194509250565b63ffffffff811681146105f657600080fd5b80356138ad816140a6565b6000602082840312156140d557600080fd5b81356136ff816140a6565b6000806000606084860312156140f557600080fd5b833561410081613ea5565b92506020848101356001600160401b038082111561411d57600080fd5b818701915087601f83011261413157600080fd5b81358181111561414357614143613ef0565b614155601f8201601f19168501613f51565b9150808252888482850101111561416b57600080fd5b808484018584013760008482840101525080945050505061418e604085016140b8565b90509250925092565b600081518084526020808501808196508360051b810191508286016000805b8681101561422d578385038a52825180518087529087019087870190845b8181101561421857835180516001600160a01b031684528a8101518b8501526040908101516001600160601b031690840152928901926060909201916001016141d4565b50509a87019a955050918501916001016141b6565b509298975050505050505050565b60208152600061424e6020830184614197565b9392505050565b80151581146105f657600080fd5b60006020828403121561427557600080fd5b81356136ff81614255565b60008083601f84011261429257600080fd5b5081356001600160401b038111156142a957600080fd5b6020830191508360208285010111156142c157600080fd5b9250929050565b600080600080600080608087890312156142e157600080fd5b86356142ec81613ea5565b955060208701356142fc816140a6565b945060408701356001600160401b038082111561431857600080fd5b6143248a838b01614280565b9096509450606089013591508082111561433d57600080fd5b818901915089601f83011261435157600080fd5b81358181111561436057600080fd5b8a60208260051b850101111561437557600080fd5b6020830194508093505050509295509295509295565b600081518084526020808501945080840160005b838110156143c157815163ffffffff168752958201959082019060010161439f565b509495945050505050565b6000602080835283516080828501526143e860a085018261438b565b905081850151601f1980868403016040870152614405838361438b565b92506040870151915080868403016060870152614422838361438b565b60608801518782038301608089015280518083529194508501925084840190600581901b8501860160005b82811015614479578487830301845261446782875161438b565b9588019593880193915060010161444d565b509998505050505050505050565b60ff811681146105f657600080fd5b6000602082840312156144a857600080fd5b81356136ff81614487565b600080600080606085870312156144c957600080fd5b8435935060208501356144db816140a6565b925060408501356001600160401b038111156144f657600080fd5b61450287828801614280565b95989497509550505050565b60006001600160401b0382111561452757614527613ef0565b5060051b60200190565b600082601f83011261454257600080fd5b813560206145576145528361450e565b613f51565b82815260059290921b8401810191818101908684111561457657600080fd5b8286015b8481101561459a57803561458d816140a6565b835291830191830161457a565b509695505050505050565b600082601f8301126145b657600080fd5b813560206145c66145528361450e565b82815260069290921b840181019181810190868411156145e557600080fd5b8286015b8481101561459a576145fb8882613f81565b8352918301916040016145e9565b600082601f83011261461a57600080fd5b8135602061462a6145528361450e565b82815260059290921b8401810191818101908684111561464957600080fd5b8286015b8481101561459a5780356001600160401b0381111561466c5760008081fd5b61467a8986838b0101614531565b84525091830191830161464d565b6000610180828403121561469b57600080fd5b6146a3613f2e565b905081356001600160401b03808211156146bc57600080fd5b6146c885838601614531565b835260208401359150808211156146de57600080fd5b6146ea858386016145a5565b6020840152604084013591508082111561470357600080fd5b61470f858386016145a5565b60408401526147218560608601614015565b60608401526147338560e08601613f81565b608084015261012084013591508082111561474d57600080fd5b61475985838601614531565b60a084015261014084013591508082111561477357600080fd5b61477f85838601614531565b60c084015261016084013591508082111561479957600080fd5b506147a684828501614609565b60e08301525092915050565b6000806000806000608086880312156147ca57600080fd5b8535945060208601356001600160401b03808211156147e857600080fd5b6147f489838a01614280565b909650945060408801359150614809826140a6565b9092506060870135908082111561481f57600080fd5b5061482c88828901614688565b9150509295509295909350565b600081518084526020808501945080840160005b838110156143c15781516001600160601b03168752958201959082019060010161484d565b604081526000835160408084015261488d6080840182614839565b90506020850151603f198483030160608501526148aa8282614839565b925050508260208301529392505050565b6000806000606084860312156148d057600080fd5b83356148db81613ea5565b92506020840135915060408401356148f2816140a6565b809150509250925092565b8281526040602082015260006149166040830184614197565b949350505050565b60006080828403121561493057600080fd5b50919050565b600080600060c0848603121561494b57600080fd5b83356001600160401b038082111561496257600080fd5b61496e8783880161491e565b945061497d876020880161491e565b935060a086013591508082111561499357600080fd5b506149a086828701614688565b9150509250925092565b600080600080608085870312156149c057600080fd5b84356149cb81613ea5565b935060208501356149db81613ea5565b925060408501356149eb81613ea5565b915060608501356149fb81613ea5565b939692955090935050565b600060208284031215614a1857600080fd5b81516136ff81613ea5565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b600060208284031215614a7f57600080fd5b81516136ff81614255565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082614b0557634e487b7160e01b600052601260045260246000fd5b500690565b60006020808385031215614b1d57600080fd5b82516001600160401b03811115614b3357600080fd5b8301601f81018513614b4457600080fd5b8051614b526145528261450e565b81815260059190911b82018301908381019087831115614b7157600080fd5b928401925b82841015614b8f57835182529284019290840190614b76565b979650505050505050565b600060208284031215614bac57600080fd5b81516001600160601b03811681146136ff57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415614bed57614bed614bc3565b5060010190565b63ffffffff84168152604060208201819052810182905260006001600160fb1b03831115614c2157600080fd5b8260051b8085606085013760009201606001918252509392505050565b60006020808385031215614c5157600080fd5b82516001600160401b03811115614c6757600080fd5b8301601f81018513614c7857600080fd5b8051614c866145528261450e565b81815260059190911b82018301908381019087831115614ca557600080fd5b928401925b82841015614b8f578351614cbd816140a6565b82529284019290840190614caa565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b63ffffffff84168152604060208201526000614d15604083018486614ccc565b95945050505050565b600060208284031215614d3057600080fd5b81516001600160c01b03811681146136ff57600080fd5b600060208284031215614d5957600080fd5b81516136ff816140a6565b600060ff821660ff811415614d7b57614d7b614bc3565b60010192915050565b604081526000614d98604083018587614ccc565b905063ffffffff83166020830152949350505050565b6000602080835283518184015263ffffffff8185015116604084015260408401516080606085015280518060a086015260005b81811015614dfd5782810184015186820160c001528301614de1565b81811115614e0f57600060c083880101525b50606086015163ffffffff811660808701529250601f01601f19169390930160c001949350505050565b600063ffffffff808316818516808303821115614e5857614e58614bc3565b01949350505050565b600060208284031215614e7357600080fd5b81516136ff81614487565b600082821015614e9057614e90614bc3565b500390565b600060208284031215614ea757600080fd5b5051919050565b60008219821115614ec157614ec1614bc3565b500190565b600060208284031215614ed857600080fd5b815167ffffffffffffffff19811681146136ff57600080fd5b60006001600160601b0383811690831681811015614f1157614f11614bc3565b039392505050565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b83811015614f5457815185529382019390820190600101614f38565b5092979650505050505050565b60006040820163ffffffff851683526020604081850152818551808452606086019150828701935060005b81811015614fa857845183529383019391830191600101614f8c565b5090979650505050505050565b6000808335601e19843603018112614fcc57600080fd5b8301803591506001600160401b03821115614fe657600080fd5b6020019150368190038213156142c157600080fd5b602081528135602082015260006020830135615016816140a6565b63ffffffff81166040840152506040830135601e1984360301811261503a57600080fd5b830180356001600160401b0381111561505257600080fd5b80360385131561506157600080fd5b6080606085015261507960a085018260208501614ccc565b915050615088606085016140b8565b63ffffffff81166080850152509392505050565b80356150a7816140a6565b63ffffffff1682526020818101359083015260408082013590830152606090810135910152565b60808101613702828461509c565b6150e6818461509c565b60a0608082015263ffffffff82511660a0820152602082015160c082015260006040830151608060e0840152615120610120840182614839565b90506060840151609f198483030161010085015261513e8282614839565b9695505050505050565b60006001600160601b038083168185168183048111821515161561516e5761516e614bc3565b02949350505050565b600081600019048311821515161561519157615191614bc3565b500290565b600061ffff808316818114156151ae576151ae614bc3565b600101939250505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a2646970667358221220a5cf49cc2a6798faa9d031ad1cd1377bfd3f6ab8ab6c2376ce530296ce16942b64736f6c634300080c0033",
    "sourceMap": "805:6015:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6703:115;6789:22;;6703:115;;;160:25:129;;;148:2;133:18;6703:115:125;;;;;;;;5826:138:57;;;;;;:::i;:::-;;:::i;:::-;;3832:392;;;;;;:::i;:::-;;:::i;13744:854:72:-;;;;;;:::i;:::-;;:::i;:::-;;;;3746:14:129;;3739:22;3721:41;;3805:14;;3798:22;3793:2;3778:18;;3771:50;3694:18;13744:854:72;3559:268:129;1762:25:125;;;;;-1:-1:-1;;;;;1762:25:125;;;;;;-1:-1:-1;;;;;3996:32:129;;;3978:51;;3966:2;3951:18;1762:25:125;3832:203:129;1705:50:125;;;;;;:::i;:::-;;;;;;;;;;;;;;1562:47;;;;;;:::i;:::-;;;;;;;;;;;;;;3037:1255:75;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2175:168:72:-;;;;;;:::i;:::-;;:::i;5476:3709:75:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4299:136:57:-;;;:::i;5606:149::-;;;;;;:::i;:::-;5724:7;;5695:1;:10;;;;;;;;5724:14;;;5723:24;;5606:149;;;;11839:14:129;;11832:22;11814:41;;11802:2;11787:18;5606:149:57;11674:187:129;5418:87:57;5491:7;;5418:87;;1125:47:72;;;;;1074:45;;;;;2883:685:125;;;;;;:::i;:::-;;:::i;1011:57:72:-;;;;;4220:9042;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2071:101:0:-;;;:::i;6481:90:125:-;6551:13;;;;6481:90;;;19665:10:129;19653:23;;;19635:42;;19623:2;19608:18;6481:90:125;19491:192:129;1793:24:125;;;;;-1:-1:-1;;;;;1793:24:125;;;1825:37:57;;;;;-1:-1:-1;;;;;1825:37:57;;;1305:27:125;;;;;;;;;1441:85:0;1513:6;;-1:-1:-1;;;;;1513:6:0;1441:85;;1363:32:72;;;;;;;;;1757:712:75;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1178:46:72:-;;;;;3629:2846:125;;;;;;:::i;:::-;;:::i;2321:198:0:-;;;;;;:::i;:::-;;:::i;6577:120:125:-;6663:27;6577:120;;2465:327;;;;;;:::i;:::-;;:::i;4911:437:57:-;;;;;;:::i;:::-;;:::i;5826:138::-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:57;-1:-1:-1;;;;;2285:23:57;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:57;:10;-1:-1:-1;;;;;2271:39:57;;2263:94;;;;-1:-1:-1;;;2263:94:57;;;;;;;:::i;:::-;;;;;;;;;5920:37:::1;5939:17;5920:18;:37::i;:::-;5826:138:::0;:::o;3832:392::-;2125:14;;:35;;-1:-1:-1;;;2125:35:57;;2149:10;2125:35;;;3978:51:129;-1:-1:-1;;;;;2125:14:57;;;;:23;;3951:18:129;;2125:35:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:57;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:57;;24632:2:129;4025:107:57::1;::::0;::::1;24614:21:129::0;24671:2;24651:18;;;24644:30;24710:34;24690:18;;;24683:62;24781:26;24761:18;;;24754:54;24825:19;;4025:107:57::1;24430:420:129::0;4025:107:57::1;4142:7;:25:::0;;;4182:35:::1;::::0;160:25:129;;;4189:10:57::1;::::0;4182:35:::1;::::0;148:2:129;133:18;4182:35:57::1;;;;;;;;3832:392:::0;:::o;13744:854:72:-;13941:22;13965;14074:13;2035:77:89;14125:7:72;14134:3;:5;;;14141:3;:5;;;14148;:7;;;14156:1;14148:10;;;;;;;:::i;:::-;;;;;14160:7;;14168:1;14160:10;;;;14172:5;:7;;;14180:1;14172:10;;;;;;;:::i;:::-;;;;;14184:5;:7;;;14192:1;14184:10;;;;;;;:::i;:::-;;;;;;;;;;14196:7;;14205;;;;14108:105;;;;;;;;;;;25340:19:129;;;25384:2;25375:12;;25368:28;;;;25421:2;25412:12;;25405:28;;;;25458:2;25449:12;;25442:28;;;;25495:3;25486:13;;25479:29;;;;25533:3;25524:13;;25517:29;25571:3;25562:13;;25555:29;25609:3;25600:13;;25593:29;25647:3;25638:13;;25631:29;25685:3;25676:13;;24987:708;14108:105:72;;;;;;;;;;;;;14098:116;;;;;;14090:125;;:144;;;;:::i;:::-;14074:160;-1:-1:-1;14317:274:72;14352:33;14363:21;:3;14074:160;14363:14;:21::i;:::-;14352:5;;:10;:33::i;:::-;14403:22;:20;:22::i;:::-;14443:67;14472:37;14503:5;14472:19;-1:-1:-1;;;;;;;;;;;;;;;;;2390:13:89;;;;;;;;2398:1;2390:13;;2401:1;2390:13;;;;;2311:99;14472:19:72;:30;;:37::i;:::-;14443:23;14458:7;14443:14;:23::i;:::-;:28;;:67::i;:::-;14528:5;998:6;14317:17;:274::i;:::-;14276:315;;;;-1:-1:-1;13744:854:72;-1:-1:-1;;;;;;13744:854:72:o;3037:1255:75:-;3205:19;3236:28;3267:19;-1:-1:-1;;;;;3267:33:75;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3236:66;;3312:28;3343:19;-1:-1:-1;;;;;3343:33:75;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3312:66;;3388:30;3421:19;-1:-1:-1;;;;;3421:34:75;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3388:69;;3468:29;3517:13;:20;-1:-1:-1;;;;;3500:38:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3468:70;;3553:9;3548:699;3572:13;:20;3568:1;:24;3548:699;;;3613:18;3640:13;3654:1;3640:16;;;;;;;;:::i;:::-;;;;;3702:69;;-1:-1:-1;;;3702:69:75;;3640:16;;;;;3702:69;;;27106:36:129;;;27190:10;27178:23;;27158:18;;;27151:51;3640:16:75;-1:-1:-1;;;;;;;;3702:42:75;;;;;27079:18:129;;3702:69:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3702:69:75;;;;;;;;;;;;:::i;:::-;3671:100;;3815:11;:18;-1:-1:-1;;;;;3800:34:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;3800:34:75;;-1:-1:-1;;3800:34:75;;;;;;;;;;;;3785:9;3795:1;3785:12;;;;;;;;:::i;:::-;;;;;;:49;;;;3853:9;3848:389;3872:11;:18;3868:1;:22;3848:389;;;3933:289;;;;;;;;3974:14;-1:-1:-1;;;;;3974:40:75;;4015:11;4027:1;4015:14;;;;;;;;:::i;:::-;;;;;;;3974:56;;;;;;;;;;;;;160:25:129;;148:2;133:18;;14:177;3974:56:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3933:289:75;;;;;4072:11;4084:1;4072:14;;;;;;;;:::i;:::-;;;;;;;3933:289;;;;4116:13;-1:-1:-1;;;;;4116:35:75;;4160:11;4172:1;4160:14;;;;;;;;:::i;:::-;;;;;;;;;;;4116:87;;-1:-1:-1;;;;;;4116:87:75;;;;;;;;;;28294:25:129;;;;28367:4;28355:17;;28335:18;;;28328:45;4116:87:75;28409:23:129;;28389:18;;;28382:51;28267:18;;4116:87:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3933:289:75;;;;3915:9;3925:1;3915:12;;;;;;;;:::i;:::-;;;;;;;3928:1;3915:15;;;;;;;;:::i;:::-;;;;;;:307;;;;3892:3;;;;;:::i;:::-;;;;3848:389;;;;3599:648;;3594:3;;;;;:::i;:::-;;;;3548:699;;;-1:-1:-1;4276:9:75;3037:1255;-1:-1:-1;;;;;;;3037:1255:75:o;2175:168:72:-;1466:19;-1:-1:-1;;;;;1466:25:72;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1452:41:72;:10;-1:-1:-1;;;;;1452:41:72;;1444:146;;;;-1:-1:-1;;;1444:146:72;;29219:2:129;1444:146:72;;;29201:21:129;29258:2;29238:18;;;29231:30;29297:34;29277:18;;;29270:62;29368:34;29348:18;;;29341:62;29440:30;29419:19;;;29412:59;29488:19;;1444:146:72;29017:496:129;1444:146:72;2260:20:::1;:28:::0;;-1:-1:-1;;2260:28:72::1;::::0;::::1;;::::0;;::::1;::::0;;;2303:33:::1;::::0;11814:41:129;;;2303:33:72::1;::::0;11802:2:129;11787:18;2303:33:72::1;;;;;;;2175:168:::0;:::o;5476:3709:75:-;5716:29;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5716:29:75;5757:28;5788:19;-1:-1:-1;;;;;5788:33:75;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5757:66;;5833:52;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5833:52:75;6065:99;;-1:-1:-1;;;6065:99:75;;-1:-1:-1;;;;;6065:55:75;;;;;:99;;6121:20;;6143;;;;6065:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6065:99:75;;;;;;;;;;;;:::i;:::-;6011:153;;6322:84;;-1:-1:-1;;;6322:84:75;;-1:-1:-1;;;;;6322:47:75;;;;;:84;;6370:20;;6392:13;;;;6322:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6322:84:75;;;;;;;;;;;;:::i;:::-;6279:40;;;:127;6487:13;-1:-1:-1;;;;;6472:36:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6425:44:75;;;:83;6523:23;6518:2307;6552:40;;;;-1:-1:-1;6518:2307:75;;;6629:30;6883:20;-1:-1:-1;;;;;6870:41:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6870:41:75;;6804:22;:44;;;6849:17;6804:63;;;;;;;;;;:::i;:::-;;;;;;:107;;;;6931:6;6926:1405;6943:31;;;6926:1405;;;7091:29;7144:19;-1:-1:-1;;;;;7144:55:75;;7225:20;;7246:1;7225:23;;;;;;;:::i;:::-;;;;;;;7275:20;7322:22;:51;;;7374:1;7322:54;;;;;;;;:::i;:::-;;;;;;;7144:254;;;;;;;;;;;;;;;;31858:25:129;;;31902:10;31948:15;;;31943:2;31928:18;;31921:43;32000:15;31995:2;31980:18;;31973:43;31846:2;31831:18;;31659:363;7144:254:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7091:307;-1:-1:-1;;;;;;7441:26:75;;7433:131;;;;-1:-1:-1;;;7433:131:75;;32524:2:129;7433:131:75;;;32506:21:129;32563:2;32543:18;;;32536:30;32602:34;32582:18;;;32575:62;32673:34;32653:18;;;32646:62;32745:30;32724:19;;;32717:59;32793:19;;7433:131:75;32322:496:129;7433:131:75;7750:13;;7764:17;7750:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7719:64:75;;7750:32;;;;;7719:64;;;;7787:1;7718:70;;;:75;7714:603;;-1:-1:-1;7714:603:75;;8024:13;-1:-1:-1;;;;;8024:46:75;;8096:20;;8117:1;8096:23;;;;;;;:::i;:::-;;;;;;;8151:13;;8165:17;8151:32;;;;;;;;;:::i;:::-;8024:228;;-1:-1:-1;;;;;;8024:228:75;;;;;;;;;;28294:25:129;;;;8151:32:75;;;;;;;28335:18:129;;;28328:45;-1:-1:-1;8024:228:75;28409:23:129;;28389:18;;;28382:51;28267:18;;8024:228:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7934:22;:44;;;7979:17;7934:63;;;;;;;;;;:::i;:::-;;;;;;;7998:22;7934:87;;;;;;;;:::i;:::-;:318;;;;:87;;;;;;;;;;;:318;8274:24;;;;:::i;:::-;;;;7714:603;-1:-1:-1;6976:3:75;;;;:::i;:::-;;;;6926:1405;;;;8421:46;8483:22;-1:-1:-1;;;;;8470:36:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8470:36:75;;8421:85;;8525:6;8520:185;8541:22;8537:1;:26;8520:185;;;8624:22;:44;;;8669:17;8624:63;;;;;;;;;;:::i;:::-;;;;;;;8688:1;8624:66;;;;;;;;:::i;:::-;;;;;;;8588:30;8619:1;8588:33;;;;;;;;:::i;:::-;:102;;;;:33;;;;;;;;;;;:102;8565:3;;;;:::i;:::-;;;;8520:185;;;;8784:30;8718:22;:44;;;8763:17;8718:63;;;;;;;;;;:::i;:::-;;;;;;:96;;;;6615:2210;;6594:19;;;;;:::i;:::-;;;;6518:2307;;;;8835:30;8868:19;-1:-1:-1;;;;;8868:34:75;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9060:78;;-1:-1:-1;;;9060:78:75;;8835:69;;-1:-1:-1;;;;;;9060:41:75;;;;;:78;;9102:13;;;;9117:20;;9060:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9060:78:75;;;;;;;;;;;;:::i;:::-;9018:39;;;:120;-1:-1:-1;9018:39:75;5476:3709;-1:-1:-1;;;;;;;;5476:3709:75:o;4299:136:57:-;2125:14;;:35;;-1:-1:-1;;;2125:35:57;;2149:10;2125:35;;;3978:51:129;-1:-1:-1;;;;;2125:14:57;;;;:23;;3951:18:129;;2125:35:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:57;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:57::1;:27:::0;;;4391:37:::1;::::0;160:25:129;;;4398:10:57::1;::::0;4391:37:::1;::::0;148:2:129;133:18;4391:37:57::1;;;;;;;4299:136::o:0;2883:685:125:-;2175:9;;-1:-1:-1;;;;;2175:9:125;2161:10;:23;2153:69;;;;-1:-1:-1;;;2153:69:125;;33795:2:129;2153:69:125;;;33777:21:129;33834:2;33814:18;;;33807:30;33873:34;33853:18;;;33846:62;-1:-1:-1;;;33924:18:129;;;33917:31;33965:19;;2153:69:125;33593:397:129;2153:69:125;3084:19:::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3084:19:125::1;3113:33:::0;;;3156:47:::1;3190:12;3156:47:::0;::::1;:24;::::0;;::::1;:47:::0;;;;3213:61;;::::1;:33;::::0;::::1;:61:::0;3284:37:::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;3308:13;;;;;;3284:37;::::1;3308:13:::0;;;;3284:37;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;;3284:21:125::1;::::0;;::::1;:37:::0;;;;3445:19;::::1;::::0;3284:7;;3445:19:::1;;;:::i;:::-;;::::0;;-1:-1:-1;;3445:19:125;;::::1;::::0;;;;;;3435:30;;3445:19:::1;3435:30:::0;;::::1;::::0;3418:13:::1;::::0;;::::1;::::0;;::::1;3404:28;::::0;;;:13:::1;:28:::0;;;;;;;:61;3495:13;::::1;::::0;3480:38:::1;::::0;::::1;::::0;3510:7;;3480:38:::1;:::i;:::-;;;;;;;;3544:13;::::0;:17:::1;::::0;:13:::1;;::::0;:17:::1;:::i;:::-;3528:13;:33:::0;;-1:-1:-1;;3528:33:125::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;2883:685:125:o;4220:9042:72:-;-1:-1:-1;;;;;;;;;;;;;;;;;4502:7:72;4542:25;4534:93;;;;-1:-1:-1;;;4534:93:72;;35409:2:129;4534:93:72;;;35391:21:129;35448:2;35428:18;;;35421:30;-1:-1:-1;;;;;;;;;;;35467:18:129;;;35460:62;35558:25;35538:18;;;35531:53;35601:19;;4534:93:72;35207:419:129;4534:93:72;4684:17;;;;:24;4660:48;;4659:122;;;;-1:-1:-1;4750:23:72;;;;:30;4726:54;;4659:122;:195;;;;-1:-1:-1;4822:24:72;;;;:31;4798:55;;4659:195;:272;;;;-1:-1:-1;4895:28:72;;;;:35;4871:59;;4659:272;4638:384;;;;-1:-1:-1;;;4638:384:72;;35833:2:129;4638:384:72;;;35815:21:129;35872:2;35852:18;;;35845:30;-1:-1:-1;;;;;;;;;;;35891:18:129;;;35884:62;35982:34;35962:18;;;35955:62;-1:-1:-1;;;36033:19:129;;;36026:32;36075:19;;4638:384:72;35631:469:129;4638:384:72;5088:35;;:42;5054:23;;;;:30;:76;5033:191;;;;-1:-1:-1;;;5033:191:72;;36307:2:129;5033:191:72;;;36289:21:129;36346:2;36326:18;;;36319:30;;;-1:-1:-1;;;;;;;;;;;36365:18:129;;;36358:62;36456:34;36436:18;;;36429:62;-1:-1:-1;;;36507:19:129;;;36500:35;36552:19;;5033:191:72;36105:472:129;5033:191:72;5274:12;5243:44;;:20;:44;;;;5235:117;;;;-1:-1:-1;;;5235:117:72;;36784:2:129;5235:117:72;;;36766:21:129;36823:2;36803:18;;;36796:30;-1:-1:-1;;;;;;;;;;;36842:18:129;;;36835:62;36933:30;36913:18;;;36906:58;36981:19;;5235:117:72;36582:424:129;5235:117:72;5869:19;;;;;;;;5842:24;5869:19;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;5869:19:72;6225:13;-1:-1:-1;;;;;6212:34:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6212:34:72;-1:-1:-1;6178:31:72;;;:68;6304:13;-1:-1:-1;;;;;6291:34:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6291:34:72;-1:-1:-1;6256:69:72;;-1:-1:-1;;;;;;;;;;;;;;;;;6418:6:72;:23;;;:30;-1:-1:-1;;;;;6404:45:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6404:45:72;-1:-1:-1;6377:72:72;;6499:23;;;;:30;-1:-1:-1;;;;;6485:45:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6485:45:72;;6459:10;:23;;:71;;;;6709:27;6739:87;6777:13;;6739:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6792:33:72;;;-1:-1:-1;;;6792:33:72;;;;-1:-1:-1;;;;;6792:19:72;:31;;-1:-1:-1;6792:31:72;;-1:-1:-1;6792:33:72;;;;;;;;;;;;;;:31;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6739:37;:87::i;:::-;6709:117;;6846:9;6841:1638;6865:6;:23;;;:30;6861:1;:34;6841:1638;;;7157:40;:6;:23;;;7181:1;7157:26;;;;;;;;:::i;:::-;;;;;;;10532:9:89;;10471:16;10522:20;;;10578:4;10574:13;;;10568:20;10555:34;;;10627:4;10614:18;;;10402:246;7157:40:72;7128:10;:23;;;7152:1;7128:26;;;;;;;;:::i;:::-;;;;;;;;;;:69;7219:6;;7215:277;;7328:23;;;;7352:5;7356:1;7352;:5;:::i;:::-;7328:30;;;;;;;;:::i;:::-;;;;;;;7320:39;;7290:10;:23;;;7314:1;7290:26;;;;;;;;:::i;:::-;;;;;;;7282:35;;:77;7249:224;;;;;-1:-1:-1;;;7249:224:72;;37595:2:129;7249:224:72;;;37577:21:129;37614:18;;;37607:30;;;;-1:-1:-1;;;;;;;;;;;37653:18:129;;;37646:62;37744:34;37724:18;;;37717:62;37796:19;;7249:224:72;37393:428:129;7249:224:72;7653:19;-1:-1:-1;;;;;7653:55:72;;7747:10;:23;;;7771:1;7747:26;;;;;;;;:::i;:::-;;;;;;;7812:20;7865:6;:35;;;7901:1;7865:38;;;;;;;;:::i;:::-;;;;;;;7653:273;;;;;;;;;;;;;;;;31858:25:129;;;31902:10;31948:15;;;31943:2;31928:18;;31921:43;32000:15;31995:2;31980:18;;31973:43;31846:2;31831:18;;31659:363;7653:273:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7602:324:72;:10;:24;;;7627:1;7602:27;;;;;;;;:::i;:::-;;;;;;:324;;;;;8217:247;8247:199;8344:75;8399:19;8369:10;:24;;;8394:1;8369:27;;;;;;;;:::i;:::-;;;;;;;:49;8344:24;:75::i;:::-;8247:6;:23;;;8271:1;8247:26;;;;;;;;:::i;:::-;;;;;;;:67;;:199;;;;:::i;8217:247::-;8211:253;-1:-1:-1;6897:3:72;;;;:::i;:::-;;;;6841:1638;;;;6541:1948;8762:12;:3;:10;:12::i;:::-;9106:20;;8756:18;;-1:-1:-1;9106:20:72;;9077:26;9106:20;9172:65;;9236:1;9172:65;;;9196:10;-1:-1:-1;;;;;9196:35:72;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9140:97;;9257:9;9252:3139;9272:24;;;9252:3139;;;9480:21;9476:369;;;9654:20;9558:116;;9629:21;9558:19;-1:-1:-1;;;;;9558:43:72;;9608:13;;9622:1;9608:16;;;;;;;:::i;:::-;9558:68;;;;;;-1:-1:-1;;;;;;9558:68:72;;;9608:16;;;;;9558:68;;;38157:36:129;-1:-1:-1;38130:18:129;;9558:68:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;;;:::i;:::-;:116;;9525:301;;;;-1:-1:-1;;;9525:301:72;;38539:2:129;9525:301:72;;;38521:21:129;38578:3;38558:18;;;38551:31;-1:-1:-1;;;;;;;;;;;38598:18:129;;;38591:62;38689:34;38669:18;;;38662:62;38761:34;38740:19;;;38733:63;-1:-1:-1;;;38812:19:129;;;38805:37;38859:19;;9525:301:72;38337:547:129;9525:301:72;10114:14;-1:-1:-1;;;;;10114:46:72;;10211:13;;10225:1;10211:16;;;;;;;:::i;:::-;;;;;;;;;10205:23;;10271:20;10328:6;:23;;;10352:1;10328:26;;;;;;;;:::i;:::-;;;;;;;;;;;10114:267;;-1:-1:-1;;;;;;10114:267:72;;;;;;;39114:4:129;39102:17;;;10114:267:72;;;39084:36:129;10114:267:72;39185:15:129;;;39165:18;;;39158:43;39237:15;39217:18;;;39210:43;39057:18;;10114:267:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10042:339:72;;10050:34;:6;:17;;;10068:1;10050:20;;;;;;;;:::i;:34::-;-1:-1:-1;;10042:339:72;;10013:507;;;;-1:-1:-1;;;10013:507:72;;39765:2:129;10013:507:72;;;39747:21:129;39804:2;39784:18;;;39777:30;-1:-1:-1;;;;;;;;;;;39823:18:129;;;39816:62;39914:34;39894:18;;;39887:62;39986:34;39965:19;;;39958:63;-1:-1:-1;;;40037:19:129;;;40030:32;40079:19;;10013:507:72;39563:541:129;10013:507:72;10544:30;10553:6;:17;;;10571:1;10553:20;;;;;;;;:::i;:::-;;;;;;;10544:3;:8;;:30;;;;:::i;:::-;10538:36;;10749:13;-1:-1:-1;;;;;10749:49:72;;10845:13;;10859:1;10845:16;;;;;;;:::i;:::-;;;;;;;;;10839:23;;10901:20;10954:6;:24;;;10979:1;10954:27;;;;;;;;:::i;:::-;;;;;;;;;;;10749:255;;-1:-1:-1;;;;;;10749:255:72;;;;;;;39114:4:129;39102:17;;;10749:255:72;;;39084:36:129;10749:255:72;39185:15:129;;;39165:18;;;39158:43;39237:15;39217:18;;;39210:43;39057:18;;10749:255:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10691:11;:31;;;10723:1;10691:34;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10691:313:72;;;:34;;;;;;;;;;:313;11060:31;;;:34;;11092:1;;11060:34;;;;;;:::i;:::-;;;;;;;11022:11;:32;;;11055:1;11022:35;;;;;;;;:::i;:::-;;;;;;:72;-1:-1:-1;;;;;11022:72:72;;;-1:-1:-1;;;;;11022:72:72;;;;;11181:31;11480:9;11475:902;11499:6;:23;;;:30;11495:1;:34;11475:902;;;11671:71;11689:10;:24;;;11714:1;11689:27;;;;;;;;:::i;:::-;;;;;;;11724:13;;11738:1;11724:16;;;;;;;:::i;:::-;7782:1:90;11724:16:72;;;;;7765:13:90;;;;7764:19;;7758:26;;;-1:-1:-1;7670:121:90;11671:71:72;11667:692;;;11837:13;-1:-1:-1;;;;;11837:43:72;;11935:13;;11949:1;11935:16;;;;;;;:::i;:::-;;;;;;;;;11929:23;;11999:20;12065:10;:23;;;12089:1;12065:26;;;;;;;;:::i;:::-;;;;;;;12132:6;:28;;;12161:1;12132:31;;;;;;;;:::i;:::-;;;;;;;12164:23;12132:56;;;;;;;;:::i;:::-;;;;;;;;;;;11837:382;;-1:-1:-1;;;;;;11837:382:72;;;;;;;40363:4:129;40351:17;;;11837:382:72;;;40333:36:129;11837:382:72;40434:15:129;;;40414:18;;;40407:43;40466:18;;;40459:34;;;;40529:15;40509:18;;;40502:43;40305:19;;11837:382:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11770:32;;:35;;11803:1;;11770:35;;;;;;:::i;:::-;;;;;;:449;;;;;;;:::i;:::-;-1:-1:-1;;;;;11770:449:72;;;-1:-1:-1;12285:25:72;;;;;11667:692;11531:3;;;;:::i;:::-;;;;11475:902;;;;9303:3088;9298:3;;;;;:::i;:::-;;;;9252:3139;;;;9063:3338;;12461:22;12485:21;12510:153;12558:7;12584:3;12606:6;:12;;;12637:6;:12;;;12510:30;:153::i;:::-;12460:203;;;;12685:17;12677:97;;;;-1:-1:-1;;;12677:97:72;;41000:2:129;12677:97:72;;;40982:21:129;41039:2;41019:18;;;41012:30;-1:-1:-1;;;;;;;;;;;41058:18:129;;;41051:62;41149:34;41129:18;;;41122:62;-1:-1:-1;;;41200:19:129;;;41193:34;41244:19;;12677:97:72;40798:471:129;12677:97:72;12796:16;12788:86;;;;-1:-1:-1;;;12788:86:72;;41476:2:129;12788:86:72;;;41458:21:129;41515:2;41495:18;;;41488:30;-1:-1:-1;;;;;;;;;;;41534:18:129;;;41527:62;41625:27;41605:18;;;41598:55;41670:19;;12788:86:72;41274:421:129;12788:86:72;12410:475;;12959:27;13016:20;13038:10;:23;;;12999:63;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;12999:63:72;;;;;;12989:74;;12999:63;12989:74;;;;13222:11;;12989:74;;-1:-1:-1;4220:9042:72;;-1:-1:-1;;;;;;;;;4220:9042:72:o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1757:712:75:-;1991:16;;;2005:1;1991:16;;;;;;;;;1920:7;;1929:19;;1920:7;;1991:16;;;;;;;;;;;-1:-1:-1;1991:16:75;1960:47;;2034:10;2017:11;2029:1;2017:14;;;;;;;;:::i;:::-;;;;;;;;;;:27;2070:81;;-1:-1:-1;;;2070:81:75;;2054:13;;-1:-1:-1;;;;;2070:55:75;;;;;:81;;2126:11;;2139;;2070:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2070:81:75;;;;;;;;;;;;:::i;:::-;2152:1;2070:84;;;;;;;;:::i;:::-;;;;;;;;;;;2192:87;;-1:-1:-1;;;2192:87:75;;;;;43272:25:129;;;2054:100:75;43333:23:129;;;43313:18;;;43306:51;2054:100:75;;;43373:18:129;;;43366:34;;;2054:100:75;-1:-1:-1;2169:20:75;;-1:-1:-1;;;;;2192:55:75;;;;;43245:18:129;;2192:87:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2169:110:75;;;2290:26;2319:44;2350:12;2319:30;:44::i;:::-;2290:73;;2382:12;2396:65;2413:19;2434:13;2449:11;2396:16;:65::i;:::-;2374:88;;;;;;;;1757:712;;;;;;:::o;3629:2846:125:-;1939:10;;-1:-1:-1;;;;;1939:10:125;1925;:24;1917:66;;;;-1:-1:-1;;;1917:66:125;;43613:2:129;1917:66:125;;;43595:21:129;43652:2;43632:18;;;43625:30;43691:31;43671:18;;;43664:59;43740:18;;1917:66:125;43411:353:129;1917:66:125;3836:23:::1;3862:21;::::0;;;::::1;::::0;::::1;;:::i;:::-;3836:47:::0;-1:-1:-1;3893:28:125::1;;3924:18;;::::0;::::1;:4:::0;:18:::1;:::i;:::-;3893:49:::0;;-1:-1:-1;3893:49:125;-1:-1:-1;3952:32:125::1;3987:30;::::0;;;::::1;::::0;::::1;;:::i;:::-;3952:65:::0;-1:-1:-1;4179:13:125::1;:46;4193:31;;::::0;::::1;:12:::0;:31:::1;:::i;:::-;4179:46;;;;;;;;;;;;;;;;4169:4;4158:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;4148:27;;;;;;:77;4127:185;;;::::0;-1:-1:-1;;;4127:185:125;;45572:2:129;4127:185:125::1;::::0;::::1;45554:21:129::0;45611:2;45591:18;;;45584:30;45650:34;45630:18;;;45623:62;45721:31;45701:18;;;45694:59;45770:19;;4127:185:125::1;45370:425:129::0;4127:185:125::1;4435:1;4374:16;4435:1:::0;4391:31:::1;;::::0;::::1;:12:::0;:31:::1;:::i;:::-;4374:49;;;;;;;;;;;;;;;;:63;4353:154;;;::::0;-1:-1:-1;;;4353:154:125;;46002:2:129;4353:154:125::1;::::0;::::1;45984:21:129::0;46041:2;46021:18;;;46014:30;46080:34;46060:18;;;46053:62;-1:-1:-1;;;46131:18:129;;;46124:42;46183:19;;4353:154:125::1;45800:408:129::0;4353:154:125::1;4562:46;4581:27;4562:16:::0;:46:::1;:::i;:::-;4538:70;;4545:12;4538:70;;;;4517:162;;;::::0;-1:-1:-1;;;4517:162:125;;46415:2:129;4517:162:125::1;::::0;::::1;46397:21:129::0;46454:2;46434:18;;;46427:30;46493:34;46473:18;;;46466:62;-1:-1:-1;;;46544:18:129;;;46537:43;46597:19;;4517:162:125::1;46213:409:129::0;4517:162:125::1;4810:15;4849:12;4838:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;4828:35;;;;;;4810:53;;4910:42;4954:24:::0;4994:86:::1;5010:7;5019:13;;5034:16;5052:27;4994:15;:86::i;:::-;5142:197;::::0;;::::1;::::0;::::1;::::0;;::::1;5183:12;5142:197;::::0;;::::1;::::0;;::::1;::::0;;;5240:37;;::::1;::::0;5142:197;;;;5291:38;;5142:197;;;;5463:46;;4909:171;;-1:-1:-1;4909:171:125;;-1:-1:-1;5142:197:125;;5463:46:::1;::::0;5474:12;;5142:197;;5463:46:::1;;:::i;:::-;;;;;;;;;;;;;5453:57;;;;;;5401:16;:49;5418:12;:31;;;;;;;;;;:::i;:::-;5401:49;;;;;;;;;;;;;;;:109;;;;5552:49;5566:12;5580:20;5552:49;;;;;;;:::i;:::-;;;;;;;;5702:9;5697:586;5717:24:::0;;::::1;5697:586;;;6107:25;6058:75;;:17;:37;;;6096:1;6058:40;;;;;;;;:::i;:::-;;;;;;;:75;;;;:::i;:::-;-1:-1:-1::0;;;;;5969:164:125::1;1248:3;5969:17;:38;;;6008:1;5969:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5969:66:125::1;;;;;:::i;:::-;:164;5948:325;;;6252:7;;;;;;;;;3629:2846:::0;;;:::o;5948:325::-:1;5743:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5697:586;;;-1:-1:-1::0;6318:29:125::1;::::0;::::1;;6293:22;:54:::0;6445:22:::1;::::0;::::1;::::0;::::1;::::0;6412:31:::1;::::0;6318:12;6412:31:::1;:::i;:::-;6398:70;;;;;;;;;;;;3826:2649;;;;;;;;3629:2846:::0;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;48859:2:129;2401:73:0::1;::::0;::::1;48841:21:129::0;48898:2;48878:18;;;48871:30;48937:34;48917:18;;;48910:62;-1:-1:-1;;;48988:18:129;;;48981:36;49034:19;;2401:73:0::1;48657:402:129::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;2465:327:125:-:0;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:3;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;49266:2:129;3157:201:1;;;49248:21:129;49305:2;49285:18;;;49278:30;49344:34;49324:18;;;49317:62;-1:-1:-1;;;49395:18:129;;;49388:44;49449:19;;3157:201:1;49064:410:129;3157:201:1;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;2630:47:125::1;2648:15;2000:1:57;2630:17:125;:47::i;:::-;2687:32;2706:12;2687:18;:32::i;:::-;2729:10;:24:::0;;-1:-1:-1;;;;;2729:24:125;;::::1;-1:-1:-1::0;;;;;;2729:24:125;;::::1;;::::0;;;2763:9:::1;:22:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3479:99:1;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;38157:36:129;;3553:14:1;;38145:2:129;38130:18;3553:14:1;;;;;;;3479:99;3101:483;2465:327:125;;;;:::o;4911:437:57:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:57;-1:-1:-1;;;;;2285:23:57;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:57;:10;-1:-1:-1;;;;;2271:39:57;;2263:94;;;;-1:-1:-1;;;2263:94:57;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:57;;49880:2:129;5104:150:57::1;::::0;::::1;49862:21:129::0;49919:2;49899:18;;;49892:30;49958:34;49938:18;;;49931:62;50029:26;50009:18;;;50002:54;50073:19;;5104:150:57::1;49678:420:129::0;5104:150:57::1;5264:7;:25:::0;;;5304:37:::1;::::0;160:25:129;;;5313:10:57::1;::::0;5304:37:::1;::::0;148:2:129;133:18;5304:37:57::1;14:177:129::0;6024:360:57;-1:-1:-1;;;;;6127:40:57;;6106:160;;;;-1:-1:-1;;;6106:160:57;;50305:2:129;6106:160:57;;;50287:21:129;50344:2;50324:18;;;50317:30;50383:34;50363:18;;;50356:62;50454:34;50434:18;;;50427:62;-1:-1:-1;;;50505:19:129;;;50498:40;50555:19;;6106:160:57;50103:477:129;6106:160:57;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:57;;;50845:34:129;;50915:15;;;50910:2;50895:18;;50888:43;6281:52:57;;50780:18:129;6281:52:57;;;;;;;6343:14;:34;;-1:-1:-1;;;;;;6343:34:57;-1:-1:-1;;;;;6343:34:57;;;;;;;;;;6024:360::o;7082:580:89:-;-1:-1:-1;;;;;;;;;;;;;;;;;7182:23:89;;:::i;:::-;7226:3;;7215:14;;:8;7250:3;;;;7239:8;;;:14;7263:8;;;;:12;;;-1:-1:-1;;7450:1:89;7444:4;7215:14;7434:1;7427:4;7420:5;7416:16;7405:53;7394:64;-1:-1:-1;7394:64:89;7555:48;;;;7528:75;;7555:48;7580:9;7528:75;;7630:7;7622:33;;;;-1:-1:-1;;;7622:33:89;;51144:2:129;7622:33:89;;;51126:21:129;51183:2;51163:18;;;51156:30;-1:-1:-1;;;51202:18:129;;;51195:43;51255:18;;7622:33:89;50942:337:129;7622:33:89;7172:490;;7082:580;;;;:::o;4821:615::-;-1:-1:-1;;;;;;;;;;;;;;;;;4924:23:89;;:::i;:::-;4968:4;;4957:15;;:8;4993:4;;;;4982:8;;;:15;5018:4;;5007:8;;;;:15;;;;5043:4;;;;5032:8;;;:15;-1:-1:-1;;5223:1:89;5217:4;4957:15;5207:1;5200:4;5193:5;5189:16;5178:53;5167:64;-1:-1:-1;5167:64:89;5328:48;;;;5301:75;5404:7;5396:33;;;;-1:-1:-1;;;5396:33:89;;51486:2:129;5396:33:89;;;51468:21:129;51525:2;51505:18;;;51498:30;-1:-1:-1;;;51544:18:129;;;51537:43;51597:18;;5396:33:89;51284:337:129;4068:128:89;4117:14;;:::i;:::-;-1:-1:-1;4150:39:89;;;;;;;;3633:77;4150:39;;;;;;3750:77;4150:39;;;;;;;;;;;;;;3867:77;4150:39;;3984:77;4150:39;;;;;;;;;;;;;;;4068:128::o;11042:451::-;-1:-1:-1;;;;;;;;;;;;;;;;;11121:12:89;;;11183:24;-1:-1:-1;;;;;;;;;;;11191:2:89;11183:24;:::i;:::-;11171:36;;11218:239;11257:13;11268:1;11257:10;:13::i;:::-;11245:25;;-1:-1:-1;11245:25:89;-1:-1:-1;;;;;;;;;;;;11334:1:89;11331;11324:24;11316:4;:32;11312:92;;;11376:13;;;;;;;;;;;;;;;;;;;;11042:451;-1:-1:-1;;;11042:451:89:o;11312:92::-;-1:-1:-1;;;;;;;;;;;11432:1:89;11429;11422:24;11418:28;;11218:239;;9187:1112;9395:31;;;;;;;;;;;;;;;;;;9436;;;;;;;;;;;;;;;;9373:4;;;;9395:31;9478:24;;:::i;:::-;9518:9;9513:302;9537:1;9533;:5;9513:302;;;9559:9;9571:5;:1;9575;9571:5;:::i;:::-;9559:17;;9605:2;9608:1;9605:5;;;;;;;:::i;:::-;;;;;:7;9590:5;9596;:1;9605:7;9596:5;:::i;:::-;9590:12;;;;;;;:::i;:::-;;;;:22;9641:2;9644:1;9641:5;;;;;;;:::i;:::-;;;;;:7;;;9626:5;9632:1;9636;9632:5;;;;:::i;:::-;9626:12;;;;;;;:::i;:::-;;;;:22;9677:2;9680:1;9677:5;;;;;;;:::i;:::-;;;;;:7;:10;9662:5;9668;:1;9672;9668:5;:::i;:::-;9662:12;;;;;;;:::i;:::-;;;;:25;9716:2;9719:1;9716:5;;;;;;;:::i;:::-;;;;;:7;9724:1;9716:10;;;;9701:5;9707;:1;9711;9707:5;:::i;:::-;9701:12;;;;;;;:::i;:::-;;;;:25;9755:2;9758:1;9755:5;;;;;;;:::i;:::-;;;;;:7;;;9763:1;9755:10;;;;;;;:::i;:::-;;;;;9740:5;9746;:1;9750;9746:5;:::i;:::-;9740:12;;;;;;;:::i;:::-;;;;:25;9794:2;9797:1;9794:5;;;;;;;:::i;:::-;;;;;:7;;;9802:1;9794:10;;;;;;;:::i;:::-;;;;;9779:5;9785;:1;9789;9785:5;:::i;:::-;9779:12;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;9540:3:89;;;;:::i;:::-;;;;9513:302;;;;9825:21;;:::i;:::-;9856:12;10030:4;10025:3;10010:13;10003:5;10000:1;9988:10;9977:58;10280:6;;9966:69;;10280:11;;;;-1:-1:-1;10263:29:89;;-1:-1:-1;;;;;;;;;;9187:1112:89:o;3313:467:90:-;3424:7;3443:14;3460:44;3486:17;3460:25;:44::i;:::-;3443:61;-1:-1:-1;3519:11:90;;3515:235;;3628:13;3571:70;;3577:17;3622:1;3595:17;:24;:28;;;;:::i;:::-;3577:47;;;;;;;;:::i;:::-;;;;;;;3571:70;3546:193;;;;-1:-1:-1;;;3546:193:90;;51828:2:129;3546:193:90;;;51810:21:129;51867:2;51847:18;;;51840:30;51906:34;51886:18;;;51879:62;51977:33;51957:18;;;51950:61;52028:19;;3546:193:90;51626:427:129;3546:193:90;3767:6;-1:-1:-1;3313:467:90;;;;;:::o;7175:406::-;7231:6;;7275:209;7282:5;;7275:209;;7309:5;7313:1;7309;:5;:::i;:::-;7303:12;;;;7398:7;;;;:::i;:::-;;;;7275:209;;5696:1197:89;-1:-1:-1;;;;;;;;;;;;;;;;;5822:4:89;5818:1;:8;;;5810:37;;;;-1:-1:-1;;;5810:37:89;;52462:2:129;5810:37:89;;;52444:21:129;52501:2;52481:18;;;52474:30;-1:-1:-1;;;52520:18:129;;;52513:46;52576:18;;5810:37:89;52260:340:129;5810:37:89;5891:1;:6;;5896:1;5891:6;5888:44;;;-1:-1:-1;5920:1:89;5913:8;;5888:44;6014:19;;;;;;;;;5987:24;6014:19;;;;;;;;;6143:1;;6206;;6335:481;6346:1;6341:6;;:1;:6;;;6335:481;;6491:1;6481:6;;;;;;;6480:12;;:17;6476:84;;;6527:14;6532:3;6537;6527:4;:14::i;:::-;6521:20;;6476:84;6642:14;6647:3;6652;6642:4;:14::i;:::-;6636:20;-1:-1:-1;6763:7:89;6769:1;6763:7;;;;;6788:3;6335:481;;;-1:-1:-1;6883:3:89;;5696:1197;-1:-1:-1;;;;;5696:1197:89:o;4459:295::-;-1:-1:-1;;;;;;;;;;;;;;;;;4598:3:89;;:8;:20;;;;-1:-1:-1;4610:3:89;;;;:8;4598:20;4594:154;;;-1:-1:-1;;4641:13:89;;;;;;;;;-1:-1:-1;4641:13:89;;;;;;;;4459:295::o;4594:154::-;4692:45;;;;;;;;4700:1;:3;;;4692:45;;;;-1:-1:-1;;;;;;;;;;;4719:1:89;:3;;;:16;;;;:::i;:::-;4705:31;;-1:-1:-1;;;;;;;;;;;4705:31:89;:::i;:::-;4692:45;;4685:52;4459:295;-1:-1:-1;;4459:295:89:o;4594:154::-;4459:295;;;:::o;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:4;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;52807:2:129;1654:68:0;;;52789:21:129;;;52826:18;;;52819:30;52885:34;52865:18;;;52858:62;52937:18;;1654:68:0;52605:356:129;2673:187:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;5843:1257:90:-;5910:12;6028:15;6106:23;6142:20;6155:6;6142:12;:20::i;:::-;6132:31;;-1:-1:-1;;;;;6132:31:90;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6132:31:90;;6106:57;;6219:18;6471:9;6466:601;6500:10;:17;6487:10;:30;6486:45;;;;;6527:3;6523:1;:7;6486:45;6466:601;;;6630:1;:6;;;-1:-1:-1;6717:16:90;;;:21;6713:344;;6902:1;6889:16;;6864:10;6875;6864:22;;;;;;;;:::i;:::-;;;;:41;-1:-1:-1;;;;;6864:41:90;;;;;;;;;7028:12;;;;;6713:344;6533:3;;;:::i;:::-;;;6466:601;;;-1:-1:-1;7083:10:90;;5843:1257;-1:-1:-1;;;;5843:1257:90:o;2943:441:57:-;3077:14;;-1:-1:-1;;;;;3077:14:57;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:57;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:57;;53168:2:129;3048:197:57;;;53150:21:129;53207:2;53187:18;;;53180:30;53246:34;53226:18;;;53219:62;53317:34;53297:18;;;53290:62;-1:-1:-1;;;53368:19:129;;;53361:38;53416:19;;3048:197:57;52966:475:129;3048:197:57;3255:7;:26;;;3296:36;;160:25:129;;;3303:10:57;;3296:36;;148:2:129;133:18;3296:36:57;;;;;;;3342:35;3361:15;3342:18;:35::i;:::-;2943:441;;:::o;11614:433:89:-;11668:7;;;-1:-1:-1;;;;;;;;;;;11799:1:89;-1:-1:-1;;;;;;;;;;;11783:1:89;-1:-1:-1;;;;;;;;;;;11767:1:89;11764;11757:24;11750:47;11743:70;11728:85;;11910:9;11922:91;11929:4;11935:65;-1:-1:-1;;;;;;;;;;;11922:6:89;:91::i;:::-;12032:4;;11910:103;;-1:-1:-1;11614:433:89;;-1:-1:-1;;;11614:433:89:o;1193:1693:90:-;1283:7;576:3;1414:17;:24;:49;;1406:142;;;;-1:-1:-1;;;1406:142:90;;53648:2:129;1406:142:90;;;53630:21:129;53687:2;53667:18;;;53660:30;;;53726:34;53706:18;;;53699:62;53797:34;53777:18;;;53770:62;-1:-1:-1;;;53848:19:129;;;53841:35;53893:19;;1406:142:90;53446:472:129;1406:142:90;1624:24;;1620:77;;-1:-1:-1;1684:1:90;;1193:1693;-1:-1:-1;1193:1693:90:o;1620:77::-;1775:14;1878:15;2185:17;2203:1;2185:20;;;;;;;;:::i;:::-;;;;;2174:1;2185:20;;;;;2174:32;;;;-1:-1:-1;2289:568:90;2313:17;:24;2309:1;:28;2289:568;;;2485:17;2503:1;2485:20;;;;;;;;:::i;:::-;;;;;2474:1;2485:20;;;;;2474:32;;-1:-1:-1;2670:16:90;;;2662:100;;;;-1:-1:-1;;;2662:100:90;;54125:2:129;2662:100:90;;;54107:21:129;54164:2;54144:18;;;54137:30;54203:34;54183:18;;;54176:62;54274:34;54254:18;;;54247:62;-1:-1:-1;;;54325:19:129;;;54318:38;54373:19;;2662:100:90;53923:475:129;2662:100:90;2829:16;;;;2339:3;;;:::i;:::-;;;2289:568;;;-1:-1:-1;2873:6:90;;1193:1693;-1:-1:-1;;;1193:1693:90:o;12053:874:89:-;12144:14;12170:12;12192:24;;:::i;:::-;12226:20;;:::i;:::-;12267:4;12256:15;;;12339:8;;;:15;;;12423:8;;;:15;;;12507:8;;;:16;;;12533:8;;;:20;;;12563:8;;;:19;;;12671:6;12665:4;12256:15;12569:1;12648:4;12641:5;12637:16;12626:58;12615:69;-1:-1:-1;12615:69:89;12781:48;;;;12754:75;12856:7;12848:46;;;;-1:-1:-1;;;12848:46:89;;54605:2:129;12848:46:89;;;54587:21:129;54644:2;54624:18;;;54617:30;54683:28;54663:18;;;54656:56;54729:18;;12848:46:89;54403:350:129;12848:46:89;-1:-1:-1;12911:9:89;;;-1:-1:-1;;;;;12053:874:89:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:148:129:-;-1:-1:-1;;;;;288:31:129;;278:42;;268:70;;334:1;331;324:12;349:288;432:6;485:2;473:9;464:7;460:23;456:32;453:52;;;501:1;498;491:12;453:52;540:9;527:23;559:48;601:5;559:48;:::i;642:180::-;701:6;754:2;742:9;733:7;729:23;725:32;722:52;;;770:1;767;760:12;722:52;-1:-1:-1;793:23:129;;642:180;-1:-1:-1;642:180:129:o;827:127::-;888:10;883:3;879:20;876:1;869:31;919:4;916:1;909:15;943:4;940:1;933:15;959:257;1031:4;1025:11;;;1063:17;;-1:-1:-1;;;;;1095:34:129;;1131:22;;;1092:62;1089:88;;;1157:18;;:::i;:::-;1193:4;1186:24;959:257;:::o;1221:255::-;1293:2;1287:9;1335:6;1323:19;;-1:-1:-1;;;;;1357:34:129;;1393:22;;;1354:62;1351:88;;;1419:18;;:::i;1481:275::-;1552:2;1546:9;1617:2;1598:13;;-1:-1:-1;;1594:27:129;1582:40;;-1:-1:-1;;;;;1637:34:129;;1673:22;;;1634:62;1631:88;;;1699:18;;:::i;:::-;1735:2;1728:22;1481:275;;-1:-1:-1;1481:275:129:o;1761:282::-;1815:5;1863:4;1851:9;1846:3;1842:19;1838:30;1835:50;;;1881:1;1878;1871:12;1835:50;1903:22;;:::i;:::-;1894:31;;1961:9;1948:23;1941:5;1934:38;2032:2;2021:9;2017:18;2004:32;1999:2;1992:5;1988:14;1981:56;1761:282;;;;:::o;2048:646::-;2098:5;2151:3;2144:4;2136:6;2132:17;2128:27;2118:55;;2169:1;2166;2159:12;2118:55;2202:2;2196:9;2244:2;2236:6;2232:15;2313:6;2301:10;2298:22;-1:-1:-1;;;;;2265:10:129;2262:34;2259:62;2256:88;;;2324:18;;:::i;:::-;2364:10;2360:2;2353:22;;2395:6;2436:2;2428:6;2424:15;2462:3;2454:6;2451:15;2448:35;;;2479:1;2476;2469:12;2448:35;2503:6;2518:146;2534:6;2529:3;2526:15;2518:146;;;2602:17;;2590:30;;2649:4;2640:14;;;;2551;2518:146;;2699:320;2753:5;2801:4;2789:9;2784:3;2780:19;2776:30;2773:50;;;2819:1;2816;2809:12;2773:50;2841:22;;:::i;:::-;2832:31;;2886:40;2922:3;2911:9;2886:40;:::i;:::-;2879:5;2872:55;2961:51;3008:3;3001:4;2990:9;2986:20;2961:51;:::i;:::-;2954:4;2947:5;2943:16;2936:77;2699:320;;;;:::o;3024:530::-;3188:6;3196;3204;3212;3265:3;3253:9;3244:7;3240:23;3236:33;3233:53;;;3282:1;3279;3272:12;3233:53;3318:9;3305:23;3295:33;;3347:54;3393:7;3388:2;3377:9;3373:18;3347:54;:::i;:::-;3337:64;;3420:54;3466:7;3461:2;3450:9;3446:18;3420:54;:::i;:::-;3410:64;;3493:55;3540:7;3534:3;3523:9;3519:19;3493:55;:::i;:::-;3483:65;;3024:530;;;;;;;:::o;4040:121::-;4125:10;4118:5;4114:22;4107:5;4104:33;4094:61;;4151:1;4148;4141:12;4166:132;4233:20;;4262:30;4233:20;4262:30;:::i;4303:245::-;4361:6;4414:2;4402:9;4393:7;4389:23;4385:32;4382:52;;;4430:1;4427;4420:12;4382:52;4469:9;4456:23;4488:30;4512:5;4488:30;:::i;4553:1017::-;4668:6;4676;4684;4737:2;4725:9;4716:7;4712:23;4708:32;4705:52;;;4753:1;4750;4743:12;4705:52;4792:9;4779:23;4811:48;4853:5;4811:48;:::i;:::-;4878:5;-1:-1:-1;4902:2:129;4940:18;;;4927:32;-1:-1:-1;;;;;5008:14:129;;;5005:34;;;5035:1;5032;5025:12;5005:34;5073:6;5062:9;5058:22;5048:32;;5118:7;5111:4;5107:2;5103:13;5099:27;5089:55;;5140:1;5137;5130:12;5089:55;5176:2;5163:16;5198:2;5194;5191:10;5188:36;;;5204:18;;:::i;:::-;5246:53;5289:2;5270:13;;-1:-1:-1;;5266:27:129;5262:36;;5246:53;:::i;:::-;5233:66;;5322:2;5315:5;5308:17;5362:7;5357:2;5352;5348;5344:11;5340:20;5337:33;5334:53;;;5383:1;5380;5373:12;5334:53;5438:2;5433;5429;5425:11;5420:2;5413:5;5409:14;5396:45;5482:1;5477:2;5472;5465:5;5461:14;5457:23;5450:34;;5503:5;5493:15;;;;;5527:37;5560:2;5549:9;5545:18;5527:37;:::i;:::-;5517:47;;4553:1017;;;;;:::o;5575:1336::-;5646:3;5684:5;5678:12;5711:6;5706:3;5699:19;5737:4;5778:2;5773:3;5769:12;5803:11;5830;5823:18;;5880:6;5877:1;5873:14;5866:5;5862:26;5850:38;;5922:2;5915:5;5911:14;5943:1;5964;5974:911;5990:6;5985:3;5982:15;5974:911;;;6055:16;;;6043:29;;6095:13;;6167:9;;6189:22;;;6275:11;;;;6233:13;;;;6310:1;6324:455;6340:8;6335:3;6332:17;6324:455;;;6413:15;;6463:9;;-1:-1:-1;;;;;6459:35:129;6445:50;;6541:11;;;6535:18;6519:14;;;6512:42;6581:4;6635:11;;;6629:18;-1:-1:-1;;;;;6625:51:129;6609:14;;;6602:75;6748:17;;;;6714:4;6703:16;;;;6491:1;6359:11;6324:455;;;-1:-1:-1;;6863:12:129;;;;6800:5;-1:-1:-1;;6828:15:129;;;;6016:1;6007:11;5974:911;;;-1:-1:-1;6901:4:129;;5575:1336;-1:-1:-1;;;;;;;;5575:1336:129:o;6916:383::-;7199:2;7188:9;7181:21;7162:4;7219:74;7289:2;7278:9;7274:18;7266:6;7219:74;:::i;:::-;7211:82;6916:383;-1:-1:-1;;;6916:383:129:o;7304:118::-;7390:5;7383:13;7376:21;7369:5;7366:32;7356:60;;7412:1;7409;7402:12;7427:241;7483:6;7536:2;7524:9;7515:7;7511:23;7507:32;7504:52;;;7552:1;7549;7542:12;7504:52;7591:9;7578:23;7610:28;7632:5;7610:28;:::i;7673:347::-;7724:8;7734:6;7788:3;7781:4;7773:6;7769:17;7765:27;7755:55;;7806:1;7803;7796:12;7755:55;-1:-1:-1;7829:20:129;;-1:-1:-1;;;;;7861:30:129;;7858:50;;;7904:1;7901;7894:12;7858:50;7941:4;7933:6;7929:17;7917:29;;7993:3;7986:4;7977:6;7969;7965:19;7961:30;7958:39;7955:59;;;8010:1;8007;8000:12;7955:59;7673:347;;;;;:::o;8025:1224::-;8178:6;8186;8194;8202;8210;8218;8271:3;8259:9;8250:7;8246:23;8242:33;8239:53;;;8288:1;8285;8278:12;8239:53;8327:9;8314:23;8346:48;8388:5;8346:48;:::i;:::-;8413:5;-1:-1:-1;8470:2:129;8455:18;;8442:32;8483;8442;8483;:::i;:::-;8534:7;-1:-1:-1;8592:2:129;8577:18;;8564:32;-1:-1:-1;;;;;8645:14:129;;;8642:34;;;8672:1;8669;8662:12;8642:34;8711:58;8761:7;8752:6;8741:9;8737:22;8711:58;:::i;:::-;8788:8;;-1:-1:-1;8685:84:129;-1:-1:-1;8876:2:129;8861:18;;8848:32;;-1:-1:-1;8892:16:129;;;8889:36;;;8921:1;8918;8911:12;8889:36;8959:8;8948:9;8944:24;8934:34;;9006:7;8999:4;8995:2;8991:13;8987:27;8977:55;;9028:1;9025;9018:12;8977:55;9068:2;9055:16;9094:2;9086:6;9083:14;9080:34;;;9110:1;9107;9100:12;9080:34;9163:7;9158:2;9148:6;9145:1;9141:14;9137:2;9133:23;9129:32;9126:45;9123:65;;;9184:1;9181;9174:12;9123:65;9215:2;9211;9207:11;9197:21;;9237:6;9227:16;;;;;8025:1224;;;;;;;;:::o;9353:451::-;9405:3;9443:5;9437:12;9470:6;9465:3;9458:19;9496:4;9525:2;9520:3;9516:12;9509:19;;9562:2;9555:5;9551:14;9583:1;9593:186;9607:6;9604:1;9601:13;9593:186;;;9672:13;;9687:10;9668:30;9656:43;;9719:12;;;;9754:15;;;;9629:1;9622:9;9593:186;;;-1:-1:-1;9795:3:129;;9353:451;-1:-1:-1;;;;;9353:451:129:o;9809:1493::-;9983:4;10012:2;10041;10030:9;10023:21;10079:6;10073:13;10122:4;10117:2;10106:9;10102:18;10095:32;10150:62;10207:3;10196:9;10192:19;10178:12;10150:62;:::i;:::-;10136:76;;10261:2;10253:6;10249:15;10243:22;10288:2;10284:7;10355:2;10343:9;10335:6;10331:22;10327:31;10322:2;10311:9;10307:18;10300:59;10382:51;10426:6;10410:14;10382:51;:::i;:::-;10368:65;;10482:2;10474:6;10470:15;10464:22;10442:44;;10550:2;10538:9;10530:6;10526:22;10522:31;10517:2;10506:9;10502:18;10495:59;10577:51;10621:6;10605:14;10577:51;:::i;:::-;10677:2;10665:15;;10659:22;10723;;;10719:31;;10712:4;10697:20;;10690:61;10800:21;;10830:22;;;10563:65;;-1:-1:-1;10965:23:129;;;-1:-1:-1;10868:15:129;;;;10926:1;10922:14;;;10910:27;;10906:36;;11006:1;11016:257;11030:6;11027:1;11024:13;11016:257;;;11116:2;11107:6;11099;11095:19;11091:28;11086:3;11079:41;11143:50;11186:6;11177;11171:13;11143:50;:::i;:::-;11216:15;;;;11251:12;;;;11133:60;-1:-1:-1;11052:1:129;11045:9;11016:257;;;-1:-1:-1;11290:6:129;9809:1493;-1:-1:-1;;;;;;;;;9809:1493:129:o;11307:114::-;11391:4;11384:5;11380:16;11373:5;11370:27;11360:55;;11411:1;11408;11401:12;11426:243;11483:6;11536:2;11524:9;11515:7;11511:23;11507:32;11504:52;;;11552:1;11549;11542:12;11504:52;11591:9;11578:23;11610:29;11633:5;11610:29;:::i;12513:610::-;12600:6;12608;12616;12624;12677:2;12665:9;12656:7;12652:23;12648:32;12645:52;;;12693:1;12690;12683:12;12645:52;12729:9;12716:23;12706:33;;12789:2;12778:9;12774:18;12761:32;12802:30;12826:5;12802:30;:::i;:::-;12851:5;-1:-1:-1;12907:2:129;12892:18;;12879:32;-1:-1:-1;;;;;12923:30:129;;12920:50;;;12966:1;12963;12956:12;12920:50;13005:58;13055:7;13046:6;13035:9;13031:22;13005:58;:::i;:::-;12513:610;;;;-1:-1:-1;13082:8:129;-1:-1:-1;;;;12513:610:129:o;13366:182::-;13425:4;-1:-1:-1;;;;;13450:6:129;13447:30;13444:56;;;13480:18;;:::i;:::-;-1:-1:-1;13525:1:129;13521:14;13537:4;13517:25;;13366:182::o;13553:734::-;13606:5;13659:3;13652:4;13644:6;13640:17;13636:27;13626:55;;13677:1;13674;13667:12;13626:55;13713:6;13700:20;13739:4;13763:59;13779:42;13818:2;13779:42;:::i;:::-;13763:59;:::i;:::-;13856:15;;;13942:1;13938:10;;;;13926:23;;13922:32;;;13887:12;;;;13966:15;;;13963:35;;;13994:1;13991;13984:12;13963:35;14030:2;14022:6;14018:15;14042:216;14058:6;14053:3;14050:15;14042:216;;;14138:3;14125:17;14155:30;14179:5;14155:30;:::i;:::-;14198:18;;14236:12;;;;14075;;14042:216;;;-1:-1:-1;14276:5:129;13553:734;-1:-1:-1;;;;;;13553:734:129:o;14292:688::-;14353:5;14406:3;14399:4;14391:6;14387:17;14383:27;14373:55;;14424:1;14421;14414:12;14373:55;14460:6;14447:20;14486:4;14510:59;14526:42;14565:2;14526:42;:::i;14510:59::-;14603:15;;;14689:1;14685:10;;;;14673:23;;14669:32;;;14634:12;;;;14713:15;;;14710:35;;;14741:1;14738;14731:12;14710:35;14777:2;14769:6;14765:15;14789:162;14805:6;14800:3;14797:15;14789:162;;;14873:35;14904:3;14899;14873:35;:::i;:::-;14861:48;;14929:12;;;;14831:4;14822:14;14789:162;;14985:907;15048:5;15101:3;15094:4;15086:6;15082:17;15078:27;15068:55;;15119:1;15116;15109:12;15068:55;15155:6;15142:20;15181:4;15205:59;15221:42;15260:2;15221:42;:::i;15205:59::-;15298:15;;;15384:1;15380:10;;;;15368:23;;15364:32;;;15329:12;;;;15408:15;;;15405:35;;;15436:1;15433;15426:12;15405:35;15472:2;15464:6;15460:15;15484:379;15500:6;15495:3;15492:15;15484:379;;;15586:3;15573:17;-1:-1:-1;;;;;15609:11:129;15606:35;15603:125;;;15682:1;15711:2;15707;15700:14;15603:125;15753:67;15816:3;15811:2;15797:11;15789:6;15785:24;15781:33;15753:67;:::i;:::-;15741:80;;-1:-1:-1;15841:12:129;;;;15517;;15484:379;;15897:1566;15971:5;16019:6;16007:9;16002:3;15998:19;15994:32;15991:52;;;16039:1;16036;16029:12;15991:52;16061:22;;:::i;:::-;16052:31;;16119:9;16106:23;-1:-1:-1;;;;;16189:2:129;16181:6;16178:14;16175:34;;;16205:1;16202;16195:12;16175:34;16232:56;16284:3;16275:6;16264:9;16260:22;16232:56;:::i;:::-;16225:5;16218:71;16342:2;16331:9;16327:18;16314:32;16298:48;;16371:2;16361:8;16358:16;16355:36;;;16387:1;16384;16377:12;16355:36;16423:66;16485:3;16474:8;16463:9;16459:24;16423:66;:::i;:::-;16418:2;16411:5;16407:14;16400:90;16543:2;16532:9;16528:18;16515:32;16499:48;;16572:2;16562:8;16559:16;16556:36;;;16588:1;16585;16578:12;16556:36;16624:66;16686:3;16675:8;16664:9;16660:24;16624:66;:::i;:::-;16619:2;16612:5;16608:14;16601:90;16723:50;16769:3;16764:2;16753:9;16749:18;16723:50;:::i;:::-;16718:2;16711:5;16707:14;16700:74;16808:51;16855:3;16849;16838:9;16834:19;16808:51;:::i;:::-;16801:4;16794:5;16790:16;16783:77;16913:3;16902:9;16898:19;16885:33;16869:49;;16943:2;16933:8;16930:16;16927:36;;;16959:1;16956;16949:12;16927:36;16997:58;17051:3;17040:8;17029:9;17025:24;16997:58;:::i;:::-;16990:4;16983:5;16979:16;16972:84;17109:3;17098:9;17094:19;17081:33;17065:49;;17139:2;17129:8;17126:16;17123:36;;;17155:1;17152;17145:12;17123:36;17193:58;17247:3;17236:8;17225:9;17221:24;17193:58;:::i;:::-;17186:4;17179:5;17175:16;17168:84;17305:3;17294:9;17290:19;17277:33;17261:49;;17335:2;17325:8;17322:16;17319:36;;;17351:1;17348;17341:12;17319:36;;17388:68;17452:3;17441:8;17430:9;17426:24;17388:68;:::i;:::-;17382:3;17375:5;17371:15;17364:93;;15897:1566;;;;:::o;17468:896::-;17610:6;17618;17626;17634;17642;17695:3;17683:9;17674:7;17670:23;17666:33;17663:53;;;17712:1;17709;17702:12;17663:53;17748:9;17735:23;17725:33;;17809:2;17798:9;17794:18;17781:32;-1:-1:-1;;;;;17873:2:129;17865:6;17862:14;17859:34;;;17889:1;17886;17879:12;17859:34;17928:58;17978:7;17969:6;17958:9;17954:22;17928:58;:::i;:::-;18005:8;;-1:-1:-1;17902:84:129;-1:-1:-1;18090:2:129;18075:18;;18062:32;;-1:-1:-1;18103:30:129;18062:32;18103:30;:::i;:::-;18152:5;;-1:-1:-1;18210:2:129;18195:18;;18182:32;;18226:16;;;18223:36;;;18255:1;18252;18245:12;18223:36;;18278:80;18350:7;18339:8;18328:9;18324:24;18278:80;:::i;:::-;18268:90;;;17468:896;;;;;;;;:::o;18369:467::-;18421:3;18459:5;18453:12;18486:6;18481:3;18474:19;18512:4;18541:2;18536:3;18532:12;18525:19;;18578:2;18571:5;18567:14;18599:1;18609:202;18623:6;18620:1;18617:13;18609:202;;;18688:13;;-1:-1:-1;;;;;18684:46:129;18672:59;;18751:12;;;;18786:15;;;;18645:1;18638:9;18609:202;;18841:645;19070:2;19059:9;19052:21;19033:4;19108:6;19102:13;19151:2;19146;19135:9;19131:18;19124:30;19177:62;19234:3;19223:9;19219:19;19205:12;19177:62;:::i;:::-;19163:76;;19288:4;19280:6;19276:17;19270:24;19362:2;19358:7;19346:9;19338:6;19334:22;19330:36;19325:2;19314:9;19310:18;19303:64;19384:51;19428:6;19412:14;19384:51;:::i;:::-;19376:59;;;;19473:6;19466:4;19455:9;19451:20;19444:36;18841:645;;;;;:::o;19920:501::-;20026:6;20034;20042;20095:2;20083:9;20074:7;20070:23;20066:32;20063:52;;;20111:1;20108;20101:12;20063:52;20150:9;20137:23;20169:48;20211:5;20169:48;:::i;:::-;20236:5;-1:-1:-1;20288:2:129;20273:18;;20260:32;;-1:-1:-1;20344:2:129;20329:18;;20316:32;20357;20316;20357;:::i;:::-;20408:7;20398:17;;;19920:501;;;;;:::o;20426:454::-;20737:6;20726:9;20719:25;20780:2;20775;20764:9;20760:18;20753:30;20700:4;20800:74;20870:2;20859:9;20855:18;20847:6;20800:74;:::i;:::-;20792:82;20426:454;-1:-1:-1;;;;20426:454:129:o;21120:153::-;21177:5;21222:3;21213:6;21208:3;21204:16;21200:26;21197:46;;;21239:1;21236;21229:12;21197:46;-1:-1:-1;21261:6:129;21120:153;-1:-1:-1;21120:153:129:o;21278:767::-;21459:6;21467;21475;21528:3;21516:9;21507:7;21503:23;21499:33;21496:53;;;21545:1;21542;21535:12;21496:53;21585:9;21572:23;-1:-1:-1;;;;;21655:2:129;21647:6;21644:14;21641:34;;;21671:1;21668;21661:12;21641:34;21694:64;21750:7;21741:6;21730:9;21726:22;21694:64;:::i;:::-;21684:74;;21777:60;21829:7;21824:2;21813:9;21809:18;21777:60;:::i;:::-;21767:70;;21890:3;21879:9;21875:19;21862:33;21846:49;;21920:2;21910:8;21907:16;21904:36;;;21936:1;21933;21926:12;21904:36;;21959:80;22031:7;22020:8;22009:9;22005:24;21959:80;:::i;:::-;21949:90;;;21278:767;;;;;:::o;22319:763::-;22429:6;22437;22445;22453;22506:3;22494:9;22485:7;22481:23;22477:33;22474:53;;;22523:1;22520;22513:12;22474:53;22562:9;22549:23;22581:48;22623:5;22581:48;:::i;:::-;22648:5;-1:-1:-1;22705:2:129;22690:18;;22677:32;22718:50;22677:32;22718:50;:::i;:::-;22787:7;-1:-1:-1;22846:2:129;22831:18;;22818:32;22859:50;22818:32;22859:50;:::i;:::-;22928:7;-1:-1:-1;22987:2:129;22972:18;;22959:32;23000:50;22959:32;23000:50;:::i;:::-;22319:763;;;;-1:-1:-1;22319:763:129;;-1:-1:-1;;22319:763:129:o;23087:268::-;23157:6;23210:2;23198:9;23189:7;23185:23;23181:32;23178:52;;;23226:1;23223;23216:12;23178:52;23258:9;23252:16;23277:48;23319:5;23277:48;:::i;23360:406::-;23562:2;23544:21;;;23601:2;23581:18;;;23574:30;23640:34;23635:2;23620:18;;23613:62;-1:-1:-1;;;23706:2:129;23691:18;;23684:40;23756:3;23741:19;;23360:406::o;23771:245::-;23838:6;23891:2;23879:9;23870:7;23866:23;23862:32;23859:52;;;23907:1;23904;23897:12;23859:52;23939:9;23933:16;23958:28;23980:5;23958:28;:::i;24021:404::-;24223:2;24205:21;;;24262:2;24242:18;;;24235:30;24301:34;24296:2;24281:18;;24274:62;-1:-1:-1;;;24367:2:129;24352:18;;24345:38;24415:3;24400:19;;24021:404::o;24855:127::-;24916:10;24911:3;24907:20;24904:1;24897:31;24947:4;24944:1;24937:15;24971:4;24968:1;24961:15;25832:209;25864:1;25890;25880:132;;25934:10;25929:3;25925:20;25922:1;25915:31;25969:4;25966:1;25959:15;25997:4;25994:1;25987:15;25880:132;-1:-1:-1;26026:9:129;;25832:209::o;27213:880::-;27308:6;27339:2;27382;27370:9;27361:7;27357:23;27353:32;27350:52;;;27398:1;27395;27388:12;27350:52;27431:9;27425:16;-1:-1:-1;;;;;27456:6:129;27453:30;27450:50;;;27496:1;27493;27486:12;27450:50;27519:22;;27572:4;27564:13;;27560:27;-1:-1:-1;27550:55:129;;27601:1;27598;27591:12;27550:55;27630:2;27624:9;27653:59;27669:42;27708:2;27669:42;:::i;27653:59::-;27746:15;;;27828:1;27824:10;;;;27816:19;;27812:28;;;27777:12;;;;27852:19;;;27849:39;;;27884:1;27881;27874:12;27849:39;27908:11;;;;27928:135;27944:6;27939:3;27936:15;27928:135;;;28010:10;;27998:23;;27961:12;;;;28041;;;;27928:135;;;28082:5;27213:880;-1:-1:-1;;;;;;;27213:880:129:o;28444:296::-;28513:6;28566:2;28554:9;28545:7;28541:23;28537:32;28534:52;;;28582:1;28579;28572:12;28534:52;28614:9;28608:16;-1:-1:-1;;;;;28657:5:129;28653:38;28646:5;28643:49;28633:77;;28706:1;28703;28696:12;28745:127;28806:10;28801:3;28797:20;28794:1;28787:31;28837:4;28834:1;28827:15;28861:4;28858:1;28851:15;28877:135;28916:3;-1:-1:-1;;28937:17:129;;28934:43;;;28957:18;;:::i;:::-;-1:-1:-1;29004:1:129;28993:13;;28877:135::o;29518:572::-;29745:10;29733:23;;29715:42;;29793:2;29788;29773:18;;29766:30;;;29812:18;;29805:34;;;-1:-1:-1;;;;;;29851:31:129;;29848:51;;;29895:1;29892;29885:12;29848:51;29929:6;29926:1;29922:14;29986:6;29978;29973:2;29962:9;29958:18;29945:48;30063:1;30016:22;;30040:2;30012:31;30052:13;;;-1:-1:-1;30012:31:129;29518:572;-1:-1:-1;;;29518:572:129:o;30095:953::-;30189:6;30220:2;30263;30251:9;30242:7;30238:23;30234:32;30231:52;;;30279:1;30276;30269:12;30231:52;30312:9;30306:16;-1:-1:-1;;;;;30337:6:129;30334:30;30331:50;;;30377:1;30374;30367:12;30331:50;30400:22;;30453:4;30445:13;;30441:27;-1:-1:-1;30431:55:129;;30482:1;30479;30472:12;30431:55;30511:2;30505:9;30534:59;30550:42;30589:2;30550:42;:::i;30534:59::-;30627:15;;;30709:1;30705:10;;;;30697:19;;30693:28;;;30658:12;;;;30733:19;;;30730:39;;;30765:1;30762;30755:12;30730:39;30789:11;;;;30809:209;30825:6;30820:3;30817:15;30809:209;;;30898:3;30892:10;30915:30;30939:5;30915:30;:::i;:::-;30958:18;;30842:12;;;;30996;;;;30809:209;;31053:266;31141:6;31136:3;31129:19;31193:6;31186:5;31179:4;31174:3;31170:14;31157:43;-1:-1:-1;31245:1:129;31220:16;;;31238:4;31216:27;;;31209:38;;;;31301:2;31280:15;;;-1:-1:-1;;31276:29:129;31267:39;;;31263:50;;31053:266::o;31324:330::-;31519:10;31511:6;31507:23;31496:9;31489:42;31567:2;31562;31551:9;31547:18;31540:30;31470:4;31587:61;31644:2;31633:9;31629:18;31621:6;31613;31587:61;:::i;:::-;31579:69;31324:330;-1:-1:-1;;;;;31324:330:129:o;32027:290::-;32097:6;32150:2;32138:9;32129:7;32125:23;32121:32;32118:52;;;32166:1;32163;32156:12;32118:52;32192:16;;-1:-1:-1;;;;;32237:31:129;;32227:42;;32217:70;;32283:1;32280;32273:12;32823:249;32892:6;32945:2;32933:9;32924:7;32920:23;32916:32;32913:52;;;32961:1;32958;32951:12;32913:52;32993:9;32987:16;33012:30;33036:5;33012:30;:::i;33077:175::-;33114:3;33158:4;33151:5;33147:16;33187:4;33178:7;33175:17;33172:43;;;33195:18;;:::i;:::-;33244:1;33231:15;;33077:175;-1:-1:-1;;33077:175:129:o;33257:331::-;33441:2;33430:9;33423:21;33404:4;33461:61;33518:2;33507:9;33503:18;33495:6;33487;33461:61;:::i;:::-;33453:69;;33570:10;33562:6;33558:23;33553:2;33542:9;33538:18;33531:51;33257:331;;;;;;:::o;33995:974::-;34133:4;34162:2;34191;34180:9;34173:21;34236:6;34230:13;34225:2;34214:9;34210:18;34203:41;34308:10;34302:2;34294:6;34290:15;34284:22;34280:39;34275:2;34264:9;34260:18;34253:67;34367:2;34359:6;34355:15;34349:22;34407:4;34402:2;34391:9;34387:18;34380:32;34441:12;34435:19;34491:6;34485:3;34474:9;34470:19;34463:35;34516:1;34526:147;34540:6;34537:1;34534:13;34526:147;;;34636:20;;;34632:29;;34626:36;34601:17;;;34620:3;34597:27;34590:73;34555:10;;34526:147;;;34691:6;34688:1;34685:13;34682:92;;;34762:1;34756:3;34747:6;34736:9;34732:22;34728:32;34721:43;34682:92;-1:-1:-1;34823:2:129;34811:15;;34805:22;9330:10;9319:22;;34885:4;34870:20;;9307:35;34805:22;-1:-1:-1;34952:2:129;34931:15;-1:-1:-1;;34927:29:129;34912:45;;;;34959:3;34908:55;;33995:974;-1:-1:-1;;;;33995:974:129:o;34974:228::-;35013:3;35041:10;35078:2;35075:1;35071:10;35108:2;35105:1;35101:10;35139:3;35135:2;35131:12;35126:3;35123:21;35120:47;;;35147:18;;:::i;:::-;35183:13;;34974:228;-1:-1:-1;;;;34974:228:129:o;37011:247::-;37079:6;37132:2;37120:9;37111:7;37107:23;37103:32;37100:52;;;37148:1;37145;37138:12;37100:52;37180:9;37174:16;37199:29;37222:5;37199:29;:::i;37263:125::-;37303:4;37331:1;37328;37325:8;37322:34;;;37336:18;;:::i;:::-;-1:-1:-1;37373:9:129;;37263:125::o;37826:184::-;37896:6;37949:2;37937:9;37928:7;37924:23;37920:32;37917:52;;;37965:1;37962;37955:12;37917:52;-1:-1:-1;37988:16:129;;37826:184;-1:-1:-1;37826:184:129:o;38204:128::-;38244:3;38275:1;38271:6;38268:1;38265:13;38262:39;;;38281:18;;:::i;:::-;-1:-1:-1;38317:9:129;;38204:128::o;39264:294::-;39334:6;39387:2;39375:9;39366:7;39362:23;39358:32;39355:52;;;39403:1;39400;39393:12;39355:52;39429:16;;-1:-1:-1;;39474:35:129;;39464:46;;39454:74;;39524:1;39521;39514:12;40556:237;40595:4;-1:-1:-1;;;;;40700:10:129;;;;40670;;40722:12;;;40719:38;;;40737:18;;:::i;:::-;40774:13;;40556:237;-1:-1:-1;;;40556:237:129:o;41700:644::-;41948:10;41943:3;41939:20;41930:6;41925:3;41921:16;41917:43;41912:3;41905:56;41887:3;41992:1;41987:3;41983:11;42023:6;42017:13;42072:4;42111:2;42103:6;42099:15;42132:1;42142:175;42156:6;42153:1;42150:13;42142:175;;;42219:13;;42205:28;;42255:14;;;;42292:15;;;;42178:1;42171:9;42142:175;;;-1:-1:-1;42333:5:129;;41700:644;-1:-1:-1;;;;;;;41700:644:129:o;42349:718::-;42517:4;42565:2;42554:9;42550:18;42607:10;42599:6;42595:23;42584:9;42577:42;42638:2;42676;42671;42660:9;42656:18;42649:30;42699:6;42734;42728:13;42765:6;42757;42750:22;42803:2;42792:9;42788:18;42781:25;;42841:2;42833:6;42829:15;42815:29;;42862:1;42872:169;42886:6;42883:1;42880:13;42872:169;;;42947:13;;42935:26;;43016:15;;;;42981:12;;;;42908:1;42901:9;42872:169;;;-1:-1:-1;43058:3:129;;42349:718;-1:-1:-1;;;;;;;42349:718:129:o;43769:521::-;43846:4;43852:6;43912:11;43899:25;44006:2;44002:7;43991:8;43975:14;43971:29;43967:43;43947:18;43943:68;43933:96;;44025:1;44022;44015:12;43933:96;44052:33;;44104:20;;;-1:-1:-1;;;;;;44136:30:129;;44133:50;;;44179:1;44176;44169:12;44133:50;44212:4;44200:17;;-1:-1:-1;44243:14:129;44239:27;;;44229:38;;44226:58;;;44280:1;44277;44270:12;44295:1070;44472:2;44461:9;44454:21;44524:6;44511:20;44506:2;44495:9;44491:18;44484:48;44435:4;44579:2;44571:6;44567:15;44554:29;44592:30;44616:5;44592:30;:::i;:::-;44669:10;44662:5;44658:22;44653:2;44642:9;44638:18;44631:50;;44741:2;44733:6;44729:15;44716:29;44825:2;44821:7;44812:6;44796:14;44792:27;44788:41;44768:18;44764:66;44754:94;;44844:1;44841;44834:12;44754:94;44872:31;;44926:21;;-1:-1:-1;;;;;44959:30:129;;44956:50;;;45002:1;44999;44992:12;44956:50;45050:6;45034:14;45030:27;45022:6;45018:40;45015:60;;;45071:1;45068;45061:12;45015:60;45111:4;45106:2;45095:9;45091:18;45084:32;45139:72;45206:3;45195:9;45191:19;45183:6;45178:2;45169:7;45165:16;45139:72;:::i;:::-;45125:86;;;45240:34;45270:2;45262:6;45258:15;45240:34;:::i;:::-;9330:10;9319:22;;45330:4;45315:20;;9307:35;-1:-1:-1;45353:6:129;44295:1070;-1:-1:-1;;;44295:1070:129:o;46627:391::-;46730:5;46717:19;46745:32;46769:7;46745:32;:::i;:::-;46811:10;46798:24;46786:37;;46879:4;46868:16;;;46855:30;46839:14;;;46832:54;46942:4;46931:16;;;46918:30;46902:14;;;46895:54;47005:4;46994:16;;;46981:30;46965:14;;46958:54;46627:391::o;47023:275::-;47221:3;47206:19;;47234:58;47210:9;47274:6;47234:58;:::i;47303:893::-;47584:58;47632:9;47624:6;47584:58;:::i;:::-;47679:3;47673;47662:9;47658:19;47651:32;47739:10;47730:6;47724:13;47720:30;47714:3;47703:9;47699:19;47692:59;47806:4;47798:6;47794:17;47788:24;47782:3;47771:9;47767:19;47760:53;47565:4;47860;47852:6;47848:17;47842:24;47903:3;47897;47886:9;47882:19;47875:32;47930:62;47987:3;47976:9;47972:19;47958:12;47930:62;:::i;:::-;47916:76;;48041:4;48033:6;48029:17;48023:24;48116:3;48112:8;48100:9;48092:6;48088:22;48084:37;48078:3;48067:9;48063:19;48056:66;48139:51;48183:6;48167:14;48139:51;:::i;:::-;48131:59;47303:893;-1:-1:-1;;;;;;47303:893:129:o;48201:278::-;48240:7;-1:-1:-1;;;;;48325:2:129;48322:1;48318:10;48355:2;48352:1;48348:10;48411:3;48407:2;48403:12;48398:3;48395:21;48388:3;48381:11;48374:19;48370:47;48367:73;;;48420:18;;:::i;:::-;48460:13;;48201:278;-1:-1:-1;;;;48201:278:129:o;48484:168::-;48524:7;48590:1;48586;48582:6;48578:14;48575:1;48572:21;48567:1;48560:9;48553:17;48549:45;48546:71;;;48597:18;;:::i;:::-;-1:-1:-1;48637:9:129;;48484:168::o;52058:197::-;52096:3;52124:6;52165:2;52158:5;52154:14;52192:2;52183:7;52180:15;52177:41;;;52198:18;;:::i;:::-;52247:1;52234:15;;52058:197;-1:-1:-1;;;52058:197:129:o",
    "linkReferences": {},
    "immutableReferences": {
      "18382": [
        {
          "start": 965,
          "length": 32
        },
        {
          "start": 3418,
          "length": 32
        },
        {
          "start": 7183,
          "length": 32
        },
        {
          "start": 7591,
          "length": 32
        },
        {
          "start": 8161,
          "length": 32
        }
      ],
      "18385": [
        {
          "start": 907,
          "length": 32
        },
        {
          "start": 8957,
          "length": 32
        },
        {
          "start": 9407,
          "length": 32
        }
      ],
      "18388": [
        {
          "start": 868,
          "length": 32
        },
        {
          "start": 8487,
          "length": 32
        }
      ],
      "18391": [
        {
          "start": 1193,
          "length": 32
        },
        {
          "start": 8004,
          "length": 32
        }
      ],
      "78635": [
        {
          "start": 1267,
          "length": 32
        },
        {
          "start": 11019,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "aggregator()": "245a7bfc",
    "allTaskHashes(uint32)": "2d89f6fc",
    "allTaskResponses(uint32)": "2cb223d5",
    "blsApkRegistry()": "5df45946",
    "checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))": "6efb4636",
    "createNewTask(uint256,uint32,bytes)": "6b92787e",
    "delegation()": "df5cf723",
    "generator()": "7afa1eed",
    "getCheckSignaturesIndices(address,uint32,bytes,bytes32[])": "4f739f74",
    "getLatestPendingStateHash()": "0373408d",
    "getOperatorState(address,bytes,uint32)": "3563b0d1",
    "getOperatorState(address,bytes32,uint32)": "cefdc1d4",
    "getTaskResponseWindowBlock()": "f5c9899d",
    "initialize(address,address,address,address)": "f8c8765e",
    "latestTaskNum()": "8b00ce7c",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "registryCoordinator()": "6d14a987",
    "renounceOwnership()": "715018a6",
    "respondToTask((uint256,uint32,bytes,uint32),(uint32,bytes32,bytes32,bytes32),(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))": "e4e3ad77",
    "setPauserRegistry(address)": "10d67a2f",
    "setStaleStakesForbidden(bool)": "416c7e5e",
    "stakeRegistry()": "68304835",
    "staleStakesForbidden()": "b98d0908",
    "taskNumber()": "72d18e8d",
    "transferOwnership(address)": "f2fde38b",
    "trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": "171f1d5b",
    "unpause(uint256)": "fabc1cbc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"_registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_taskResponseWindowBlock\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"taskIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"taskCreatedBlock\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IFinalizerTaskManager.Task\",\"name\":\"task\",\"type\":\"tuple\"}],\"name\":\"NewTaskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"StaleStakesForbiddenUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"taskIndex\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"TaskCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTaskIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"storageProofHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"pendingStateHash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct IFinalizerTaskManager.TaskResponse\",\"name\":\"taskResponse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"taskResponsedBlock\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"hashOfNonSigners\",\"type\":\"bytes32\"},{\"internalType\":\"uint96[]\",\"name\":\"quroumStakeTotals\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"quroumStakeSigned\",\"type\":\"uint96[]\"}],\"indexed\":false,\"internalType\":\"struct IFinalizerTaskManager.TaskResponseMetadata\",\"name\":\"taskResponseMetadata\",\"type\":\"tuple\"}],\"name\":\"TaskResponded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"allTaskHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"allTaskResponses\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blsApkRegistry\",\"outputs\":[{\"internalType\":\"contract IBLSApkRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint32[]\",\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point[]\",\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point[]\",\"name\":\"quorumApks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[][]\",\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\"}],\"internalType\":\"struct IBLSSignatureChecker.NonSignerStakesAndSignature\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"checkSignatures\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96[]\",\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\"}],\"internalType\":\"struct IBLSSignatureChecker.QuorumStakeTotals\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"createNewTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"nonSignerOperatorIds\",\"type\":\"bytes32[]\"}],\"name\":\"getCheckSignaturesIndices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32[]\",\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[][]\",\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\"}],\"internalType\":\"struct OperatorStateRetriever.CheckSignaturesIndices\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPendingStateHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getOperatorState\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct OperatorStateRetriever.Operator[][]\",\"name\":\"\",\"type\":\"tuple[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getOperatorState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct OperatorStateRetriever.Operator[][]\",\"name\":\"\",\"type\":\"tuple[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaskResponseWindowBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_generator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTaskNum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"taskCreatedBlock\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\"}],\"internalType\":\"struct IFinalizerTaskManager.Task\",\"name\":\"task\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTaskIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"storageProofHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"pendingStateHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IFinalizerTaskManager.TaskResponse\",\"name\":\"taskResponse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32[]\",\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point[]\",\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point[]\",\"name\":\"quorumApks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[][]\",\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\"}],\"internalType\":\"struct IBLSSignatureChecker.NonSignerStakesAndSignature\",\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\"}],\"name\":\"respondToTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setStaleStakesForbidden\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeRegistry\",\"outputs\":[{\"internalType\":\"contract IStakeRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staleStakesForbidden\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"}],\"name\":\"trySignatureAndApkVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"pairingSuccessful\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"siganatureIsValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))\":{\"details\":\"Before signature verification, the function verifies operator stake information.  This includes ensuring that the provided `referenceBlockNumber` is correct, i.e., ensure that the stake returned from the specified block number is recent enough and that the stake is either the most recent update for the total stake (of the operator) or latest before the referenceBlockNumber.\",\"params\":{\"msgHash\":\"is the hash being signed\",\"params\":\"is the struct containing information on nonsigners, stakes, quorum apks, and the aggregate signature\",\"quorumNumbers\":\"is the bytes array of quorum numbers that are being signed for\",\"referenceBlockNumber\":\"is the block number at which the stake information is being verified\"},\"returns\":{\"_0\":\"quorumStakeTotals is the struct containing the total and signed stake for each quorum\",\"_1\":\"signatoryRecordHash is the hash of the signatory record, which is used for fraud proofs\"}},\"getCheckSignaturesIndices(address,uint32,bytes,bytes32[])\":{\"params\":{\"nonSignerOperatorIds\":\"are the ids of the nonsigning operators\",\"quorumNumbers\":\"are the ids of the quorums to get the operator state for\",\"referenceBlockNumber\":\"is the block number to get the indices for\",\"registryCoordinator\":\"is the registry coordinator to fetch the AVS registry information from\"},\"returns\":{\"_0\":\"1) the indices of the quorumBitmaps for each of the operators in the @param nonSignerOperatorIds array at the given blocknumber         2) the indices of the total stakes entries for the given quorums at the given blocknumber         3) the indices of the stakes of each of the nonsigners in each of the quorums they were a             part of (for each nonsigner, an array of length the number of quorums they were a part of            that are also part of the provided quorumNumbers) at the given blocknumber         4) the indices of the quorum apks for each of the provided quorums at the given blocknumber\"}},\"getOperatorState(address,bytes,uint32)\":{\"params\":{\"blockNumber\":\"is the block number to get the operator state for\",\"quorumNumbers\":\"are the ids of the quorums to get the operator state for\",\"registryCoordinator\":\"is the registry coordinator to fetch the AVS registry information from\"},\"returns\":{\"_0\":\"2d array of Operators. For each quorum, an ordered list of Operators\"}},\"getOperatorState(address,bytes32,uint32)\":{\"params\":{\"blockNumber\":\"is the block number to get the operator state for\",\"operatorId\":\"the id of the operator to fetch the quorums lists \",\"registryCoordinator\":\"is the registry coordinator to fetch the AVS registry information from\"},\"returns\":{\"_0\":\"1) the quorumBitmap of the operator at the given blockNumber         2) 2d array of Operator structs. For each quorum the provided operator             was a part of at `blockNumber`, an ordered list of operators.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setStaleStakesForbidden(bool)\":{\"params\":{\"value\":\"to toggle staleStakesForbidden\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))\":{\"params\":{\"apk\":\"is the claimed G1 public key\",\"apkG2\":\"is provided G2 public key\",\"msgHash\":\"is the hash being signed\",\"sigma\":\"is the G1 point signature\"},\"returns\":{\"pairingSuccessful\":\"is true if the pairing precompile call was successful\",\"siganatureIsValid\":\"is true if the signature is valid\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"StaleStakesForbiddenUpdate(bool)\":{\"notice\":\"Emitted when `staleStakesForbiddenUpdate` is set\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))\":{\"notice\":\"This function is called by disperser when it has aggregated all the signatures of the operators that are part of the quorum for a particular taskNumber and is asserting them into onchain. The function checks that the claim for aggregated signatures are valid. The thesis of this procedure entails: - getting the aggregated pubkey of all registered nodes at the time of pre-commit by the disperser (represented by apk in the parameters), - subtracting the pubkeys of all the signers not in the quorum (nonSignerPubkeys) and storing  the output in apk to get aggregated pubkey of all operators that are part of quorum. - use this aggregated pubkey to verify the aggregated signature under BLS scheme. \"},\"getCheckSignaturesIndices(address,uint32,bytes,bytes32[])\":{\"notice\":\"this is called by the AVS operator to get the relevant indices for the checkSignatures function if they are not running an indexer    \"},\"getOperatorState(address,bytes,uint32)\":{\"notice\":\"returns the ordered list of operators (id and stake) for each quorum. The AVS coordinator  may call this function directly to get the operator state for a given block number\"},\"getOperatorState(address,bytes32,uint32)\":{\"notice\":\"This function is intended to to be called by AVS operators every time a new task is created (i.e.) the AVS coordinator makes a request to AVS operators. Since all of the crucial information is kept onchain,  operators don't need to run indexers to fetch the data.\"},\"getTaskResponseWindowBlock()\":{\"notice\":\"Returns the TASK_RESPONSE_WINDOW_BLOCK\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setStaleStakesForbidden(bool)\":{\"notice\":\"RegistryCoordinator owner can either enforce or not that operator stakes are staler than the delegation.minWithdrawalDelayBlocks() window.\"},\"staleStakesForbidden()\":{\"notice\":\"If true, check the staleness of the operator stakes and that its within the delegation withdrawalDelayBlocks window.\"},\"taskNumber()\":{\"notice\":\"Returns the current 'taskNumber' for the middleware\"},\"trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))\":{\"notice\":\"trySignatureAndApkVerification verifies a BLS aggregate signature and the veracity of a calculated G1 Public key\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FinalizerTaskManager.sol\":\"FinalizerTaskManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0x5e8efc3becf04d44f69f2794e7cc77d6ae291602a376ed88e6276b5917e8bcec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1248163ce62bdcf6a7d24a32c217b6330381f24393032369271e10a8e33f544c\",\"dweb:/ipfs/QmSRNEwkfa4QimC1KthYKskiDsFYc8RAc3pcbZUTTaPVgg\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff\",\"dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt\"]},\"lib/eigenlayer-middleware/src/BLSApkRegistry.sol\":{\"keccak256\":\"0xa5632faa4e055abaa0ca6b8f2803308cd11f62b283709290c676ec0a8753b95d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://987a5350e24356deb75144bddd4b0efa928f447cf1cc249bd9516091fd8d085c\",\"dweb:/ipfs/Qmf7eDFx6x8K7BVPqaCcXLqvmb1GvRs9PR6X9QF3T58acm\"]},\"lib/eigenlayer-middleware/src/BLSApkRegistryStorage.sol\":{\"keccak256\":\"0x75f2a1c1061de4fdbda56ca5a0a2434c4ff77b4839c58aad65488c291add9159\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c9b19dcb594301ce1acf0492053fca69f02f786c4ea4a0e52324d410ba24965\",\"dweb:/ipfs/QmQ7npTs5FuLaXJ18YUwQDnah93xKEHkgaQ6xta1pgAeTk\"]},\"lib/eigenlayer-middleware/src/BLSSignatureChecker.sol\":{\"keccak256\":\"0x6b318ab1dd673768a2b8d1bf0c449d6aaee6502bfb4fc70bfc5430eaeab46b45\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2136090543b81021c3e9ad87aff3a66ee02bfa17ab723bf9ef5b50f1076e4732\",\"dweb:/ipfs/QmbqPcNDwgTuubn67ZygNZ6zyXPoieS3h1QsiNjDm4hvwL\"]},\"lib/eigenlayer-middleware/src/OperatorStateRetriever.sol\":{\"keccak256\":\"0xeffa50f51cd42c93b4e6c0706b75a1d8bd7472cca9ccb3b90f8b2461312bf903\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fe1727b9d4d80fc1e0a29fa71f2003b4685933ac119d952a7b78f30fea6f6a51\",\"dweb:/ipfs/QmTZ6gqknAbQktX7qTBFH2ytAp4JRt6MxoYge7vFyw9pr4\"]},\"lib/eigenlayer-middleware/src/RegistryCoordinator.sol\":{\"keccak256\":\"0x59caf8d4ce96af759d69fe5882b2fc5fe63d5823c1df5a8b9075a13289348191\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3e100cfc80a6a373bd2124e462c751e92fe7989a875db324c9833663580d75e6\",\"dweb:/ipfs/QmWbUZXY7UXHd4cRAiCLo84QLRLNhuXA2U39dCDLMdYX9G\"]},\"lib/eigenlayer-middleware/src/RegistryCoordinatorStorage.sol\":{\"keccak256\":\"0xadb63134db9bd253c9b953a860bd1e12d29fe0b442a83b7b647be489662b8437\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://15c75a8aefd014b2afe8fb7c9acdba80ea9beb4baac8d642bfd3987db85d73d6\",\"dweb:/ipfs/QmWRFYps6mFdXZKUBYXe1cv6SLBjZMx44PNJr2A4anM3Uq\"]},\"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0x7f6aa0b9e3a7ddf3097932d073e49064326ae56303e4f40cf88c9e5a61968166\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8728c82cb251eaf5b9d7001a41a754265fdb293c0630ddd0170b842582b5a059\",\"dweb:/ipfs/Qmc55Qf7qS5uABgENmc2G79DgwWyZ6aoB1EK4togbyCj4A\"]},\"lib/eigenlayer-middleware/src/interfaces/IBLSSignatureChecker.sol\":{\"keccak256\":\"0xf3ea961264db7607a0a07593893daf27b87cf68cdd8a8271361239d08859acc7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5c01e8f6d2ce97fa65205c0fe2f269870fa00d4baec6755da2023812d818a04d\",\"dweb:/ipfs/QmRPjUy2N7T2mfyaXPcso6HfDGAWgoJhy5tS4eWQjpwGEX\"]},\"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637\",\"dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy\"]},\"lib/eigenlayer-middleware/src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25\",\"dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY\"]},\"lib/eigenlayer-middleware/src/interfaces/IRegistryCoordinator.sol\":{\"keccak256\":\"0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db\",\"dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi\"]},\"lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol\":{\"keccak256\":\"0x738a2f3e3405559cb3f5ee56e0b98a69ef543699bbe46960ed54ac660c013291\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://412d4fa03de950fa70da922fc6c136c24f3984940b33516fe1f885bf09c970c5\",\"dweb:/ipfs/QmYPbQk6YTQ2U1WRG9XzjumMACbzUKnuZRXCPTiow8iAgq\"]},\"lib/eigenlayer-middleware/src/interfaces/ISocketUpdater.sol\":{\"keccak256\":\"0x4fa9fc61ed778d76d3b0ac1974000d7cb613e413e363a2334dd08e0fcd013b01\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fb67e3964e93cc9fca3ce91a7f6b67d7b1ea95a4e0568c05ad93185191ebaad0\",\"dweb:/ipfs/QmaJKFPh99zYjjpdNUS9ZbZPwamogr5FjaxuTKDJ63jwiU\"]},\"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3\",\"dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve\"]},\"lib/eigenlayer-middleware/src/libraries/BN254.sol\":{\"keccak256\":\"0xc7c5c9529ba56d63487a02cebd5ec41e4f7044ccac6a7bdbbd53492932f1e5e9\",\"license\":\"BUSL-1.1 AND MIT\",\"urls\":[\"bzz-raw://1d3ab347b2554544eee112846bf479fcd579ce573275c59d84676207ec36be06\",\"dweb:/ipfs/Qmd8e3z1JGuHKjLAdep4u8JDBsf3j6hNShQCt14eKufJYh\"]},\"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0xb3aaa57cf56508ea674f19598de95516e4d574ecd9a634c42de158f9430d0b2d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d837b679b6b97a8561eeb97a000446dd1aa6844f89d5b64bf18dfda6076c286e\",\"dweb:/ipfs/QmXz5Nf57MCU5SppkLHjgYRp3SCQBBqrXJaKzgDSBZy1rT\"]},\"src/FinalizerTaskManager.sol\":{\"keccak256\":\"0x9df36343c1e22924ca25acb501e1c23b2eeee155d6ffa1db542e3b0bc76e9582\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e0b5517c278dda3fb43f0b3a8a92d3314a2c132ce0c858b20e2887731e25ba37\",\"dweb:/ipfs/QmQPnZe79GQY7kb7Qc1w6F9sLQdYZsFYHM9raDL1aGSBFj\"]},\"src/IFinalizerTaskManager.sol\":{\"keccak256\":\"0xaaad9835c253fb1211972a43831afe6a143fc9997358d3d40deb5f59d31eac6b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9999cb905fa1c175e27770374169e6909f916a146f6a43741c4bf91cfdc418ed\",\"dweb:/ipfs/QmZWRCm3zthPgSanckXLKiULrJjcztvtRitFNEkkbutdXS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "_registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_taskResponseWindowBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "taskIndex",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "struct IFinalizerTaskManager.Task",
              "name": "task",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "taskCreatedBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "quorumNumbers",
                  "type": "bytes"
                },
                {
                  "internalType": "uint32",
                  "name": "quorumThresholdPercentage",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewTaskCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "pauserRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserRegistrySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StaleStakesForbiddenUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "taskIndex",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TaskCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IFinalizerTaskManager.TaskResponse",
              "name": "taskResponse",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTaskIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "storageProofHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "pendingStateHash",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct IFinalizerTaskManager.TaskResponseMetadata",
              "name": "taskResponseMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "taskResponsedBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "hashOfNonSigners",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint96[]",
                  "name": "quroumStakeTotals",
                  "type": "uint96[]"
                },
                {
                  "internalType": "uint96[]",
                  "name": "quroumStakeSigned",
                  "type": "uint96[]"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TaskResponded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aggregator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allTaskHashes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allTaskResponses",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blsApkRegistry",
          "outputs": [
            {
              "internalType": "contract IBLSApkRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "struct IBLSSignatureChecker.NonSignerStakesAndSignature",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32[]",
                  "name": "nonSignerQuorumBitmapIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "struct BN254.G1Point[]",
                  "name": "nonSignerPubkeys",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G1Point[]",
                  "name": "quorumApks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apkG2",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "sigma",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "quorumApkIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "totalStakeIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[][]",
                  "name": "nonSignerStakeIndices",
                  "type": "uint32[][]"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkSignatures",
          "outputs": [
            {
              "internalType": "struct IBLSSignatureChecker.QuorumStakeTotals",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint96[]",
                  "name": "signedStakeForQuorum",
                  "type": "uint96[]"
                },
                {
                  "internalType": "uint96[]",
                  "name": "totalStakeForQuorum",
                  "type": "uint96[]"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "quorumThresholdPercentage",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createNewTask"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "generator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "nonSignerOperatorIds",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCheckSignaturesIndices",
          "outputs": [
            {
              "internalType": "struct OperatorStateRetriever.CheckSignaturesIndices",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32[]",
                  "name": "nonSignerQuorumBitmapIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "quorumApkIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "totalStakeIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[][]",
                  "name": "nonSignerStakeIndices",
                  "type": "uint32[][]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPendingStateHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorState",
          "outputs": [
            {
              "internalType": "struct OperatorStateRetriever.Operator[][]",
              "name": "",
              "type": "tuple[][]",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "operatorId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorState",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "struct OperatorStateRetriever.Operator[][]",
              "name": "",
              "type": "tuple[][]",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "operatorId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTaskResponseWindowBlock",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_aggregator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_generator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestTaskNum",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registryCoordinator",
          "outputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct IFinalizerTaskManager.Task",
              "name": "task",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "taskCreatedBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "quorumNumbers",
                  "type": "bytes"
                },
                {
                  "internalType": "uint32",
                  "name": "quorumThresholdPercentage",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IFinalizerTaskManager.TaskResponse",
              "name": "taskResponse",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTaskIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "storageProofHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "pendingStateHash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct IBLSSignatureChecker.NonSignerStakesAndSignature",
              "name": "nonSignerStakesAndSignature",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32[]",
                  "name": "nonSignerQuorumBitmapIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "struct BN254.G1Point[]",
                  "name": "nonSignerPubkeys",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G1Point[]",
                  "name": "quorumApks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apkG2",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "sigma",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "quorumApkIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "totalStakeIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[][]",
                  "name": "nonSignerStakeIndices",
                  "type": "uint32[][]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "respondToTask"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPauserRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStaleStakesForbidden"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakeRegistry",
          "outputs": [
            {
              "internalType": "contract IStakeRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "staleStakesForbidden",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "taskNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "apk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct BN254.G2Point",
              "name": "apkG2",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ]
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "sigma",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "trySignatureAndApkVerification",
          "outputs": [
            {
              "internalType": "bool",
              "name": "pairingSuccessful",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "siganatureIsValid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))": {
            "details": "Before signature verification, the function verifies operator stake information.  This includes ensuring that the provided `referenceBlockNumber` is correct, i.e., ensure that the stake returned from the specified block number is recent enough and that the stake is either the most recent update for the total stake (of the operator) or latest before the referenceBlockNumber.",
            "params": {
              "msgHash": "is the hash being signed",
              "params": "is the struct containing information on nonsigners, stakes, quorum apks, and the aggregate signature",
              "quorumNumbers": "is the bytes array of quorum numbers that are being signed for",
              "referenceBlockNumber": "is the block number at which the stake information is being verified"
            },
            "returns": {
              "_0": "quorumStakeTotals is the struct containing the total and signed stake for each quorum",
              "_1": "signatoryRecordHash is the hash of the signatory record, which is used for fraud proofs"
            }
          },
          "getCheckSignaturesIndices(address,uint32,bytes,bytes32[])": {
            "params": {
              "nonSignerOperatorIds": "are the ids of the nonsigning operators",
              "quorumNumbers": "are the ids of the quorums to get the operator state for",
              "referenceBlockNumber": "is the block number to get the indices for",
              "registryCoordinator": "is the registry coordinator to fetch the AVS registry information from"
            },
            "returns": {
              "_0": "1) the indices of the quorumBitmaps for each of the operators in the @param nonSignerOperatorIds array at the given blocknumber         2) the indices of the total stakes entries for the given quorums at the given blocknumber         3) the indices of the stakes of each of the nonsigners in each of the quorums they were a             part of (for each nonsigner, an array of length the number of quorums they were a part of            that are also part of the provided quorumNumbers) at the given blocknumber         4) the indices of the quorum apks for each of the provided quorums at the given blocknumber"
            }
          },
          "getOperatorState(address,bytes,uint32)": {
            "params": {
              "blockNumber": "is the block number to get the operator state for",
              "quorumNumbers": "are the ids of the quorums to get the operator state for",
              "registryCoordinator": "is the registry coordinator to fetch the AVS registry information from"
            },
            "returns": {
              "_0": "2d array of Operators. For each quorum, an ordered list of Operators"
            }
          },
          "getOperatorState(address,bytes32,uint32)": {
            "params": {
              "blockNumber": "is the block number to get the operator state for",
              "operatorId": "the id of the operator to fetch the quorums lists ",
              "registryCoordinator": "is the registry coordinator to fetch the AVS registry information from"
            },
            "returns": {
              "_0": "1) the quorumBitmap of the operator at the given blockNumber         2) 2d array of Operator structs. For each quorum the provided operator             was a part of at `blockNumber`, an ordered list of operators."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setStaleStakesForbidden(bool)": {
            "params": {
              "value": "to toggle staleStakesForbidden"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": {
            "params": {
              "apk": "is the claimed G1 public key",
              "apkG2": "is provided G2 public key",
              "msgHash": "is the hash being signed",
              "sigma": "is the G1 point signature"
            },
            "returns": {
              "pairingSuccessful": "is true if the pairing precompile call was successful",
              "siganatureIsValid": "is true if the signature is valid"
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))": {
            "notice": "This function is called by disperser when it has aggregated all the signatures of the operators that are part of the quorum for a particular taskNumber and is asserting them into onchain. The function checks that the claim for aggregated signatures are valid. The thesis of this procedure entails: - getting the aggregated pubkey of all registered nodes at the time of pre-commit by the disperser (represented by apk in the parameters), - subtracting the pubkeys of all the signers not in the quorum (nonSignerPubkeys) and storing  the output in apk to get aggregated pubkey of all operators that are part of quorum. - use this aggregated pubkey to verify the aggregated signature under BLS scheme. "
          },
          "getCheckSignaturesIndices(address,uint32,bytes,bytes32[])": {
            "notice": "this is called by the AVS operator to get the relevant indices for the checkSignatures function if they are not running an indexer    "
          },
          "getOperatorState(address,bytes,uint32)": {
            "notice": "returns the ordered list of operators (id and stake) for each quorum. The AVS coordinator  may call this function directly to get the operator state for a given block number"
          },
          "getOperatorState(address,bytes32,uint32)": {
            "notice": "This function is intended to to be called by AVS operators every time a new task is created (i.e.) the AVS coordinator makes a request to AVS operators. Since all of the crucial information is kept onchain,  operators don't need to run indexers to fetch the data."
          },
          "getTaskResponseWindowBlock()": {
            "notice": "Returns the TASK_RESPONSE_WINDOW_BLOCK"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "setPauserRegistry(address)": {
            "notice": "Allows the unpauser to set a new pauser registry"
          },
          "setStaleStakesForbidden(bool)": {
            "notice": "RegistryCoordinator owner can either enforce or not that operator stakes are staler than the delegation.minWithdrawalDelayBlocks() window."
          },
          "staleStakesForbidden()": {
            "notice": "If true, check the staleness of the operator stakes and that its within the delegation withdrawalDelayBlocks window."
          },
          "taskNumber()": {
            "notice": "Returns the current 'taskNumber' for the middleware"
          },
          "trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": {
            "notice": "trySignatureAndApkVerification verifies a BLS aggregate signature and the veracity of a calculated G1 Public key"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@eigenlayer-middleware/=lib/eigenlayer-middleware/",
        "@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/",
        "@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/",
        "@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/",
        "eigenlayer-middleware/=lib/eigenlayer-middleware/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/FinalizerTaskManager.sol": "FinalizerTaskManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
        "urls": [
          "bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
          "dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol": {
        "keccak256": "0x5e8efc3becf04d44f69f2794e7cc77d6ae291602a376ed88e6276b5917e8bcec",
        "urls": [
          "bzz-raw://1248163ce62bdcf6a7d24a32c217b6330381f24393032369271e10a8e33f544c",
          "dweb:/ipfs/QmSRNEwkfa4QimC1KthYKskiDsFYc8RAc3pcbZUTTaPVgg"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338",
        "urls": [
          "bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff",
          "dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/BLSApkRegistry.sol": {
        "keccak256": "0xa5632faa4e055abaa0ca6b8f2803308cd11f62b283709290c676ec0a8753b95d",
        "urls": [
          "bzz-raw://987a5350e24356deb75144bddd4b0efa928f447cf1cc249bd9516091fd8d085c",
          "dweb:/ipfs/Qmf7eDFx6x8K7BVPqaCcXLqvmb1GvRs9PR6X9QF3T58acm"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/BLSApkRegistryStorage.sol": {
        "keccak256": "0x75f2a1c1061de4fdbda56ca5a0a2434c4ff77b4839c58aad65488c291add9159",
        "urls": [
          "bzz-raw://4c9b19dcb594301ce1acf0492053fca69f02f786c4ea4a0e52324d410ba24965",
          "dweb:/ipfs/QmQ7npTs5FuLaXJ18YUwQDnah93xKEHkgaQ6xta1pgAeTk"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/BLSSignatureChecker.sol": {
        "keccak256": "0x6b318ab1dd673768a2b8d1bf0c449d6aaee6502bfb4fc70bfc5430eaeab46b45",
        "urls": [
          "bzz-raw://2136090543b81021c3e9ad87aff3a66ee02bfa17ab723bf9ef5b50f1076e4732",
          "dweb:/ipfs/QmbqPcNDwgTuubn67ZygNZ6zyXPoieS3h1QsiNjDm4hvwL"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/OperatorStateRetriever.sol": {
        "keccak256": "0xeffa50f51cd42c93b4e6c0706b75a1d8bd7472cca9ccb3b90f8b2461312bf903",
        "urls": [
          "bzz-raw://fe1727b9d4d80fc1e0a29fa71f2003b4685933ac119d952a7b78f30fea6f6a51",
          "dweb:/ipfs/QmTZ6gqknAbQktX7qTBFH2ytAp4JRt6MxoYge7vFyw9pr4"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/RegistryCoordinator.sol": {
        "keccak256": "0x59caf8d4ce96af759d69fe5882b2fc5fe63d5823c1df5a8b9075a13289348191",
        "urls": [
          "bzz-raw://3e100cfc80a6a373bd2124e462c751e92fe7989a875db324c9833663580d75e6",
          "dweb:/ipfs/QmWbUZXY7UXHd4cRAiCLo84QLRLNhuXA2U39dCDLMdYX9G"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/RegistryCoordinatorStorage.sol": {
        "keccak256": "0xadb63134db9bd253c9b953a860bd1e12d29fe0b442a83b7b647be489662b8437",
        "urls": [
          "bzz-raw://15c75a8aefd014b2afe8fb7c9acdba80ea9beb4baac8d642bfd3987db85d73d6",
          "dweb:/ipfs/QmWRFYps6mFdXZKUBYXe1cv6SLBjZMx44PNJr2A4anM3Uq"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol": {
        "keccak256": "0x7f6aa0b9e3a7ddf3097932d073e49064326ae56303e4f40cf88c9e5a61968166",
        "urls": [
          "bzz-raw://8728c82cb251eaf5b9d7001a41a754265fdb293c0630ddd0170b842582b5a059",
          "dweb:/ipfs/Qmc55Qf7qS5uABgENmc2G79DgwWyZ6aoB1EK4togbyCj4A"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IBLSSignatureChecker.sol": {
        "keccak256": "0xf3ea961264db7607a0a07593893daf27b87cf68cdd8a8271361239d08859acc7",
        "urls": [
          "bzz-raw://5c01e8f6d2ce97fa65205c0fe2f269870fa00d4baec6755da2023812d818a04d",
          "dweb:/ipfs/QmRPjUy2N7T2mfyaXPcso6HfDGAWgoJhy5tS4eWQjpwGEX"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol": {
        "keccak256": "0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf",
        "urls": [
          "bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637",
          "dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IRegistry.sol": {
        "keccak256": "0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3",
        "urls": [
          "bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25",
          "dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IRegistryCoordinator.sol": {
        "keccak256": "0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9",
        "urls": [
          "bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db",
          "dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol": {
        "keccak256": "0x738a2f3e3405559cb3f5ee56e0b98a69ef543699bbe46960ed54ac660c013291",
        "urls": [
          "bzz-raw://412d4fa03de950fa70da922fc6c136c24f3984940b33516fe1f885bf09c970c5",
          "dweb:/ipfs/QmYPbQk6YTQ2U1WRG9XzjumMACbzUKnuZRXCPTiow8iAgq"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/ISocketUpdater.sol": {
        "keccak256": "0x4fa9fc61ed778d76d3b0ac1974000d7cb613e413e363a2334dd08e0fcd013b01",
        "urls": [
          "bzz-raw://fb67e3964e93cc9fca3ce91a7f6b67d7b1ea95a4e0568c05ad93185191ebaad0",
          "dweb:/ipfs/QmaJKFPh99zYjjpdNUS9ZbZPwamogr5FjaxuTKDJ63jwiU"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol": {
        "keccak256": "0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f",
        "urls": [
          "bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3",
          "dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/libraries/BN254.sol": {
        "keccak256": "0xc7c5c9529ba56d63487a02cebd5ec41e4f7044ccac6a7bdbbd53492932f1e5e9",
        "urls": [
          "bzz-raw://1d3ab347b2554544eee112846bf479fcd579ce573275c59d84676207ec36be06",
          "dweb:/ipfs/Qmd8e3z1JGuHKjLAdep4u8JDBsf3j6hNShQCt14eKufJYh"
        ],
        "license": "BUSL-1.1 AND MIT"
      },
      "lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol": {
        "keccak256": "0xb3aaa57cf56508ea674f19598de95516e4d574ecd9a634c42de158f9430d0b2d",
        "urls": [
          "bzz-raw://d837b679b6b97a8561eeb97a000446dd1aa6844f89d5b64bf18dfda6076c286e",
          "dweb:/ipfs/QmXz5Nf57MCU5SppkLHjgYRp3SCQBBqrXJaKzgDSBZy1rT"
        ],
        "license": "BUSL-1.1"
      },
      "src/FinalizerTaskManager.sol": {
        "keccak256": "0x9df36343c1e22924ca25acb501e1c23b2eeee155d6ffa1db542e3b0bc76e9582",
        "urls": [
          "bzz-raw://e0b5517c278dda3fb43f0b3a8a92d3314a2c132ce0c858b20e2887731e25ba37",
          "dweb:/ipfs/QmQPnZe79GQY7kb7Qc1w6F9sLQdYZsFYHM9raDL1aGSBFj"
        ],
        "license": "UNLICENSED"
      },
      "src/IFinalizerTaskManager.sol": {
        "keccak256": "0xaaad9835c253fb1211972a43831afe6a143fc9997358d3d40deb5f59d31eac6b",
        "urls": [
          "bzz-raw://9999cb905fa1c175e27770374169e6909f916a146f6a43741c4bf91cfdc418ed",
          "dweb:/ipfs/QmZWRCm3zthPgSanckXLKiULrJjcztvtRitFNEkkbutdXS"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/FinalizerTaskManager.sol",
    "id": 78988,
    "exportedSymbols": {
      "AddressUpgradeable": [
        584
      ],
      "BLSApkRegistry": [
        18282
      ],
      "BLSSignatureChecker": [
        19040
      ],
      "BN254": [
        26684
      ],
      "ContextUpgradeable": [
        626
      ],
      "FinalizerTaskManager": [
        78987
      ],
      "IDelegationManager": [
        9212
      ],
      "IFinalizerTaskManager": [
        79087
      ],
      "IPausable": [
        9858
      ],
      "IPauserRegistry": [
        9888
      ],
      "IRegistryCoordinator": [
        25400
      ],
      "IServiceManager": [
        25451
      ],
      "ISignatureUtils": [
        9904
      ],
      "Initializable": [
        282
      ],
      "OperatorStateRetriever": [
        20414
      ],
      "OwnableUpgradeable": [
        131
      ],
      "Pausable": [
        12892
      ],
      "RegistryCoordinator": [
        22357
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6782:125",
    "nodes": [
      {
        "id": 78602,
        "nodeType": "PragmaDirective",
        "src": "39:23:125",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 78603,
        "nodeType": "ImportDirective",
        "src": "64:72:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 283,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78604,
        "nodeType": "ImportDirective",
        "src": "137:72:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 132,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78605,
        "nodeType": "ImportDirective",
        "src": "211:56:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol",
        "file": "@eigenlayer/contracts/permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 12893,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78606,
        "nodeType": "ImportDirective",
        "src": "269:56:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/libraries/BN254.sol",
        "file": "@eigenlayer-middleware/src/libraries/BN254.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 26685,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78607,
        "nodeType": "ImportDirective",
        "src": "326:67:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol",
        "file": "@eigenlayer-middleware/src/interfaces/IServiceManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 25452,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78609,
        "nodeType": "ImportDirective",
        "src": "395:77:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/BLSApkRegistry.sol",
        "file": "@eigenlayer-middleware/src/BLSApkRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 18283,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78608,
              "name": "BLSApkRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18282,
              "src": "403:14:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BLSApkRegistry_$18282_$",
                "typeString": "type(contract BLSApkRegistry)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78611,
        "nodeType": "ImportDirective",
        "src": "473:87:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/RegistryCoordinator.sol",
        "file": "@eigenlayer-middleware/src/RegistryCoordinator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 22358,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78610,
              "name": "RegistryCoordinator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22357,
              "src": "481:19:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RegistryCoordinator_$22357_$",
                "typeString": "type(contract RegistryCoordinator)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78614,
        "nodeType": "ImportDirective",
        "src": "561:109:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/BLSSignatureChecker.sol",
        "file": "@eigenlayer-middleware/src/BLSSignatureChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 19041,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78612,
              "name": "BLSSignatureChecker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 19040,
              "src": "569:19:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BLSSignatureChecker_$19040_$",
                "typeString": "type(contract BLSSignatureChecker)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 78613,
              "name": "IRegistryCoordinator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25400,
              "src": "590:20:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IRegistryCoordinator_$25400_$",
                "typeString": "type(contract IRegistryCoordinator)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78616,
        "nodeType": "ImportDirective",
        "src": "671:93:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/OperatorStateRetriever.sol",
        "file": "@eigenlayer-middleware/src/OperatorStateRetriever.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 20415,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78615,
              "name": "OperatorStateRetriever",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20414,
              "src": "679:22:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_OperatorStateRetriever_$20414_$",
                "typeString": "type(contract OperatorStateRetriever)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78617,
        "nodeType": "ImportDirective",
        "src": "766:37:125",
        "nodes": [],
        "absolutePath": "src/IFinalizerTaskManager.sol",
        "file": "./IFinalizerTaskManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78988,
        "sourceUnit": 79088,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78987,
        "nodeType": "ContractDefinition",
        "src": "805:6015:125",
        "nodes": [
          {
            "id": 78633,
            "nodeType": "UsingForDirective",
            "src": "980:30:125",
            "nodes": [],
            "libraryName": {
              "id": 78630,
              "name": "BN254",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26684,
              "src": "986:5:125"
            },
            "typeName": {
              "id": 78632,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78631,
                "name": "BN254.G1Point",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25816,
                "src": "996:13:125"
              },
              "referencedDeclaration": 25816,
              "src": "996:13:125",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_G1Point_$25816_storage_ptr",
                "typeString": "struct BN254.G1Point"
              }
            }
          },
          {
            "id": 78635,
            "nodeType": "VariableDeclaration",
            "src": "1138:53:125",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_TASK_RESPONSE_WINDOW_BLOCK",
            "nameLocation": "1164:27:125",
            "scope": 78987,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 78634,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1138:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78638,
            "nodeType": "VariableDeclaration",
            "src": "1197:54:125",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_THRESHOLD_DENOMINATOR",
            "nameLocation": "1223:22:125",
            "scope": 78987,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78636,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1197:7:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 78637,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1248:3:125",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "internal"
          },
          {
            "id": 78640,
            "nodeType": "VariableDeclaration",
            "src": "1305:27:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "8b00ce7c",
            "mutability": "mutable",
            "name": "latestTaskNum",
            "nameLocation": "1319:13:125",
            "scope": 78987,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 78639,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1305:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78644,
            "nodeType": "VariableDeclaration",
            "src": "1562:47:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "2d89f6fc",
            "mutability": "mutable",
            "name": "allTaskHashes",
            "nameLocation": "1596:13:125",
            "scope": 78987,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
              "typeString": "mapping(uint32 => bytes32)"
            },
            "typeName": {
              "id": 78643,
              "keyType": {
                "id": 78641,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1570:6:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1562:26:125",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                "typeString": "mapping(uint32 => bytes32)"
              },
              "valueType": {
                "id": 78642,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1580:7:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 78648,
            "nodeType": "VariableDeclaration",
            "src": "1705:50:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "2cb223d5",
            "mutability": "mutable",
            "name": "allTaskResponses",
            "nameLocation": "1739:16:125",
            "scope": 78987,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
              "typeString": "mapping(uint32 => bytes32)"
            },
            "typeName": {
              "id": 78647,
              "keyType": {
                "id": 78645,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1713:6:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1705:26:125",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                "typeString": "mapping(uint32 => bytes32)"
              },
              "valueType": {
                "id": 78646,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1723:7:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 78650,
            "nodeType": "VariableDeclaration",
            "src": "1762:25:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "245a7bfc",
            "mutability": "mutable",
            "name": "aggregator",
            "nameLocation": "1777:10:125",
            "scope": 78987,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 78649,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1762:7:125",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78652,
            "nodeType": "VariableDeclaration",
            "src": "1793:24:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "7afa1eed",
            "mutability": "mutable",
            "name": "generator",
            "nameLocation": "1808:9:125",
            "scope": 78987,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 78651,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1793:7:125",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78654,
            "nodeType": "VariableDeclaration",
            "src": "1824:30:125",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "latestPendingStateHash",
            "nameLocation": "1832:22:125",
            "scope": 78987,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 78653,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1824:7:125",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78666,
            "nodeType": "ModifierDefinition",
            "src": "1881:120:125",
            "nodes": [],
            "body": {
              "id": 78665,
              "nodeType": "Block",
              "src": "1907:94:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 78660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 78657,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1925:3:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 78658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1925:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 78659,
                          "name": "aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78650,
                          "src": "1939:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1925:24:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41676772656761746f72206d757374206265207468652063616c6c6572",
                        "id": 78661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1951:31:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08b331d45d50737c39ee86458e31278e9e3e9dfd51bae70369503bd10681869a",
                          "typeString": "literal_string \"Aggregator must be the caller\""
                        },
                        "value": "Aggregator must be the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08b331d45d50737c39ee86458e31278e9e3e9dfd51bae70369503bd10681869a",
                          "typeString": "literal_string \"Aggregator must be the caller\""
                        }
                      ],
                      "id": 78656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1917:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:66:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78663,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:66:125"
                },
                {
                  "id": 78664,
                  "nodeType": "PlaceholderStatement",
                  "src": "1993:1:125"
                }
              ]
            },
            "name": "onlyAggregator",
            "nameLocation": "1890:14:125",
            "parameters": {
              "id": 78655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:125"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 78678,
            "nodeType": "ModifierDefinition",
            "src": "2114:126:125",
            "nodes": [],
            "body": {
              "id": 78677,
              "nodeType": "Block",
              "src": "2143:97:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 78672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 78669,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2161:3:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 78670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2161:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 78671,
                          "name": "generator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78652,
                          "src": "2175:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2161:23:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5461736b2067656e657261746f72206d757374206265207468652063616c6c6572",
                        "id": 78673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2186:35:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e93aba834f5600c98bd1b309c67810ed36d95ed2aa8690996cb4d67a012fdc0",
                          "typeString": "literal_string \"Task generator must be the caller\""
                        },
                        "value": "Task generator must be the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e93aba834f5600c98bd1b309c67810ed36d95ed2aa8690996cb4d67a012fdc0",
                          "typeString": "literal_string \"Task generator must be the caller\""
                        }
                      ],
                      "id": 78668,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2153:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:69:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78675,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:69:125"
                },
                {
                  "id": 78676,
                  "nodeType": "PlaceholderStatement",
                  "src": "2232:1:125"
                }
              ]
            },
            "name": "onlyTaskGenerator",
            "nameLocation": "2123:17:125",
            "parameters": {
              "id": 78667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:2:125"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 78694,
            "nodeType": "FunctionDefinition",
            "src": "2246:213:125",
            "nodes": [],
            "body": {
              "id": 78693,
              "nodeType": "Block",
              "src": "2388:71:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78689,
                      "name": "_TASK_RESPONSE_WINDOW_BLOCK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78635,
                      "src": "2398:27:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78690,
                      "name": "_taskResponseWindowBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78683,
                      "src": "2428:24:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2398:54:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 78692,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:54:125"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 78686,
                    "name": "_registryCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78681,
                    "src": "2362:20:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryCoordinator_$25400",
                      "typeString": "contract IRegistryCoordinator"
                    }
                  }
                ],
                "id": 78687,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 78685,
                  "name": "BLSSignatureChecker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19040,
                  "src": "2342:19:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "2342:41:125"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 78684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78681,
                  "mutability": "mutable",
                  "name": "_registryCoordinator",
                  "nameLocation": "2279:20:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78694,
                  "src": "2258:41:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRegistryCoordinator_$25400",
                    "typeString": "contract IRegistryCoordinator"
                  },
                  "typeName": {
                    "id": 78680,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78679,
                      "name": "IRegistryCoordinator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25400,
                      "src": "2258:20:125"
                    },
                    "referencedDeclaration": 25400,
                    "src": "2258:20:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryCoordinator_$25400",
                      "typeString": "contract IRegistryCoordinator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78683,
                  "mutability": "mutable",
                  "name": "_taskResponseWindowBlock",
                  "nameLocation": "2308:24:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78694,
                  "src": "2301:31:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 78682,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2257:76:125"
            },
            "returnParameters": {
              "id": 78688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2388:0:125"
            },
            "scope": 78987,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78726,
            "nodeType": "FunctionDefinition",
            "src": "2465:327:125",
            "nodes": [],
            "body": {
              "id": 78725,
              "nodeType": "Block",
              "src": "2620:172:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78709,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78697,
                        "src": "2648:15:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$9888",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 78710,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12612,
                        "src": "2665:11:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$9888",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78708,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12721,
                      "src": "2630:17:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$9888_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 78711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2630:47:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78712,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:47:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78714,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78699,
                        "src": "2706:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 78713,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "2687:18:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 78715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2687:32:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78716,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:32:125"
                },
                {
                  "expression": {
                    "id": 78719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78717,
                      "name": "aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78650,
                      "src": "2729:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78718,
                      "name": "_aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78701,
                      "src": "2742:11:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2729:24:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78720,
                  "nodeType": "ExpressionStatement",
                  "src": "2729:24:125"
                },
                {
                  "expression": {
                    "id": 78723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78721,
                      "name": "generator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78652,
                      "src": "2763:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78722,
                      "name": "_generator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78703,
                      "src": "2775:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2763:22:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78724,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:22:125"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78706,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78705,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 202,
                  "src": "2604:11:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "2604:11:125"
              }
            ],
            "name": "initialize",
            "nameLocation": "2474:10:125",
            "parameters": {
              "id": 78704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78697,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "2501:15:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78726,
                  "src": "2485:31:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$9888",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 78696,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78695,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9888,
                      "src": "2485:15:125"
                    },
                    "referencedDeclaration": 9888,
                    "src": "2485:15:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$9888",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78699,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2526:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78726,
                  "src": "2518:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78701,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "2548:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78726,
                  "src": "2540:19:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78703,
                  "mutability": "mutable",
                  "name": "_generator",
                  "nameLocation": "2569:10:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78726,
                  "src": "2561:18:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2561:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2484:96:125"
            },
            "returnParameters": {
              "id": 78707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:125"
            },
            "scope": 78987,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78792,
            "nodeType": "FunctionDefinition",
            "src": "2883:685:125",
            "nodes": [],
            "body": {
              "id": 78791,
              "nodeType": "Block",
              "src": "3038:530:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78739,
                      "mutability": "mutable",
                      "name": "newTask",
                      "nameLocation": "3096:7:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78791,
                      "src": "3084:19:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                        "typeString": "struct IFinalizerTaskManager.Task"
                      },
                      "typeName": {
                        "id": 78738,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78737,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79045,
                          "src": "3084:4:125"
                        },
                        "referencedDeclaration": 79045,
                        "src": "3084:4:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79045_storage_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78740,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3084:19:125"
                },
                {
                  "expression": {
                    "id": 78745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78741,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78739,
                        "src": "3113:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      },
                      "id": 78743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79038,
                      "src": "3113:19:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78744,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78728,
                      "src": "3135:11:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3113:33:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78746,
                  "nodeType": "ExpressionStatement",
                  "src": "3113:33:125"
                },
                {
                  "expression": {
                    "id": 78755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78747,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78739,
                        "src": "3156:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      },
                      "id": 78749,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "taskCreatedBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79040,
                      "src": "3156:24:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 78752,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3190:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 78753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "3190:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 78751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3183:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 78750,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3183:6:125",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 78754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3183:20:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3156:47:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 78756,
                  "nodeType": "ExpressionStatement",
                  "src": "3156:47:125"
                },
                {
                  "expression": {
                    "id": 78761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78757,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78739,
                        "src": "3213:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      },
                      "id": 78759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "quorumThresholdPercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79044,
                      "src": "3213:33:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78760,
                      "name": "quorumThresholdPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78730,
                      "src": "3249:25:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3213:61:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 78762,
                  "nodeType": "ExpressionStatement",
                  "src": "3213:61:125"
                },
                {
                  "expression": {
                    "id": 78767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78763,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78739,
                        "src": "3284:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      },
                      "id": 78765,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "quorumNumbers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79042,
                      "src": "3284:21:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78766,
                      "name": "quorumNumbers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78732,
                      "src": "3308:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "3284:37:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 78768,
                  "nodeType": "ExpressionStatement",
                  "src": "3284:37:125"
                },
                {
                  "expression": {
                    "id": 78778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78769,
                        "name": "allTaskHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78644,
                        "src": "3404:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                          "typeString": "mapping(uint32 => bytes32)"
                        }
                      },
                      "id": 78771,
                      "indexExpression": {
                        "id": 78770,
                        "name": "latestTaskNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78640,
                        "src": "3418:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3404:28:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78775,
                              "name": "newTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78739,
                              "src": "3456:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                                "typeString": "struct IFinalizerTaskManager.Task memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                                "typeString": "struct IFinalizerTaskManager.Task memory"
                              }
                            ],
                            "expression": {
                              "id": 78773,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3445:3:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 78774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "3445:10:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 78776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3445:19:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 78772,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3435:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 78777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3435:30:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3404:61:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 78779,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:61:125"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 78781,
                        "name": "latestTaskNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78640,
                        "src": "3495:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 78782,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78739,
                        "src": "3510:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Task_$79045_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      ],
                      "id": 78780,
                      "name": "NewTaskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79022,
                      "src": "3480:14:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_struct$_Task_$79045_memory_ptr_$returns$__$",
                        "typeString": "function (uint32,struct IFinalizerTaskManager.Task memory)"
                      }
                    },
                    "id": 78783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3480:38:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78784,
                  "nodeType": "EmitStatement",
                  "src": "3475:43:125"
                },
                {
                  "expression": {
                    "id": 78789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78785,
                      "name": "latestTaskNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78640,
                      "src": "3528:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 78788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 78786,
                        "name": "latestTaskNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78640,
                        "src": "3544:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 78787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3560:1:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3544:17:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3528:33:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 78790,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:33:125"
                }
              ]
            },
            "baseFunctions": [
              79074
            ],
            "functionSelector": "6b92787e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78735,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78734,
                  "name": "onlyTaskGenerator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78678,
                  "src": "3016:17:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "3016:17:125"
              }
            ],
            "name": "createNewTask",
            "nameLocation": "2892:13:125",
            "parameters": {
              "id": 78733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78728,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "2914:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78792,
                  "src": "2906:19:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2906:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78730,
                  "mutability": "mutable",
                  "name": "quorumThresholdPercentage",
                  "nameLocation": "2934:25:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78792,
                  "src": "2927:32:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 78729,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78732,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "2976:13:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78792,
                  "src": "2961:28:125",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78731,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:5:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2905:85:125"
            },
            "returnParameters": {
              "id": 78736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:125"
            },
            "scope": 78987,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78962,
            "nodeType": "FunctionDefinition",
            "src": "3629:2846:125",
            "nodes": [],
            "body": {
              "id": 78961,
              "nodeType": "Block",
              "src": "3826:2649:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78807,
                      "mutability": "mutable",
                      "name": "taskCreatedBlock",
                      "nameLocation": "3843:16:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78961,
                      "src": "3836:23:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 78806,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3836:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78810,
                  "initialValue": {
                    "expression": {
                      "id": 78808,
                      "name": "task",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78795,
                      "src": "3862:4:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$79045_calldata_ptr",
                        "typeString": "struct IFinalizerTaskManager.Task calldata"
                      }
                    },
                    "id": 78809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "taskCreatedBlock",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 79040,
                    "src": "3862:21:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3836:47:125"
                },
                {
                  "assignments": [
                    78812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78812,
                      "mutability": "mutable",
                      "name": "quorumNumbers",
                      "nameLocation": "3908:13:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78961,
                      "src": "3893:28:125",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 78811,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3893:5:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78815,
                  "initialValue": {
                    "expression": {
                      "id": 78813,
                      "name": "task",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78795,
                      "src": "3924:4:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$79045_calldata_ptr",
                        "typeString": "struct IFinalizerTaskManager.Task calldata"
                      }
                    },
                    "id": 78814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "quorumNumbers",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 79042,
                    "src": "3924:18:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3893:49:125"
                },
                {
                  "assignments": [
                    78817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78817,
                      "mutability": "mutable",
                      "name": "quorumThresholdPercentage",
                      "nameLocation": "3959:25:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78961,
                      "src": "3952:32:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 78816,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3952:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78820,
                  "initialValue": {
                    "expression": {
                      "id": 78818,
                      "name": "task",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78795,
                      "src": "3987:4:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$79045_calldata_ptr",
                        "typeString": "struct IFinalizerTaskManager.Task calldata"
                      }
                    },
                    "id": 78819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "quorumThresholdPercentage",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 79044,
                    "src": "3987:30:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3952:65:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 78832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78825,
                                  "name": "task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78795,
                                  "src": "4169:4:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$79045_calldata_ptr",
                                    "typeString": "struct IFinalizerTaskManager.Task calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Task_$79045_calldata_ptr",
                                    "typeString": "struct IFinalizerTaskManager.Task calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 78823,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4158:3:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 78824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "4158:10:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 78826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4158:16:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 78822,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4148:9:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 78827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4148:27:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 78828,
                            "name": "allTaskHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78644,
                            "src": "4179:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                              "typeString": "mapping(uint32 => bytes32)"
                            }
                          },
                          "id": 78831,
                          "indexExpression": {
                            "expression": {
                              "id": 78829,
                              "name": "taskResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78798,
                              "src": "4193:12:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                              }
                            },
                            "id": 78830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "referenceTaskIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79047,
                            "src": "4193:31:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4179:46:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4148:77:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "737570706c696564207461736b20646f6573206e6f74206d6174636820746865206f6e65207265636f7264656420696e2074686520636f6e7472616374",
                        "id": 78833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4239:63:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8358489e92dfb0f78b5b06c25508a0cca1da42041fdf02ce0f7644a8978f5461",
                          "typeString": "literal_string \"supplied task does not match the one recorded in the contract\""
                        },
                        "value": "supplied task does not match the one recorded in the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8358489e92dfb0f78b5b06c25508a0cca1da42041fdf02ce0f7644a8978f5461",
                          "typeString": "literal_string \"supplied task does not match the one recorded in the contract\""
                        }
                      ],
                      "id": 78821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4127:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4127:185:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78835,
                  "nodeType": "ExpressionStatement",
                  "src": "4127:185:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 78845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78837,
                            "name": "allTaskResponses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78648,
                            "src": "4374:16:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                              "typeString": "mapping(uint32 => bytes32)"
                            }
                          },
                          "id": 78840,
                          "indexExpression": {
                            "expression": {
                              "id": 78838,
                              "name": "taskResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78798,
                              "src": "4391:12:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                              }
                            },
                            "id": 78839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "referenceTaskIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79047,
                            "src": "4391:31:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4374:49:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 78843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4435:1:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 78842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4427:7:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 78841,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4427:7:125",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 78844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4427:10:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4374:63:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41676772656761746f722068617320616c726561647920726573706f6e64656420746f20746865207461736b",
                        "id": 78846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4451:46:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18a5615a90a29a83c795202265db28429fc474d0ab42d5385a7c045c332da9d5",
                          "typeString": "literal_string \"Aggregator has already responded to the task\""
                        },
                        "value": "Aggregator has already responded to the task"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18a5615a90a29a83c795202265db28429fc474d0ab42d5385a7c045c332da9d5",
                          "typeString": "literal_string \"Aggregator has already responded to the task\""
                        }
                      ],
                      "id": 78836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4353:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4353:154:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78848,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:154:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 78858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 78852,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4545:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 78853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "4545:12:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 78851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4538:6:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 78850,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4538:6:125",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 78854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4538:20:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 78857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 78855,
                            "name": "taskCreatedBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78807,
                            "src": "4562:16:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 78856,
                            "name": "_TASK_RESPONSE_WINDOW_BLOCK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78635,
                            "src": "4581:27:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "4562:46:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "4538:70:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41676772656761746f722068617320726573706f6e64656420746f20746865207461736b20746f6f206c617465",
                        "id": 78859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4622:47:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb69c0d38964a05e04a8fd500fc841b0f74595aa8c55ac0f3b2712f8584276a4",
                          "typeString": "literal_string \"Aggregator has responded to the task too late\""
                        },
                        "value": "Aggregator has responded to the task too late"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb69c0d38964a05e04a8fd500fc841b0f74595aa8c55ac0f3b2712f8584276a4",
                          "typeString": "literal_string \"Aggregator has responded to the task too late\""
                        }
                      ],
                      "id": 78849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4517:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4517:162:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78861,
                  "nodeType": "ExpressionStatement",
                  "src": "4517:162:125"
                },
                {
                  "assignments": [
                    78863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78863,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "4818:7:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78961,
                      "src": "4810:15:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 78862,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4810:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78870,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78867,
                            "name": "taskResponse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78798,
                            "src": "4849:12:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                              "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                              "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                            }
                          ],
                          "expression": {
                            "id": 78865,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4838:3:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 78866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4838:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 78868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4838:24:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 78864,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4828:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 78869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4828:35:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4810:53:125"
                },
                {
                  "assignments": [
                    78873,
                    78875
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78873,
                      "mutability": "mutable",
                      "name": "quorumStakeTotals",
                      "nameLocation": "4935:17:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78961,
                      "src": "4910:42:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QuorumStakeTotals_$24982_memory_ptr",
                        "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals"
                      },
                      "typeName": {
                        "id": 78872,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78871,
                          "name": "QuorumStakeTotals",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24982,
                          "src": "4910:17:125"
                        },
                        "referencedDeclaration": 24982,
                        "src": "4910:17:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuorumStakeTotals_$24982_storage_ptr",
                          "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78875,
                      "mutability": "mutable",
                      "name": "hashOfNonSigners",
                      "nameLocation": "4962:16:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78961,
                      "src": "4954:24:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 78874,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4954:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78882,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78877,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78863,
                        "src": "5010:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 78878,
                        "name": "quorumNumbers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78812,
                        "src": "5019:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 78879,
                        "name": "taskCreatedBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78807,
                        "src": "5034:16:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 78880,
                        "name": "nonSignerStakesAndSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78801,
                        "src": "5052:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonSignerStakesAndSignature_$24975_memory_ptr",
                          "typeString": "struct IBLSSignatureChecker.NonSignerStakesAndSignature memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_struct$_NonSignerStakesAndSignature_$24975_memory_ptr",
                          "typeString": "struct IBLSSignatureChecker.NonSignerStakesAndSignature memory"
                        }
                      ],
                      "id": 78876,
                      "name": "checkSignatures",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18944,
                      "src": "4994:15:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$_t_uint32_$_t_struct$_NonSignerStakesAndSignature_$24975_memory_ptr_$returns$_t_struct$_QuorumStakeTotals_$24982_memory_ptr_$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes calldata,uint32,struct IBLSSignatureChecker.NonSignerStakesAndSignature memory) view returns (struct IBLSSignatureChecker.QuorumStakeTotals memory,bytes32)"
                      }
                    },
                    "id": 78881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4994:86:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_QuorumStakeTotals_$24982_memory_ptr_$_t_bytes32_$",
                      "typeString": "tuple(struct IBLSSignatureChecker.QuorumStakeTotals memory,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4909:171:125"
                },
                {
                  "assignments": [
                    78885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78885,
                      "mutability": "mutable",
                      "name": "taskResponseMetadata",
                      "nameLocation": "5119:20:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78961,
                      "src": "5091:48:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskResponseMetadata_$79065_memory_ptr",
                        "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata"
                      },
                      "typeName": {
                        "id": 78884,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78883,
                          "name": "TaskResponseMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79065,
                          "src": "5091:20:125"
                        },
                        "referencedDeclaration": 79065,
                        "src": "5091:20:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskResponseMetadata_$79065_storage_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78898,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78889,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5183:5:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 78890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "5183:12:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 78888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5176:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 78887,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5176:6:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5176:20:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 78892,
                        "name": "hashOfNonSigners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78875,
                        "src": "5210:16:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 78893,
                          "name": "quorumStakeTotals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78873,
                          "src": "5240:17:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuorumStakeTotals_$24982_memory_ptr",
                            "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals memory"
                          }
                        },
                        "id": 78894,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalStakeForQuorum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24981,
                        "src": "5240:37:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                          "typeString": "uint96[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 78895,
                          "name": "quorumStakeTotals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78873,
                          "src": "5291:17:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuorumStakeTotals_$24982_memory_ptr",
                            "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals memory"
                          }
                        },
                        "id": 78896,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signedStakeForQuorum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24978,
                        "src": "5291:38:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                          "typeString": "uint96[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                          "typeString": "uint96[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                          "typeString": "uint96[] memory"
                        }
                      ],
                      "id": 78886,
                      "name": "TaskResponseMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79065,
                      "src": "5142:20:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TaskResponseMetadata_$79065_storage_ptr_$",
                        "typeString": "type(struct IFinalizerTaskManager.TaskResponseMetadata storage pointer)"
                      }
                    },
                    "id": 78897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5142:197:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskResponseMetadata_$79065_memory_ptr",
                      "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5091:248:125"
                },
                {
                  "expression": {
                    "id": 78910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78899,
                        "name": "allTaskResponses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78648,
                        "src": "5401:16:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                          "typeString": "mapping(uint32 => bytes32)"
                        }
                      },
                      "id": 78902,
                      "indexExpression": {
                        "expression": {
                          "id": 78900,
                          "name": "taskResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78798,
                          "src": "5418:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                            "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                          }
                        },
                        "id": 78901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "referenceTaskIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79047,
                        "src": "5418:31:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5401:49:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78906,
                              "name": "taskResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78798,
                              "src": "5474:12:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                              }
                            },
                            {
                              "id": 78907,
                              "name": "taskResponseMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78885,
                              "src": "5488:20:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TaskResponseMetadata_$79065_memory_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                              },
                              {
                                "typeIdentifier": "t_struct$_TaskResponseMetadata_$79065_memory_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                              }
                            ],
                            "expression": {
                              "id": 78904,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5463:3:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 78905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "5463:10:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 78908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5463:46:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 78903,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5453:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 78909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5453:57:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5401:109:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 78911,
                  "nodeType": "ExpressionStatement",
                  "src": "5401:109:125"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 78913,
                        "name": "taskResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78798,
                        "src": "5566:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                        }
                      },
                      {
                        "id": 78914,
                        "name": "taskResponseMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78885,
                        "src": "5580:20:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskResponseMetadata_$79065_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_TaskResponseMetadata_$79065_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                        }
                      ],
                      "id": 78912,
                      "name": "TaskResponded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79030,
                      "src": "5552:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_TaskResponse_$79054_memory_ptr_$_t_struct$_TaskResponseMetadata_$79065_memory_ptr_$returns$__$",
                        "typeString": "function (struct IFinalizerTaskManager.TaskResponse memory,struct IFinalizerTaskManager.TaskResponseMetadata memory)"
                      }
                    },
                    "id": 78915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5552:49:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78916,
                  "nodeType": "EmitStatement",
                  "src": "5547:54:125"
                },
                {
                  "body": {
                    "id": 78947,
                    "nodeType": "Block",
                    "src": "5748:535:125",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 78943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 78933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 78928,
                                  "name": "quorumStakeTotals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78873,
                                  "src": "5969:17:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QuorumStakeTotals_$24982_memory_ptr",
                                    "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals memory"
                                  }
                                },
                                "id": 78929,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "signedStakeForQuorum",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24978,
                                "src": "5969:38:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                                  "typeString": "uint96[] memory"
                                }
                              },
                              "id": 78931,
                              "indexExpression": {
                                "id": 78930,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78918,
                                "src": "6008:1:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5969:41:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 78932,
                              "name": "_THRESHOLD_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78638,
                              "src": "6013:22:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5969:66:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 78942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 78934,
                                  "name": "quorumStakeTotals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78873,
                                  "src": "6058:17:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QuorumStakeTotals_$24982_memory_ptr",
                                    "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals memory"
                                  }
                                },
                                "id": 78935,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalStakeForQuorum",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24981,
                                "src": "6058:37:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                                  "typeString": "uint96[] memory"
                                }
                              },
                              "id": 78937,
                              "indexExpression": {
                                "id": 78936,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78918,
                                "src": "6096:1:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6058:40:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 78940,
                                  "name": "quorumThresholdPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78817,
                                  "src": "6107:25:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "id": 78939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6101:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 78938,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6101:5:125",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6101:32:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "6058:75:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "5969:164:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 78946,
                        "nodeType": "IfStatement",
                        "src": "5948:325:125",
                        "trueBody": {
                          "id": 78945,
                          "nodeType": "Block",
                          "src": "6148:125:125",
                          "statements": [
                            {
                              "functionReturnParameters": 78805,
                              "id": 78944,
                              "nodeType": "Return",
                              "src": "6252:7:125"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 78921,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78918,
                      "src": "5717:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 78922,
                        "name": "quorumNumbers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78812,
                        "src": "5721:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 78923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5721:20:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5717:24:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78948,
                  "initializationExpression": {
                    "assignments": [
                      78918
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 78918,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5710:1:125",
                        "nodeType": "VariableDeclaration",
                        "scope": 78948,
                        "src": "5702:9:125",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 78917,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5702:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 78920,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 78919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5714:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5702:13:125"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 78926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5743:3:125",
                      "subExpression": {
                        "id": 78925,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78918,
                        "src": "5743:1:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 78927,
                    "nodeType": "ExpressionStatement",
                    "src": "5743:3:125"
                  },
                  "nodeType": "ForStatement",
                  "src": "5697:586:125"
                },
                {
                  "expression": {
                    "id": 78952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78949,
                      "name": "latestPendingStateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78654,
                      "src": "6293:22:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 78950,
                        "name": "taskResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78798,
                        "src": "6318:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                        }
                      },
                      "id": 78951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pendingStateHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79053,
                      "src": "6318:29:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6293:54:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 78953,
                  "nodeType": "ExpressionStatement",
                  "src": "6293:54:125"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78955,
                          "name": "taskResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78798,
                          "src": "6412:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                            "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                          }
                        },
                        "id": 78956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "referenceTaskIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79047,
                        "src": "6412:31:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 78957,
                          "name": "taskResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78798,
                          "src": "6445:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                            "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                          }
                        },
                        "id": 78958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blockHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79049,
                        "src": "6445:22:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 78954,
                      "name": "TaskCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79036,
                      "src": "6398:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32)"
                      }
                    },
                    "id": 78959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6398:70:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78960,
                  "nodeType": "EmitStatement",
                  "src": "6393:75:125"
                }
              ]
            },
            "functionSelector": "e4e3ad77",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78804,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78803,
                  "name": "onlyAggregator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78666,
                  "src": "3811:14:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "3811:14:125"
              }
            ],
            "name": "respondToTask",
            "nameLocation": "3638:13:125",
            "parameters": {
              "id": 78802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78795,
                  "mutability": "mutable",
                  "name": "task",
                  "nameLocation": "3675:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78962,
                  "src": "3661:18:125",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$79045_calldata_ptr",
                    "typeString": "struct IFinalizerTaskManager.Task"
                  },
                  "typeName": {
                    "id": 78794,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78793,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79045,
                      "src": "3661:4:125"
                    },
                    "referencedDeclaration": 79045,
                    "src": "3661:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$79045_storage_ptr",
                      "typeString": "struct IFinalizerTaskManager.Task"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78798,
                  "mutability": "mutable",
                  "name": "taskResponse",
                  "nameLocation": "3711:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78962,
                  "src": "3689:34:125",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TaskResponse_$79054_calldata_ptr",
                    "typeString": "struct IFinalizerTaskManager.TaskResponse"
                  },
                  "typeName": {
                    "id": 78797,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78796,
                      "name": "TaskResponse",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79054,
                      "src": "3689:12:125"
                    },
                    "referencedDeclaration": 79054,
                    "src": "3689:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskResponse_$79054_storage_ptr",
                      "typeString": "struct IFinalizerTaskManager.TaskResponse"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78801,
                  "mutability": "mutable",
                  "name": "nonSignerStakesAndSignature",
                  "nameLocation": "3768:27:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78962,
                  "src": "3733:62:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NonSignerStakesAndSignature_$24975_memory_ptr",
                    "typeString": "struct IBLSSignatureChecker.NonSignerStakesAndSignature"
                  },
                  "typeName": {
                    "id": 78800,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78799,
                      "name": "NonSignerStakesAndSignature",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24975,
                      "src": "3733:27:125"
                    },
                    "referencedDeclaration": 24975,
                    "src": "3733:27:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NonSignerStakesAndSignature_$24975_storage_ptr",
                      "typeString": "struct IBLSSignatureChecker.NonSignerStakesAndSignature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3651:150:125"
            },
            "returnParameters": {
              "id": 78805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3826:0:125"
            },
            "scope": 78987,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78970,
            "nodeType": "FunctionDefinition",
            "src": "6481:90:125",
            "nodes": [],
            "body": {
              "id": 78969,
              "nodeType": "Block",
              "src": "6534:37:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78967,
                    "name": "latestTaskNum",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78640,
                    "src": "6551:13:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 78966,
                  "id": 78968,
                  "nodeType": "Return",
                  "src": "6544:20:125"
                }
              ]
            },
            "baseFunctions": [
              79080
            ],
            "functionSelector": "72d18e8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "taskNumber",
            "nameLocation": "6490:10:125",
            "parameters": {
              "id": 78963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6500:2:125"
            },
            "returnParameters": {
              "id": 78966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78965,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78970,
                  "src": "6526:6:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 78964,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6526:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6525:8:125"
            },
            "scope": 78987,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78978,
            "nodeType": "FunctionDefinition",
            "src": "6577:120:125",
            "nodes": [],
            "body": {
              "id": 78977,
              "nodeType": "Block",
              "src": "6646:51:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78975,
                    "name": "_TASK_RESPONSE_WINDOW_BLOCK",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78635,
                    "src": "6663:27:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 78974,
                  "id": 78976,
                  "nodeType": "Return",
                  "src": "6656:34:125"
                }
              ]
            },
            "baseFunctions": [
              79086
            ],
            "functionSelector": "f5c9899d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskResponseWindowBlock",
            "nameLocation": "6586:26:125",
            "parameters": {
              "id": 78971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6612:2:125"
            },
            "returnParameters": {
              "id": 78974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78973,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78978,
                  "src": "6638:6:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 78972,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6637:8:125"
            },
            "scope": 78987,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78986,
            "nodeType": "FunctionDefinition",
            "src": "6703:115:125",
            "nodes": [],
            "body": {
              "id": 78985,
              "nodeType": "Block",
              "src": "6772:46:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78983,
                    "name": "latestPendingStateHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78654,
                    "src": "6789:22:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 78982,
                  "id": 78984,
                  "nodeType": "Return",
                  "src": "6782:29:125"
                }
              ]
            },
            "functionSelector": "0373408d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPendingStateHash",
            "nameLocation": "6712:25:125",
            "parameters": {
              "id": 78979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6737:2:125"
            },
            "returnParameters": {
              "id": 78982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78986,
                  "src": "6763:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 78980,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6763:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6762:9:125"
            },
            "scope": 78987,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78618,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 282,
              "src": "842:13:125"
            },
            "id": 78619,
            "nodeType": "InheritanceSpecifier",
            "src": "842:13:125"
          },
          {
            "baseName": {
              "id": 78620,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 131,
              "src": "861:18:125"
            },
            "id": 78621,
            "nodeType": "InheritanceSpecifier",
            "src": "861:18:125"
          },
          {
            "baseName": {
              "id": 78622,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12892,
              "src": "885:8:125"
            },
            "id": 78623,
            "nodeType": "InheritanceSpecifier",
            "src": "885:8:125"
          },
          {
            "baseName": {
              "id": 78624,
              "name": "BLSSignatureChecker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19040,
              "src": "899:19:125"
            },
            "id": 78625,
            "nodeType": "InheritanceSpecifier",
            "src": "899:19:125"
          },
          {
            "baseName": {
              "id": 78626,
              "name": "OperatorStateRetriever",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20414,
              "src": "924:22:125"
            },
            "id": 78627,
            "nodeType": "InheritanceSpecifier",
            "src": "924:22:125"
          },
          {
            "baseName": {
              "id": 78628,
              "name": "IFinalizerTaskManager",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79087,
              "src": "952:21:125"
            },
            "id": 78629,
            "nodeType": "InheritanceSpecifier",
            "src": "952:21:125"
          }
        ],
        "canonicalName": "FinalizerTaskManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          78987,
          79087,
          20414,
          19040,
          25030,
          12892,
          9858,
          131,
          626,
          282
        ],
        "name": "FinalizerTaskManager",
        "nameLocation": "814:20:125",
        "scope": 78988,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 125
}