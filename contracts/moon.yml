language: solidity
type: application

fileGroups:
  sources:
    - "lib/**/*"
    - "src/**/*"
    - "test/**/*"
    - "script/**/*"
    - "tools/**/*"
    - package.json
    - foundry.toml
    - remappings.txt

tasks:
  build:
    command: "forge build"
    inputs: ["@globs(sources)"]
    outputs: ["out"]
  
  build-image-local:
    command: >
      docker buildx build
      --platform linux/amd64
      --tag gaspxyz/gasp-contracts:local
      --tag gaspxyz/gasp-contracts:localarb
      --tag gaspxyz/gasp-contracts:localbase
      --load
      .
    inputs: ["@globs(sources)", "Dockerfile"]

  contracts-build-ci:
    command: >
      docker buildx build --platform linux/amd64,linux/arm64 -t gaspxyz/gasp-contracts:ci
      --output type=image,dest=gasp-contracts-image.tar .
    inputs: ["@globs(sources)", "Dockerfile"]
    outputs: ['gasp-contracts-image.tar']
    options:
      outputStyle: stream

  contracts-build-image-ci:
    script: |
      set -ex
      docker info
      docker load < gasp-contracts-image.tar
      docker image tag gaspxyz/gasp-contracts:ci gaspxyz/gasp-contracts:${IMAGE_TAG:-ci}
      docker push gaspxyz/gasp-contracts:${IMAGE_TAG:-ci}
    deps: ['contracts-build-ci']
    options:
      cache: false

  contracts-format:
    command: yarn run format
    inputs: ["@globs(sources)"]

  contracts-lint:
    command: yarn run lint
    inputs: ["@globs(sources)"]

  contracts-test:
    command: yarn run test
    inputs: ["@globs(sources)"]

  contracts-size:
    command: yarn run size
    inputs: ["@globs(sources)"]

  contracts-gas:
    command: yarn run gas
    inputs: ["@globs(sources)"]

  contracts-coverage:
    command: yarn run cover
    inputs: ["@globs(sources)"]

  contracts-check:
    deps: ['contracts-format', 'contracts-lint', 'contracts-test', 'contracts-size', 'contracts-gas', 'contracts-coverage']

  contracts-check-addresses:
    script: |
      docker compose down
      docker compose up --wait eth-contracts-deployment arbitrum-contracts-deployment base-contracts-deployment
      git diff --exit-code contracts/script/output/
    options:
      runFromWorkspaceRoot: true

  release:
    command: yarn run release
    inputs: ["@globs(sources)"]
    options:
      cache: false
      runInCI: false
