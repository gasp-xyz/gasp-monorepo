{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "_registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_taskResponseWindowBlock",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "taskIndex",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "taskCreatedBlock",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "quorumThresholdPercentage",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IFinalizerTaskManager.Task",
          "name": "task",
          "type": "tuple"
        }
      ],
      "name": "NewTaskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "pauserRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "PauserRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "StaleStakesForbiddenUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "taskIndex",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "referenceTaskIndex",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "storageProofHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "pendingStateHash",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct IFinalizerTaskManager.TaskResponse",
          "name": "taskResponse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "taskResponsedBlock",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "hashOfNonSigners",
              "type": "bytes32"
            },
            {
              "internalType": "uint96[]",
              "name": "quroumStakeTotals",
              "type": "uint96[]"
            },
            {
              "internalType": "uint96[]",
              "name": "quroumStakeSigned",
              "type": "uint96[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IFinalizerTaskManager.TaskResponseMetadata",
          "name": "taskResponseMetadata",
          "type": "tuple"
        }
      ],
      "name": "TaskResponded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "allTaskHashes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "allTaskResponses",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blsApkRegistry",
      "outputs": [
        {
          "internalType": "contract IBLSApkRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "referenceBlockNumber",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint32[]",
              "name": "nonSignerQuorumBitmapIndices",
              "type": "uint32[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point[]",
              "name": "nonSignerPubkeys",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point[]",
              "name": "quorumApks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct BN254.G2Point",
              "name": "apkG2",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point",
              "name": "sigma",
              "type": "tuple"
            },
            {
              "internalType": "uint32[]",
              "name": "quorumApkIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[]",
              "name": "totalStakeIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[][]",
              "name": "nonSignerStakeIndices",
              "type": "uint32[][]"
            }
          ],
          "internalType": "struct IBLSSignatureChecker.NonSignerStakesAndSignature",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "checkSignatures",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint96[]",
              "name": "signedStakeForQuorum",
              "type": "uint96[]"
            },
            {
              "internalType": "uint96[]",
              "name": "totalStakeForQuorum",
              "type": "uint96[]"
            }
          ],
          "internalType": "struct IBLSSignatureChecker.QuorumStakeTotals",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "quorumThresholdPercentage",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "createNewTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "generator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "referenceBlockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "nonSignerOperatorIds",
          "type": "bytes32[]"
        }
      ],
      "name": "getCheckSignaturesIndices",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32[]",
              "name": "nonSignerQuorumBitmapIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[]",
              "name": "quorumApkIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[]",
              "name": "totalStakeIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[][]",
              "name": "nonSignerStakeIndices",
              "type": "uint32[][]"
            }
          ],
          "internalType": "struct OperatorStateRetriever.CheckSignaturesIndices",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPendingStateHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getOperatorState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct OperatorStateRetriever.Operator[][]",
          "name": "",
          "type": "tuple[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getOperatorState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct OperatorStateRetriever.Operator[][]",
          "name": "",
          "type": "tuple[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "operatorIds",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getQuorumBitmapsAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTaskResponseWindowBlock",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_generator",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTaskNum",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registryCoordinator",
      "outputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "taskCreatedBlock",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "quorumThresholdPercentage",
              "type": "uint32"
            }
          ],
          "internalType": "struct IFinalizerTaskManager.Task",
          "name": "task",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "referenceTaskIndex",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "storageProofHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "pendingStateHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IFinalizerTaskManager.TaskResponse",
          "name": "taskResponse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32[]",
              "name": "nonSignerQuorumBitmapIndices",
              "type": "uint32[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point[]",
              "name": "nonSignerPubkeys",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point[]",
              "name": "quorumApks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct BN254.G2Point",
              "name": "apkG2",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BN254.G1Point",
              "name": "sigma",
              "type": "tuple"
            },
            {
              "internalType": "uint32[]",
              "name": "quorumApkIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[]",
              "name": "totalStakeIndices",
              "type": "uint32[]"
            },
            {
              "internalType": "uint32[][]",
              "name": "nonSignerStakeIndices",
              "type": "uint32[][]"
            }
          ],
          "internalType": "struct IBLSSignatureChecker.NonSignerStakesAndSignature",
          "name": "nonSignerStakesAndSignature",
          "type": "tuple"
        }
      ],
      "name": "respondToTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "setPauserRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setStaleStakesForbidden",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeRegistry",
      "outputs": [
        {
          "internalType": "contract IStakeRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staleStakesForbidden",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taskNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "X",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Y",
              "type": "uint256"
            }
          ],
          "internalType": "struct BN254.G1Point",
          "name": "apk",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256[2]",
              "name": "X",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[2]",
              "name": "Y",
              "type": "uint256[2]"
            }
          ],
          "internalType": "struct BN254.G2Point",
          "name": "apkG2",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "X",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Y",
              "type": "uint256"
            }
          ],
          "internalType": "struct BN254.G1Point",
          "name": "sigma",
          "type": "tuple"
        }
      ],
      "name": "trySignatureAndApkVerification",
      "outputs": [
        {
          "internalType": "bool",
          "name": "pairingSuccessful",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "siganatureIsValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "805:6015:125:-:0;;;2246:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2362:20;1701::72;-1:-1:-1;;;;;1679:42:72;;;-1:-1:-1;;;;;1679:42:72;;;;;1747:20;-1:-1:-1;;;;;1747:34:72;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1731:52:72;;;-1:-1:-1;;;;;1731:52:72;;;;;1810:20;-1:-1:-1;;;;;1810:35:72;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1793:54:72;;;-1:-1:-1;;;;;1793:54:72;;;;;1870:13;;-1:-1:-1;;;;;1870:24:72;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1857:39:72;;;-1:-1:-1;1915:20:72;:27;;-1:-1:-1;;1915:27:72;1938:4;1915:27;;;2398:54:125::1;;1915:27:72::0;2398:54:125;-1:-1:-1;805:6015:125;;14:153:135;-1:-1:-1;;;;;111:31:135;;101:42;;91:70;;157:1;154;147:12;91:70;14:153;:::o;172:468::-;280:6;288;341:2;329:9;320:7;316:23;312:32;309:52;;;357:1;354;347:12;309:52;389:9;383:16;408:53;455:5;408:53;:::i;:::-;530:2;515:18;;509:25;480:5;;-1:-1:-1;578:10:135;565:24;;553:37;;543:65;;604:1;601;594:12;543:65;627:7;617:17;;;172:468;;;;;:::o;645:297::-;739:6;792:2;780:9;771:7;767:23;763:32;760:52;;;808:1;805;798:12;760:52;840:9;834:16;859:53;906:5;859:53;:::i;:::-;931:5;645:297;-1:-1:-1;;;645:297:135:o;1250:300::-;805:6015:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636b92787e1161011a5780638da5cb5b116100ad578063e4e3ad771161007c578063e4e3ad77146104f6578063f2fde38b14610509578063f5c9899d1461051c578063f8c8765e14610542578063fabc1cbc1461055557600080fd5b80638da5cb5b14610490578063b98d0908146104a1578063cefdc1d4146104ae578063df5cf723146104cf57600080fd5b806372d18e8d116100e957806372d18e8d1461043b5780637afa1eed1461045a578063886f11951461046d5780638b00ce7c1461048057600080fd5b80636b92787e146103d85780636d14a987146103eb5780636efb463614610412578063715018a61461043357600080fd5b8063416c7e5e116101925780635c155662116101615780635c155662146103625780635c975abb146103825780635df459461461038a57806368304835146103b157600080fd5b8063416c7e5e146102f45780634f739f7414610307578063595c6a67146103275780635ac86ab71461032f57600080fd5b8063245a7bfc116101ce578063245a7bfc146102695780632cb223d5146102945780632d89f6fc146102b45780633563b0d1146102d457600080fd5b80630373408d1461020057806310d67a2f14610217578063136439dd1461022c578063171f1d5b1461023f575b600080fd5b60ce545b6040519081526020015b60405180910390f35b61022a610225366004614084565b610568565b005b61022a61023a3660046140a1565b610624565b61025261024d36600461421f565b610763565b60408051921515835290151560208301520161020e565b60cc5461027c906001600160a01b031681565b6040516001600160a01b03909116815260200161020e565b6102046102a236600461428d565b60cb6020526000908152604090205481565b6102046102c236600461428d565b60ca6020526000908152604090205481565b6102e76102e23660046142aa565b6108ed565b60405161020e9190614405565b61022a61030236600461442d565b610d83565b61031a610315366004614492565b610ef8565b60405161020e9190614596565b61022a61161e565b61035261033d366004614660565b606654600160ff9092169190911b9081161490565b604051901515815260200161020e565b6103756103703660046146a0565b6116e5565b60405161020e9190614751565b606654610204565b61027c7f000000000000000000000000000000000000000000000000000000000000000081565b61027c7f000000000000000000000000000000000000000000000000000000000000000081565b61022a6103e6366004614795565b6118ad565b61027c7f000000000000000000000000000000000000000000000000000000000000000081565b610425610420366004614a6c565b611a4e565b60405161020e929190614b2c565b61022a612966565b60c95463ffffffff165b60405163ffffffff909116815260200161020e565b60cd5461027c906001600160a01b031681565b60655461027c906001600160a01b031681565b60c9546104459063ffffffff1681565b6033546001600160a01b031661027c565b6097546103529060ff1681565b6104c16104bc366004614b75565b61297a565b60405161020e929190614bb7565b61027c7f000000000000000000000000000000000000000000000000000000000000000081565b61022a610504366004614bf0565b612b0c565b61022a610517366004614084565b612f86565b7f0000000000000000000000000000000000000000000000000000000000000000610445565b61022a610550366004614c64565b612ffc565b61022a6105633660046140a1565b61314d565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105df9190614cc0565b6001600160a01b0316336001600160a01b0316146106185760405162461bcd60e51b815260040161060f90614cdd565b60405180910390fd5b610621816132a9565b50565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190614d27565b6106ac5760405162461bcd60e51b815260040161060f90614d44565b606654818116146107255760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c6974790000000000000000606482015260840161060f565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001878760000151886020015188600001516000600281106107ab576107ab614d8c565b60200201518951600160200201518a602001516000600281106107d0576107d0614d8c565b60200201518b602001516001600281106107ec576107ec614d8c565b602090810291909101518c518d8301516040516108499a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c61086c9190614da2565b90506108df61088561087e88846133a0565b8690613437565b61088d6134cb565b6108d56108c6856108c0604080518082018252600080825260209182015281518083019092526001825260029082015290565b906133a0565b6108cf8c61358b565b90613437565b886201d4c061361b565b909890975095505050505050565b60606000846001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109539190614cc0565b90506000856001600160a01b0316639e9923c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b99190614cc0565b90506000866001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f9190614cc0565b9050600086516001600160401b03811115610a3c57610a3c6140ba565b604051908082528060200260200182016040528015610a6f57816020015b6060815260200190600190039081610a5a5790505b50905060005b8751811015610d77576000888281518110610a9257610a92614d8c565b0160200151604051638902624560e01b815260f89190911c6004820181905263ffffffff8a16602483015291506000906001600160a01b03871690638902624590604401600060405180830381865afa158015610af3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b1b9190810190614dc4565b905080516001600160401b03811115610b3657610b366140ba565b604051908082528060200260200182016040528015610b8157816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610b545790505b50848481518110610b9457610b94614d8c565b602002602001018190525060005b8151811015610d61576040518060600160405280876001600160a01b03166347b314e8858581518110610bd757610bd7614d8c565b60200260200101516040518263ffffffff1660e01b8152600401610bfd91815260200190565b602060405180830381865afa158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e9190614cc0565b6001600160a01b03168152602001838381518110610c5e57610c5e614d8c565b60200260200101518152602001896001600160a01b031663fa28c627858581518110610c8c57610c8c614d8c565b60209081029190910101516040516001600160e01b031960e084901b168152600481019190915260ff8816602482015263ffffffff8f166044820152606401602060405180830381865afa158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c9190614e54565b6001600160601b0316815250858581518110610d2a57610d2a614d8c565b60200260200101518281518110610d4357610d43614d8c565b60200260200101819052508080610d5990614e93565b915050610ba2565b5050508080610d6f90614e93565b915050610a75565b50979650505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610de1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e059190614cc0565b6001600160a01b0316336001600160a01b031614610eb15760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a40161060f565b6097805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200160405180910390a150565b610f236040518060800160405280606081526020016060815260200160608152602001606081525090565b6000876001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f879190614cc0565b9050610fb46040518060800160405280606081526020016060815260200160608152602001606081525090565b6040516361c8a12f60e11b81526001600160a01b038a169063c391425e90610fe4908b9089908990600401614eae565b600060405180830381865afa158015611001573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110299190810190614ef8565b81526040516340e03a8160e11b81526001600160a01b038316906381c075029061105b908b908b908b90600401614faf565b600060405180830381865afa158015611078573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110a09190810190614ef8565b6040820152856001600160401b038111156110bd576110bd6140ba565b6040519080825280602002602001820160405280156110f057816020015b60608152602001906001900390816110db5790505b50606082015260005b60ff811687111561152f576000856001600160401b0381111561111e5761111e6140ba565b604051908082528060200260200182016040528015611147578160200160208202803683370190505b5083606001518360ff168151811061116157611161614d8c565b602002602001018190525060005b8681101561142f5760008c6001600160a01b03166304ec63518a8a8581811061119a5761119a614d8c565b905060200201358e886000015186815181106111b8576111b8614d8c565b60200260200101516040518463ffffffff1660e01b81526004016111f59392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112369190614fd8565b90506001600160c01b0381166112da5760405162461bcd60e51b815260206004820152605c60248201527f4f70657261746f7253746174655265747269657665722e676574436865636b5360448201527f69676e617475726573496e64696365733a206f70657261746f72206d7573742060648201527f6265207265676973746572656420617420626c6f636b6e756d62657200000000608482015260a40161060f565b8a8a8560ff168181106112ef576112ef614d8c565b6001600160c01b03841692013560f81c9190911c60019081161415905061141c57856001600160a01b031663dd9846b98a8a8581811061133157611331614d8c565b905060200201358d8d8860ff1681811061134d5761134d614d8c565b6040516001600160e01b031960e087901b1681526004810194909452919091013560f81c60248301525063ffffffff8f166044820152606401602060405180830381865afa1580156113a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c79190615001565b85606001518560ff16815181106113e0576113e0614d8c565b602002602001015184815181106113f9576113f9614d8c565b63ffffffff909216602092830291909101909101528261141881614e93565b9350505b508061142781614e93565b91505061116f565b506000816001600160401b0381111561144a5761144a6140ba565b604051908082528060200260200182016040528015611473578160200160208202803683370190505b50905060005b828110156114f45784606001518460ff168151811061149a5761149a614d8c565b602002602001015181815181106114b3576114b3614d8c565b60200260200101518282815181106114cd576114cd614d8c565b63ffffffff90921660209283029190910190910152806114ec81614e93565b915050611479565b508084606001518460ff168151811061150f5761150f614d8c565b6020026020010181905250505080806115279061501e565b9150506110f9565b506000896001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa158015611570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115949190614cc0565b60405163354952a360e21b81529091506001600160a01b0382169063d5254a8c906115c7908b908b908e9060040161503e565b600060405180830381865afa1580156115e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261160c9190810190614ef8565b60208301525098975050505050505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015611666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168a9190614d27565b6116a65760405162461bcd60e51b815260040161060f90614d44565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60606000846001600160a01b031663c391425e84866040518363ffffffff1660e01b8152600401611717929190615068565b600060405180830381865afa158015611734573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261175c9190810190614ef8565b9050600084516001600160401b03811115611779576117796140ba565b6040519080825280602002602001820160405280156117a2578160200160208202803683370190505b50905060005b85518110156118a357866001600160a01b03166304ec63518783815181106117d2576117d2614d8c565b6020026020010151878685815181106117ed576117ed614d8c565b60200260200101516040518463ffffffff1660e01b815260040161182a9392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186b9190614fd8565b6001600160c01b031682828151811061188657611886614d8c565b60209081029190910101528061189b81614e93565b9150506117a8565b5095945050505050565b60cd546001600160a01b031633146119115760405162461bcd60e51b815260206004820152602160248201527f5461736b2067656e657261746f72206d757374206265207468652063616c6c656044820152603960f91b606482015260840161060f565b611948604051806080016040528060008152602001600063ffffffff16815260200160608152602001600063ffffffff1681525090565b84815263ffffffff438116602080840191909152908516606083015260408051601f8501839004830281018301909152838152908490849081908401838280828437600092019190915250505050604080830191909152516119ae9082906020016150bc565b60408051601f19818403018152828252805160209182012060c9805463ffffffff908116600090815260ca90945293909220555416907f1695b8d06ec800b4615e745cfb5bd00c1f2875615d42925c3b5afa543bb24c4890611a119084906150bc565b60405180910390a260c954611a2d9063ffffffff166001615147565b60c9805463ffffffff191663ffffffff929092169190911790555050505050565b6040805180820190915260608082526020820152600084611ac55760405162461bcd60e51b8152602060048201526037602482015260008051602061549383398151915260448201527f7265733a20656d7074792071756f72756d20696e707574000000000000000000606482015260840161060f565b60408301515185148015611add575060a08301515185145b8015611aed575060c08301515185145b8015611afd575060e08301515185145b611b675760405162461bcd60e51b8152602060048201526041602482015260008051602061549383398151915260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a40161060f565b82515160208401515114611bdf5760405162461bcd60e51b815260206004820152604460248201819052600080516020615493833981519152908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a40161060f565b4363ffffffff168463ffffffff1610611c4e5760405162461bcd60e51b815260206004820152603c602482015260008051602061549383398151915260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b00000000606482015260840161060f565b6040805180820182526000808252602080830191909152825180840190935260608084529083015290866001600160401b03811115611c8f57611c8f6140ba565b604051908082528060200260200182016040528015611cb8578160200160208202803683370190505b506020820152866001600160401b03811115611cd657611cd66140ba565b604051908082528060200260200182016040528015611cff578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b03811115611d3357611d336140ba565b604051908082528060200260200182016040528015611d5c578160200160208202803683370190505b5081526020860151516001600160401b03811115611d7c57611d7c6140ba565b604051908082528060200260200182016040528015611da5578160200160208202803683370190505b5081602001819052506000611e778a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa158015611e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e72919061516f565b61383f565b905060005b87602001515181101561211257611ec188602001518281518110611ea257611ea2614d8c565b6020026020010151805160009081526020918201519091526040902090565b83602001518281518110611ed757611ed7614d8c565b60209081029190910101528015611f97576020830151611ef860018361518c565b81518110611f0857611f08614d8c565b602002602001015160001c83602001518281518110611f2957611f29614d8c565b602002602001015160001c11611f97576040805162461bcd60e51b815260206004820152602481019190915260008051602061549383398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f72746564606482015260840161060f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec635184602001518381518110611fdc57611fdc614d8c565b60200260200101518b8b600001518581518110611ffb57611ffb614d8c565b60200260200101516040518463ffffffff1660e01b81526004016120389392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015612055573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120799190614fd8565b6001600160c01b03168360000151828151811061209857612098614d8c565b6020026020010181815250506120fe61087e6120d284866000015185815181106120c4576120c4614d8c565b6020026020010151166138d2565b8a6020015184815181106120e8576120e8614d8c565b60200260200101516138fd90919063ffffffff16565b94508061210a81614e93565b915050611e7c565b505061211d836139e1565b60975490935060ff166000816121345760006121b6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015612192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b691906151a3565b905060005b8a811015612835578215612317578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f8681811061221257612212614d8c565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015612252573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227691906151a3565b61228091906151bc565b10156123175760405162461bcd60e51b8152602060048201526066602482015260008051602061549383398151915260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c40161060f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d8481811061235857612358614d8c565b9050013560f81c60f81b60f81c8c8c60a00151858151811061237c5761237c614d8c565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156123d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fc91906151d4565b6001600160401b03191661241f8a604001518381518110611ea257611ea2614d8c565b67ffffffffffffffff1916146124bb5760405162461bcd60e51b8152602060048201526061602482015260008051602061549383398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c40161060f565b6124eb896040015182815181106124d4576124d4614d8c565b60200260200101518761343790919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d8481811061252e5761252e614d8c565b9050013560f81c60f81b60f81c8c8c60c00151858151811061255257612552614d8c565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156125ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d29190614e54565b856020015182815181106125e8576125e8614d8c565b6001600160601b0390921660209283029190910182015285015180518290811061261457612614614d8c565b60200260200101518560000151828151811061263257612632614d8c565b60200260200101906001600160601b031690816001600160601b0316815250506000805b8a6020015151811015612820576126aa8660000151828151811061267c5761267c614d8c565b60200260200101518f8f8681811061269657612696614d8c565b600192013560f81c9290921c811614919050565b1561280e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f868181106126f0576126f0614d8c565b9050013560f81c60f81b60f81c8e8960200151858151811061271457612714614d8c565b60200260200101518f60e00151888151811061273257612732614d8c565b6020026020010151878151811061274b5761274b614d8c565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa1580156127af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d39190614e54565b87518051859081106127e7576127e7614d8c565b602002602001018181516127fb91906151ff565b6001600160601b03169052506001909101905b8061281881614e93565b915050612656565b5050808061282d90614e93565b9150506121bb565b50505060008061284f8c868a606001518b60800151610763565b91509150816128c05760405162461bcd60e51b8152602060048201526043602482015260008051602061549383398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a40161060f565b806129215760405162461bcd60e51b8152602060048201526039602482015260008051602061549383398151915260448201527f7265733a207369676e617475726520697320696e76616c696400000000000000606482015260840161060f565b5050600087826020015160405160200161293c929190615227565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b61296e613a7c565b6129786000613ad6565b565b60408051600180825281830190925260009160609183916020808301908036833701905050905084816000815181106129b5576129b5614d8c565b60209081029190910101526040516361c8a12f60e11b81526000906001600160a01b0388169063c391425e906129f19088908690600401615068565b600060405180830381865afa158015612a0e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a369190810190614ef8565b600081518110612a4857612a48614d8c565b60209081029190910101516040516304ec635160e01b81526004810188905263ffffffff87811660248301529091166044820181905291506000906001600160a01b038916906304ec635190606401602060405180830381865afa158015612ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ad89190614fd8565b6001600160c01b031690506000612aee82613b28565b905081612afc8a838a6108ed565b9550955050505050935093915050565b60cc546001600160a01b03163314612b665760405162461bcd60e51b815260206004820152601d60248201527f41676772656761746f72206d757374206265207468652063616c6c6572000000604482015260640161060f565b6000612b78604085016020860161428d565b9050366000612b8a604087018761526f565b90925090506000612ba1608088016060890161428d565b905060ca6000612bb4602089018961428d565b63ffffffff1663ffffffff1681526020019081526020016000205487604051602001612be091906152b5565b6040516020818303038152906040528051906020012014612c695760405162461bcd60e51b815260206004820152603d60248201527f737570706c696564207461736b20646f6573206e6f74206d617463682074686560448201527f206f6e65207265636f7264656420696e2074686520636f6e7472616374000000606482015260840161060f565b600060cb81612c7b60208a018a61428d565b63ffffffff1663ffffffff1681526020019081526020016000205414612cf85760405162461bcd60e51b815260206004820152602c60248201527f41676772656761746f722068617320616c726561647920726573706f6e64656460448201526b20746f20746865207461736b60a01b606482015260840161060f565b612d227f000000000000000000000000000000000000000000000000000000000000000085615147565b63ffffffff164363ffffffff161115612d935760405162461bcd60e51b815260206004820152602d60248201527f41676772656761746f722068617320726573706f6e64656420746f207468652060448201526c7461736b20746f6f206c61746560981b606482015260840161060f565b600086604051602001612da69190615388565b604051602081830303815290604052805190602001209050600080612dce8387878a8c611a4e565b6040805160808101825263ffffffff43168152602080820184905280850151828401528451606083015291519395509193509091612e10918c91849101615396565b6040516020818303038152906040528051906020012060cb60008c6000016020810190612e3d919061428d565b63ffffffff1663ffffffff168152602001908152602001600020819055507fb6b77f791d125b1522410ab3adf6a5ea133c836a193ce67ed29c129ca1d8f5c08a82604051612e8c929190615396565b60405180910390a160005b86811015612f2d578560ff1684602001518281518110612eb957612eb9614d8c565b6020026020010151612ecb9190615402565b6001600160601b0316606485600001518381518110612eec57612eec614d8c565b60200260200101516001600160601b0316612f079190615431565b1015612f1b57505050505050505050505050565b80612f2581614e93565b915050612e97565b5060608a013560ce5560208a01803590612f47908c61428d565b63ffffffff167f8378be8a33cf3a493910a16e275cd96af4f048c5eb1a2c2962d4066e697fea8060405160405180910390a35050505050505050505050565b612f8e613a7c565b6001600160a01b038116612ff35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060f565b61062181613ad6565b600054610100900460ff161580801561301c5750600054600160ff909116105b806130365750303b158015613036575060005460ff166001145b6130995760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161060f565b6000805460ff1916600117905580156130bc576000805461ff0019166101001790555b6130c7856000613bf4565b6130d084613ad6565b60cc80546001600160a01b038086166001600160a01b03199283161790925560cd8054928516929091169190911790558015613146576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156131a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131c49190614cc0565b6001600160a01b0316336001600160a01b0316146131f45760405162461bcd60e51b815260040161060f90614cdd565b6066541981196066541916146132725760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c6974790000000000000000606482015260840161060f565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610758565b6001600160a01b0381166133375760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a40161060f565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152600080825260208201526133bc613f95565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa90508080156133ef576133f1565bfe5b508061342f5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b604482015260640161060f565b505092915050565b6040805180820190915260008082526020820152613453613fb3565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa90508080156133ef57508061342f5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b604482015260640161060f565b6134d3613fd1565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820190915260008082526020820152600080806135bb60008051602061547383398151915286614da2565b90505b6135c781613cde565b9093509150600080516020615473833981519152828309831415613601576040805180820190915290815260208101919091529392505050565b6000805160206154738339815191526001820890506135be565b60408051808201825286815260208082018690528251808401909352868352820184905260009182919061364d613ff6565b60005b6002811015613812576000613666826006615431565b905084826002811061367a5761367a614d8c565b6020020151518361368c8360006151bc565b600c811061369c5761369c614d8c565b60200201528482600281106136b3576136b3614d8c565b602002015160200151838260016136ca91906151bc565b600c81106136da576136da614d8c565b60200201528382600281106136f1576136f1614d8c565b60200201515151836137048360026151bc565b600c811061371457613714614d8c565b602002015283826002811061372b5761372b614d8c565b60200201515160016020020151836137448360036151bc565b600c811061375457613754614d8c565b602002015283826002811061376b5761376b614d8c565b60200201516020015160006002811061378657613786614d8c565b6020020151836137978360046151bc565b600c81106137a7576137a7614d8c565b60200201528382600281106137be576137be614d8c565b6020020151602001516001600281106137d9576137d9614d8c565b6020020151836137ea8360056151bc565b600c81106137fa576137fa614d8c565b6020020152508061380a81614e93565b915050613650565b5061381b614015565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b60008061384b84613d60565b9050808360ff166001901b116138c95760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c756500606482015260840161060f565b90505b92915050565b6000805b82156138cc576138e760018461518c565b90921691806138f581615450565b9150506138d6565b60408051808201909152600080825260208201526102008261ffff16106139595760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b604482015260640161060f565b8161ffff166001141561396d5750816138cc565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff16106139d657600161ffff871660ff83161c811614156139b9576139b68484613437565b93505b6139c38384613437565b92506201fffe600192831b169101613989565b509195945050505050565b60408051808201909152600080825260208201528151158015613a0657506020820151155b15613a24575050604080518082019091526000808252602082015290565b6040518060400160405280836000015181526020016000805160206154738339815191528460200151613a579190614da2565b613a6f9060008051602061547383398151915261518c565b905292915050565b919050565b6033546001600160a01b031633146129785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600080613b36846138d2565b61ffff166001600160401b03811115613b5157613b516140ba565b6040519080825280601f01601f191660200182016040528015613b7b576020820181803683370190505b5090506000805b825182108015613b93575061010081105b15613bea576001811b935085841615613bda578060f81b838381518110613bbc57613bbc614d8c565b60200101906001600160f81b031916908160001a9053508160010191505b613be381614e93565b9050613b82565b5090949350505050565b6065546001600160a01b0316158015613c1557506001600160a01b03821615155b613c975760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a40161060f565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2613cda826132a9565b5050565b60008080600080516020615473833981519152600360008051602061547383398151915286600080516020615473833981519152888909090890506000613d54827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52600080516020615473833981519152613eed565b91959194509092505050565b600061010082511115613de95760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a40161060f565b8151613df757506000919050565b60008083600081518110613e0d57613e0d614d8c565b0160200151600160f89190911c81901b92505b8451811015613ee457848181518110613e3b57613e3b614d8c565b0160200151600160f89190911c1b9150828211613ed05760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a40161060f565b91811791613edd81614e93565b9050613e20565b50909392505050565b600080613ef8614015565b613f00614033565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa92508280156133ef575082613f8a5760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c757265000000000000604482015260640161060f565b505195945050505050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280613fe4614051565b8152602001613ff1614051565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b038116811461062157600080fd5b60006020828403121561409657600080fd5b81356138c98161406f565b6000602082840312156140b357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156140f2576140f26140ba565b60405290565b60405161010081016001600160401b03811182821017156140f2576140f26140ba565b604051601f8201601f191681016001600160401b0381118282101715614143576141436140ba565b604052919050565b60006040828403121561415d57600080fd5b6141656140d0565b9050813581526020820135602082015292915050565b600082601f83011261418c57600080fd5b604051604081018181106001600160401b03821117156141ae576141ae6140ba565b80604052508060408401858111156141c557600080fd5b845b818110156139d65780358352602092830192016141c7565b6000608082840312156141f157600080fd5b6141f96140d0565b9050614205838361417b565b8152614214836040840161417b565b602082015292915050565b600080600080610120858703121561423657600080fd5b84359350614247866020870161414b565b925061425686606087016141df565b91506142658660e0870161414b565b905092959194509250565b63ffffffff8116811461062157600080fd5b8035613a7781614270565b60006020828403121561429f57600080fd5b81356138c981614270565b6000806000606084860312156142bf57600080fd5b83356142ca8161406f565b92506020848101356001600160401b03808211156142e757600080fd5b818701915087601f8301126142fb57600080fd5b81358181111561430d5761430d6140ba565b61431f601f8201601f1916850161411b565b9150808252888482850101111561433557600080fd5b808484018584013760008482840101525080945050505061435860408501614282565b90509250925092565b600081518084526020808501808196508360051b810191508286016000805b868110156143f7578385038a52825180518087529087019087870190845b818110156143e257835180516001600160a01b031684528a8101518b8501526040908101516001600160601b0316908401529289019260609092019160010161439e565b50509a87019a95505091850191600101614380565b509298975050505050505050565b6020815260006144186020830184614361565b9392505050565b801515811461062157600080fd5b60006020828403121561443f57600080fd5b81356138c98161441f565b60008083601f84011261445c57600080fd5b5081356001600160401b0381111561447357600080fd5b60208301915083602082850101111561448b57600080fd5b9250929050565b600080600080600080608087890312156144ab57600080fd5b86356144b68161406f565b955060208701356144c681614270565b945060408701356001600160401b03808211156144e257600080fd5b6144ee8a838b0161444a565b9096509450606089013591508082111561450757600080fd5b818901915089601f83011261451b57600080fd5b81358181111561452a57600080fd5b8a60208260051b850101111561453f57600080fd5b6020830194508093505050509295509295509295565b600081518084526020808501945080840160005b8381101561458b57815163ffffffff1687529582019590820190600101614569565b509495945050505050565b6000602080835283516080828501526145b260a0850182614555565b905081850151601f19808684030160408701526145cf8383614555565b925060408701519150808684030160608701526145ec8383614555565b60608801518782038301608089015280518083529194508501925084840190600581901b8501860160005b828110156146435784878303018452614631828751614555565b95880195938801939150600101614617565b509998505050505050505050565b60ff8116811461062157600080fd5b60006020828403121561467257600080fd5b81356138c981614651565b60006001600160401b03821115614696576146966140ba565b5060051b60200190565b6000806000606084860312156146b557600080fd5b83356146c08161406f565b92506020848101356001600160401b038111156146dc57600080fd5b8501601f810187136146ed57600080fd5b80356147006146fb8261467d565b61411b565b81815260059190911b8201830190838101908983111561471f57600080fd5b928401925b8284101561473d57833582529284019290840190614724565b809650505050505061435860408501614282565b6020808252825182820181905260009190848201906040850190845b818110156147895783518352928401929184019160010161476d565b50909695505050505050565b600080600080606085870312156147ab57600080fd5b8435935060208501356147bd81614270565b925060408501356001600160401b038111156147d857600080fd5b6147e48782880161444a565b95989497509550505050565b600082601f83011261480157600080fd5b813560206148116146fb8361467d565b82815260059290921b8401810191818101908684111561483057600080fd5b8286015b8481101561485457803561484781614270565b8352918301918301614834565b509695505050505050565b600082601f83011261487057600080fd5b813560206148806146fb8361467d565b82815260069290921b8401810191818101908684111561489f57600080fd5b8286015b84811015614854576148b5888261414b565b8352918301916040016148a3565b600082601f8301126148d457600080fd5b813560206148e46146fb8361467d565b82815260059290921b8401810191818101908684111561490357600080fd5b8286015b848110156148545780356001600160401b038111156149265760008081fd5b6149348986838b01016147f0565b845250918301918301614907565b6000610180828403121561495557600080fd5b61495d6140f8565b905081356001600160401b038082111561497657600080fd5b614982858386016147f0565b8352602084013591508082111561499857600080fd5b6149a48583860161485f565b602084015260408401359150808211156149bd57600080fd5b6149c98583860161485f565b60408401526149db85606086016141df565b60608401526149ed8560e0860161414b565b6080840152610120840135915080821115614a0757600080fd5b614a13858386016147f0565b60a0840152610140840135915080821115614a2d57600080fd5b614a39858386016147f0565b60c0840152610160840135915080821115614a5357600080fd5b50614a60848285016148c3565b60e08301525092915050565b600080600080600060808688031215614a8457600080fd5b8535945060208601356001600160401b0380821115614aa257600080fd5b614aae89838a0161444a565b909650945060408801359150614ac382614270565b90925060608701359080821115614ad957600080fd5b50614ae688828901614942565b9150509295509295909350565b600081518084526020808501945080840160005b8381101561458b5781516001600160601b031687529582019590820190600101614b07565b6040815260008351604080840152614b476080840182614af3565b90506020850151603f19848303016060850152614b648282614af3565b925050508260208301529392505050565b600080600060608486031215614b8a57600080fd5b8335614b958161406f565b9250602084013591506040840135614bac81614270565b809150509250925092565b828152604060208201526000614bd06040830184614361565b949350505050565b600060808284031215614bea57600080fd5b50919050565b600080600060c08486031215614c0557600080fd5b83356001600160401b0380821115614c1c57600080fd5b614c2887838801614bd8565b9450614c378760208801614bd8565b935060a0860135915080821115614c4d57600080fd5b50614c5a86828701614942565b9150509250925092565b60008060008060808587031215614c7a57600080fd5b8435614c858161406f565b93506020850135614c958161406f565b92506040850135614ca58161406f565b91506060850135614cb58161406f565b939692955090935050565b600060208284031215614cd257600080fd5b81516138c98161406f565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b600060208284031215614d3957600080fd5b81516138c98161441f565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082614dbf57634e487b7160e01b600052601260045260246000fd5b500690565b60006020808385031215614dd757600080fd5b82516001600160401b03811115614ded57600080fd5b8301601f81018513614dfe57600080fd5b8051614e0c6146fb8261467d565b81815260059190911b82018301908381019087831115614e2b57600080fd5b928401925b82841015614e4957835182529284019290840190614e30565b979650505050505050565b600060208284031215614e6657600080fd5b81516001600160601b03811681146138c957600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415614ea757614ea7614e7d565b5060010190565b63ffffffff84168152604060208201819052810182905260006001600160fb1b03831115614edb57600080fd5b8260051b8085606085013760009201606001918252509392505050565b60006020808385031215614f0b57600080fd5b82516001600160401b03811115614f2157600080fd5b8301601f81018513614f3257600080fd5b8051614f406146fb8261467d565b81815260059190911b82018301908381019087831115614f5f57600080fd5b928401925b82841015614e49578351614f7781614270565b82529284019290840190614f64565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b63ffffffff84168152604060208201526000614fcf604083018486614f86565b95945050505050565b600060208284031215614fea57600080fd5b81516001600160c01b03811681146138c957600080fd5b60006020828403121561501357600080fd5b81516138c981614270565b600060ff821660ff81141561503557615035614e7d565b60010192915050565b604081526000615052604083018587614f86565b905063ffffffff83166020830152949350505050565b60006040820163ffffffff851683526020604081850152818551808452606086019150828701935060005b818110156150af57845183529383019391830191600101615093565b5090979650505050505050565b6000602080835283518184015263ffffffff8185015116604084015260408401516080606085015280518060a086015260005b8181101561510b5782810184015186820160c0015283016150ef565b8181111561511d57600060c083880101525b50606086015163ffffffff811660808701529250601f01601f19169390930160c001949350505050565b600063ffffffff80831681851680830382111561516657615166614e7d565b01949350505050565b60006020828403121561518157600080fd5b81516138c981614651565b60008282101561519e5761519e614e7d565b500390565b6000602082840312156151b557600080fd5b5051919050565b600082198211156151cf576151cf614e7d565b500190565b6000602082840312156151e657600080fd5b815167ffffffffffffffff19811681146138c957600080fd5b60006001600160601b038381169083168181101561521f5761521f614e7d565b039392505050565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b8381101561526257815185529382019390820190600101615246565b5092979650505050505050565b6000808335601e1984360301811261528657600080fd5b8301803591506001600160401b038211156152a057600080fd5b60200191503681900382131561448b57600080fd5b6020815281356020820152600060208301356152d081614270565b63ffffffff81166040840152506040830135601e198436030181126152f457600080fd5b830180356001600160401b0381111561530c57600080fd5b80360385131561531b57600080fd5b6080606085015261533360a085018260208501614f86565b91505061534260608501614282565b63ffffffff81166080850152509392505050565b803561536181614270565b63ffffffff1682526020818101359083015260408082013590830152606090810135910152565b608081016138cc8284615356565b6153a08184615356565b60a0608082015263ffffffff82511660a0820152602082015160c082015260006040830151608060e08401526153da610120840182614af3565b90506060840151609f19848303016101008501526153f88282614af3565b9695505050505050565b60006001600160601b038083168185168183048111821515161561542857615428614e7d565b02949350505050565b600081600019048311821515161561544b5761544b614e7d565b500290565b600061ffff8083168181141561546857615468614e7d565b600101939250505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a2646970667358221220b10039e976d5dde5e4b407e25e093bd764578137a60f9e3ee7e47f00266cce2b64736f6c634300080c0033",
    "sourceMap": "805:6015:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6703:115;6789:22;;6703:115;;;160:25:135;;;148:2;133:18;6703:115:125;;;;;;;;5826:138:57;;;;;;:::i;:::-;;:::i;:::-;;3832:392;;;;;;:::i;:::-;;:::i;13992:854:72:-;;;;;;:::i;:::-;;:::i;:::-;;;;3746:14:135;;3739:22;3721:41;;3805:14;;3798:22;3793:2;3778:18;;3771:50;3694:18;13992:854:72;3559:268:135;1762:25:125;;;;;-1:-1:-1;;;;;1762:25:125;;;;;;-1:-1:-1;;;;;3996:32:135;;;3978:51;;3966:2;3951:18;1762:25:125;3832:203:135;1705:50:125;;;;;;:::i;:::-;;;;;;;;;;;;;;1562:47;;;;;;:::i;:::-;;;;;;;;;;;;;;3037:1255:75;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2175:168:72:-;;;;;;:::i;:::-;;:::i;5476:3709:75:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4299:136:57:-;;;:::i;5606:149::-;;;;;;:::i;:::-;5724:7;;5695:1;:10;;;;;;;;5724:14;;;5723:24;;5606:149;;;;11839:14:135;;11832:22;11814:41;;11802:2;11787:18;5606:149:57;11674:187:135;9602:654:75;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5418:87:57:-;5491:7;;5418:87;;1125:47:72;;;;;1074:45;;;;;2883:685:125;;;;;;:::i;:::-;;:::i;1011:57:72:-;;;;;4469:9041;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2071:101:0:-;;;:::i;6481:90:125:-;6551:13;;;;6481:90;;;21456:10:135;21444:23;;;21426:42;;21414:2;21399:18;6481:90:125;21282:192:135;1793:24:125;;;;;-1:-1:-1;;;;;1793:24:125;;;1825:37:57;;;;;-1:-1:-1;;;;;1825:37:57;;;1305:27:125;;;;;;;;;1441:85:0;1513:6;;-1:-1:-1;;;;;1513:6:0;1441:85;;1363:32:72;;;;;;;;;1757:712:75;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1178:46:72:-;;;;;3629:2846:125;;;;;;:::i;:::-;;:::i;2321:198:0:-;;;;;;:::i;:::-;;:::i;6577:120:125:-;6663:27;6577:120;;2465:327;;;;;;:::i;:::-;;:::i;4911:437:57:-;;;;;;:::i;:::-;;:::i;5826:138::-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:57;-1:-1:-1;;;;;2285:23:57;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:57;:10;-1:-1:-1;;;;;2271:39:57;;2263:94;;;;-1:-1:-1;;;2263:94:57;;;;;;;:::i;:::-;;;;;;;;;5920:37:::1;5939:17;5920:18;:37::i;:::-;5826:138:::0;:::o;3832:392::-;2125:14;;:35;;-1:-1:-1;;;2125:35:57;;2149:10;2125:35;;;3978:51:135;-1:-1:-1;;;;;2125:14:57;;;;:23;;3951:18:135;;2125:35:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:57;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:57;;26423:2:135;4025:107:57::1;::::0;::::1;26405:21:135::0;26462:2;26442:18;;;26435:30;26501:34;26481:18;;;26474:62;26572:26;26552:18;;;26545:54;26616:19;;4025:107:57::1;26221:420:135::0;4025:107:57::1;4142:7;:25:::0;;;4182:35:::1;::::0;160:25:135;;;4189:10:57::1;::::0;4182:35:::1;::::0;148:2:135;133:18;4182:35:57::1;;;;;;;;3832:392:::0;:::o;13992:854:72:-;14189:22;14213;14322:13;2037:77:89;14373:7:72;14382:3;:5;;;14389:3;:5;;;14396;:7;;;14404:1;14396:10;;;;;;;:::i;:::-;;;;;14408:7;;14416:1;14408:10;;;;14420:5;:7;;;14428:1;14420:10;;;;;;;:::i;:::-;;;;;14432:5;:7;;;14440:1;14432:10;;;;;;;:::i;:::-;;;;;;;;;;14444:7;;14453;;;;14356:105;;;;;;;;;;;27131:19:135;;;27175:2;27166:12;;27159:28;;;;27212:2;27203:12;;27196:28;;;;27249:2;27240:12;;27233:28;;;;27286:3;27277:13;;27270:29;;;;27324:3;27315:13;;27308:29;27362:3;27353:13;;27346:29;27400:3;27391:13;;27384:29;27438:3;27429:13;;27422:29;27476:3;27467:13;;26778:708;14356:105:72;;;;;;;;;;;;;14346:116;;;;;;14338:125;;:144;;;;:::i;:::-;14322:160;-1:-1:-1;14565:274:72;14600:33;14611:21;:3;14322:160;14611:14;:21::i;:::-;14600:5;;:10;:33::i;:::-;14651:22;:20;:22::i;:::-;14691:67;14720:37;14751:5;14720:19;-1:-1:-1;;;;;;;;;;;;;;;;;2392:13:89;;;;;;;;2400:1;2392:13;;2403:1;2392:13;;;;;2313:99;14720:19:72;:30;;:37::i;:::-;14691:23;14706:7;14691:14;:23::i;:::-;:28;;:67::i;:::-;14776:5;998:6;14565:17;:274::i;:::-;14524:315;;;;-1:-1:-1;13992:854:72;-1:-1:-1;;;;;;13992:854:72:o;3037:1255:75:-;3205:19;3236:28;3267:19;-1:-1:-1;;;;;3267:33:75;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3236:66;;3312:28;3343:19;-1:-1:-1;;;;;3343:33:75;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3312:66;;3388:30;3421:19;-1:-1:-1;;;;;3421:34:75;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3388:69;;3468:29;3517:13;:20;-1:-1:-1;;;;;3500:38:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3468:70;;3553:9;3548:699;3572:13;:20;3568:1;:24;3548:699;;;3613:18;3640:13;3654:1;3640:16;;;;;;;;:::i;:::-;;;;;3702:69;;-1:-1:-1;;;3702:69:75;;3640:16;;;;;3702:69;;;28897:36:135;;;28981:10;28969:23;;28949:18;;;28942:51;3640:16:75;-1:-1:-1;;;;;;;;3702:42:75;;;;;28870:18:135;;3702:69:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3702:69:75;;;;;;;;;;;;:::i;:::-;3671:100;;3815:11;:18;-1:-1:-1;;;;;3800:34:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;3800:34:75;;-1:-1:-1;;3800:34:75;;;;;;;;;;;;3785:9;3795:1;3785:12;;;;;;;;:::i;:::-;;;;;;:49;;;;3853:9;3848:389;3872:11;:18;3868:1;:22;3848:389;;;3933:289;;;;;;;;3974:14;-1:-1:-1;;;;;3974:40:75;;4015:11;4027:1;4015:14;;;;;;;;:::i;:::-;;;;;;;3974:56;;;;;;;;;;;;;160:25:135;;148:2;133:18;;14:177;3974:56:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3933:289:75;;;;;4072:11;4084:1;4072:14;;;;;;;;:::i;:::-;;;;;;;3933:289;;;;4116:13;-1:-1:-1;;;;;4116:35:75;;4160:11;4172:1;4160:14;;;;;;;;:::i;:::-;;;;;;;;;;;4116:87;;-1:-1:-1;;;;;;4116:87:75;;;;;;;;;;30086:25:135;;;;30159:4;30147:17;;30127:18;;;30120:45;4116:87:75;30201:23:135;;30181:18;;;30174:51;30059:18;;4116:87:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3933:289:75;;;;3915:9;3925:1;3915:12;;;;;;;;:::i;:::-;;;;;;;3928:1;3915:15;;;;;;;;:::i;:::-;;;;;;:307;;;;3892:3;;;;;:::i;:::-;;;;3848:389;;;;3599:648;;3594:3;;;;;:::i;:::-;;;;3548:699;;;-1:-1:-1;4276:9:75;3037:1255;-1:-1:-1;;;;;;;3037:1255:75:o;2175:168:72:-;1466:19;-1:-1:-1;;;;;1466:25:72;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1452:41:72;:10;-1:-1:-1;;;;;1452:41:72;;1444:146;;;;-1:-1:-1;;;1444:146:72;;31011:2:135;1444:146:72;;;30993:21:135;31050:2;31030:18;;;31023:30;31089:34;31069:18;;;31062:62;31160:34;31140:18;;;31133:62;31232:30;31211:19;;;31204:59;31280:19;;1444:146:72;30809:496:135;1444:146:72;2260:20:::1;:28:::0;;-1:-1:-1;;2260:28:72::1;::::0;::::1;;::::0;;::::1;::::0;;;2303:33:::1;::::0;11814:41:135;;;2303:33:72::1;::::0;11802:2:135;11787:18;2303:33:72::1;;;;;;;2175:168:::0;:::o;5476:3709:75:-;5716:29;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5716:29:75;5757:28;5788:19;-1:-1:-1;;;;;5788:33:75;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5757:66;;5833:52;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5833:52:75;6065:99;;-1:-1:-1;;;6065:99:75;;-1:-1:-1;;;;;6065:55:75;;;;;:99;;6121:20;;6143;;;;6065:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6065:99:75;;;;;;;;;;;;:::i;:::-;6011:153;;6322:84;;-1:-1:-1;;;6322:84:75;;-1:-1:-1;;;;;6322:47:75;;;;;:84;;6370:20;;6392:13;;;;6322:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6322:84:75;;;;;;;;;;;;:::i;:::-;6279:40;;;:127;6487:13;-1:-1:-1;;;;;6472:36:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6425:44:75;;;:83;6523:23;6518:2307;6552:40;;;;-1:-1:-1;6518:2307:75;;;6629:30;6883:20;-1:-1:-1;;;;;6870:41:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6870:41:75;;6804:22;:44;;;6849:17;6804:63;;;;;;;;;;:::i;:::-;;;;;;:107;;;;6931:6;6926:1405;6943:31;;;6926:1405;;;7091:29;7144:19;-1:-1:-1;;;;;7144:55:75;;7225:20;;7246:1;7225:23;;;;;;;:::i;:::-;;;;;;;7275:20;7322:22;:51;;;7374:1;7322:54;;;;;;;;:::i;:::-;;;;;;;7144:254;;;;;;;;;;;;;;;;33651:25:135;;;33695:10;33741:15;;;33736:2;33721:18;;33714:43;33793:15;33788:2;33773:18;;33766:43;33639:2;33624:18;;33452:363;7144:254:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7091:307;-1:-1:-1;;;;;;7441:26:75;;7433:131;;;;-1:-1:-1;;;7433:131:75;;34317:2:135;7433:131:75;;;34299:21:135;34356:2;34336:18;;;34329:30;34395:34;34375:18;;;34368:62;34466:34;34446:18;;;34439:62;34538:30;34517:19;;;34510:59;34586:19;;7433:131:75;34115:496:135;7433:131:75;7750:13;;7764:17;7750:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7719:64:75;;7750:32;;;;;7719:64;;;;7787:1;7718:70;;;:75;7714:603;;-1:-1:-1;7714:603:75;;8024:13;-1:-1:-1;;;;;8024:46:75;;8096:20;;8117:1;8096:23;;;;;;;:::i;:::-;;;;;;;8151:13;;8165:17;8151:32;;;;;;;;;:::i;:::-;8024:228;;-1:-1:-1;;;;;;8024:228:75;;;;;;;;;;30086:25:135;;;;8151:32:75;;;;;;;30127:18:135;;;30120:45;-1:-1:-1;8024:228:75;30201:23:135;;30181:18;;;30174:51;30059:18;;8024:228:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7934:22;:44;;;7979:17;7934:63;;;;;;;;;;:::i;:::-;;;;;;;7998:22;7934:87;;;;;;;;:::i;:::-;:318;;;;:87;;;;;;;;;;;:318;8274:24;;;;:::i;:::-;;;;7714:603;-1:-1:-1;6976:3:75;;;;:::i;:::-;;;;6926:1405;;;;8421:46;8483:22;-1:-1:-1;;;;;8470:36:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8470:36:75;;8421:85;;8525:6;8520:185;8541:22;8537:1;:26;8520:185;;;8624:22;:44;;;8669:17;8624:63;;;;;;;;;;:::i;:::-;;;;;;;8688:1;8624:66;;;;;;;;:::i;:::-;;;;;;;8588:30;8619:1;8588:33;;;;;;;;:::i;:::-;:102;;;;:33;;;;;;;;;;;:102;8565:3;;;;:::i;:::-;;;;8520:185;;;;8784:30;8718:22;:44;;;8763:17;8718:63;;;;;;;;;;:::i;:::-;;;;;;:96;;;;6615:2210;;6594:19;;;;;:::i;:::-;;;;6518:2307;;;;8835:30;8868:19;-1:-1:-1;;;;;8868:34:75;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9060:78;;-1:-1:-1;;;9060:78:75;;8835:69;;-1:-1:-1;;;;;;9060:41:75;;;;;:78;;9102:13;;;;9117:20;;9060:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9060:78:75;;;;;;;;;;;;:::i;:::-;9018:39;;;:120;-1:-1:-1;9018:39:75;5476:3709;-1:-1:-1;;;;;;;;5476:3709:75:o;4299:136:57:-;2125:14;;:35;;-1:-1:-1;;;2125:35:57;;2149:10;2125:35;;;3978:51:135;-1:-1:-1;;;;;2125:14:57;;;;:23;;3951:18:135;;2125:35:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:57;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:57::1;:27:::0;;;4391:37:::1;::::0;160:25:135;;;4398:10:57::1;::::0;4391:37:::1;::::0;148:2:135;133:18;4391:37:57::1;;;;;;;4299:136::o:0;9602:654:75:-;9786:16;9814:35;9852:19;-1:-1:-1;;;;;9852:55:75;;9908:11;9921;9852:81;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9852:81:75;;;;;;;;;;;;:::i;:::-;9814:119;;9943:30;9990:11;:18;-1:-1:-1;;;;;9976:33:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9976:33:75;;9943:66;;10024:9;10019:201;10043:11;:18;10039:1;:22;10019:201;;;10101:19;-1:-1:-1;;;;;10101:55:75;;10157:11;10169:1;10157:14;;;;;;;;:::i;:::-;;;;;;;10173:11;10186:19;10206:1;10186:22;;;;;;;;:::i;:::-;;;;;;;10101:108;;;;;;;;;;;;;;;;33651:25:135;;;33695:10;33741:15;;;33736:2;33721:18;;33714:43;33793:15;33788:2;33773:18;;33766:43;33639:2;33624:18;;33452:363;10101:108:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10082:127:75;:13;10096:1;10082:16;;;;;;;;:::i;:::-;;;;;;;;;;:127;10063:3;;;;:::i;:::-;;;;10019:201;;;-1:-1:-1;10236:13:75;9602:654;-1:-1:-1;;;;;9602:654:75:o;2883:685:125:-;2175:9;;-1:-1:-1;;;;;2175:9:125;2161:10;:23;2153:69;;;;-1:-1:-1;;;2153:69:125;;36311:2:135;2153:69:125;;;36293:21:135;36350:2;36330:18;;;36323:30;36389:34;36369:18;;;36362:62;-1:-1:-1;;;36440:18:135;;;36433:31;36481:19;;2153:69:125;36109:397:135;2153:69:125;3084:19:::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3084:19:125::1;3113:33:::0;;;3156:47:::1;3190:12;3156:47:::0;::::1;:24;::::0;;::::1;:47:::0;;;;3213:61;;::::1;:33;::::0;::::1;:61:::0;3284:37:::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;3308:13;;;;;;3284:37;::::1;3308:13:::0;;;;3284:37;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;;3284:21:125::1;::::0;;::::1;:37:::0;;;;3445:19;::::1;::::0;3284:7;;3445:19:::1;;;:::i;:::-;;::::0;;-1:-1:-1;;3445:19:125;;::::1;::::0;;;;;;3435:30;;3445:19:::1;3435:30:::0;;::::1;::::0;3418:13:::1;::::0;;::::1;::::0;;::::1;3404:28;::::0;;;:13:::1;:28:::0;;;;;;;:61;3495:13;::::1;::::0;3480:38:::1;::::0;::::1;::::0;3510:7;;3480:38:::1;:::i;:::-;;;;;;;;3544:13;::::0;:17:::1;::::0;:13:::1;;::::0;:17:::1;:::i;:::-;3528:13;:33:::0;;-1:-1:-1;;3528:33:125::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;2883:685:125:o;4469:9041:72:-;-1:-1:-1;;;;;;;;;;;;;;;;;4751:7:72;4791:25;4783:93;;;;-1:-1:-1;;;4783:93:72;;37925:2:135;4783:93:72;;;37907:21:135;37964:2;37944:18;;;37937:30;-1:-1:-1;;;;;;;;;;;37983:18:135;;;37976:62;38074:25;38054:18;;;38047:53;38117:19;;4783:93:72;37723:419:135;4783:93:72;4933:17;;;;:24;4909:48;;4908:122;;;;-1:-1:-1;4999:23:72;;;;:30;4975:54;;4908:122;:195;;;;-1:-1:-1;5071:24:72;;;;:31;5047:55;;4908:195;:272;;;;-1:-1:-1;5144:28:72;;;;:35;5120:59;;4908:272;4887:384;;;;-1:-1:-1;;;4887:384:72;;38349:2:135;4887:384:72;;;38331:21:135;38388:2;38368:18;;;38361:30;-1:-1:-1;;;;;;;;;;;38407:18:135;;;38400:62;38498:34;38478:18;;;38471:62;-1:-1:-1;;;38549:19:135;;;38542:32;38591:19;;4887:384:72;38147:469:135;4887:384:72;5337:35;;:42;5303:23;;;;:30;:76;5282:191;;;;-1:-1:-1;;;5282:191:72;;38823:2:135;5282:191:72;;;38805:21:135;38862:2;38842:18;;;38835:30;;;-1:-1:-1;;;;;;;;;;;38881:18:135;;;38874:62;38972:34;38952:18;;;38945:62;-1:-1:-1;;;39023:19:135;;;39016:35;39068:19;;5282:191:72;38621:472:135;5282:191:72;5522:12;5492:43;;:20;:43;;;5484:116;;;;-1:-1:-1;;;5484:116:72;;39300:2:135;5484:116:72;;;39282:21:135;39339:2;39319:18;;;39312:30;-1:-1:-1;;;;;;;;;;;39358:18:135;;;39351:62;39449:30;39429:18;;;39422:58;39497:19;;5484:116:72;39098:424:135;5484:116:72;6117:19;;;;;;;;6090:24;6117:19;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;6117:19:72;6473:13;-1:-1:-1;;;;;6460:34:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6460:34:72;-1:-1:-1;6426:31:72;;;:68;6552:13;-1:-1:-1;;;;;6539:34:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6539:34:72;-1:-1:-1;6504:69:72;;-1:-1:-1;;;;;;;;;;;;;;;;;6666:6:72;:23;;;:30;-1:-1:-1;;;;;6652:45:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6652:45:72;-1:-1:-1;6625:72:72;;6747:23;;;;:30;-1:-1:-1;;;;;6733:45:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6733:45:72;;6707:10;:23;;:71;;;;6957:27;6987:87;7025:13;;6987:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7040:33:72;;;-1:-1:-1;;;7040:33:72;;;;-1:-1:-1;;;;;7040:19:72;:31;;-1:-1:-1;7040:31:72;;-1:-1:-1;7040:33:72;;;;;;;;;;;;;;:31;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6987:37;:87::i;:::-;6957:117;;7094:9;7089:1638;7113:6;:23;;;:30;7109:1;:34;7089:1638;;;7405:40;:6;:23;;;7429:1;7405:26;;;;;;;;:::i;:::-;;;;;;;10534:9:89;;10473:16;10524:20;;;10580:4;10576:13;;;10570:20;10557:34;;;10629:4;10616:18;;;10404:246;7405:40:72;7376:10;:23;;;7400:1;7376:26;;;;;;;;:::i;:::-;;;;;;;;;;:69;7467:6;;7463:277;;7576:23;;;;7600:5;7604:1;7600;:5;:::i;:::-;7576:30;;;;;;;;:::i;:::-;;;;;;;7568:39;;7538:10;:23;;;7562:1;7538:26;;;;;;;;:::i;:::-;;;;;;;7530:35;;:77;7497:224;;;;;-1:-1:-1;;;7497:224:72;;40111:2:135;7497:224:72;;;40093:21:135;40130:18;;;40123:30;;;;-1:-1:-1;;;;;;;;;;;40169:18:135;;;40162:62;40260:34;40240:18;;;40233:62;40312:19;;7497:224:72;39909:428:135;7497:224:72;7901:19;-1:-1:-1;;;;;7901:55:72;;7995:10;:23;;;8019:1;7995:26;;;;;;;;:::i;:::-;;;;;;;8060:20;8113:6;:35;;;8149:1;8113:38;;;;;;;;:::i;:::-;;;;;;;7901:273;;;;;;;;;;;;;;;;33651:25:135;;;33695:10;33741:15;;;33736:2;33721:18;;33714:43;33793:15;33788:2;33773:18;;33766:43;33639:2;33624:18;;33452:363;7901:273:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7850:324:72;:10;:24;;;7875:1;7850:27;;;;;;;;:::i;:::-;;;;;;:324;;;;;8465:247;8495:199;8592:75;8647:19;8617:10;:24;;;8642:1;8617:27;;;;;;;;:::i;:::-;;;;;;;:49;8592:24;:75::i;:::-;8495:6;:23;;;8519:1;8495:26;;;;;;;;:::i;:::-;;;;;;;:67;;:199;;;;:::i;8465:247::-;8459:253;-1:-1:-1;7145:3:72;;;;:::i;:::-;;;;7089:1638;;;;6789:1948;9010:12;:3;:10;:12::i;:::-;9354:20;;9004:18;;-1:-1:-1;9354:20:72;;9325:26;9354:20;9420:65;;9484:1;9420:65;;;9444:10;-1:-1:-1;;;;;9444:35:72;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9388:97;;9505:9;9500:3139;9520:24;;;9500:3139;;;9728:21;9724:369;;;9902:20;9806:116;;9877:21;9806:19;-1:-1:-1;;;;;9806:43:72;;9856:13;;9870:1;9856:16;;;;;;;:::i;:::-;9806:68;;;;;;-1:-1:-1;;;;;;9806:68:72;;;9856:16;;;;;9806:68;;;40673:36:135;-1:-1:-1;40646:18:135;;9806:68:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;;;:::i;:::-;:116;;9773:301;;;;-1:-1:-1;;;9773:301:72;;41055:2:135;9773:301:72;;;41037:21:135;41094:3;41074:18;;;41067:31;-1:-1:-1;;;;;;;;;;;41114:18:135;;;41107:62;41205:34;41185:18;;;41178:62;41277:34;41256:19;;;41249:63;-1:-1:-1;;;41328:19:135;;;41321:37;41375:19;;9773:301:72;40853:547:135;9773:301:72;10362:14;-1:-1:-1;;;;;10362:46:72;;10459:13;;10473:1;10459:16;;;;;;;:::i;:::-;;;;;;;;;10453:23;;10519:20;10576:6;:23;;;10600:1;10576:26;;;;;;;;:::i;:::-;;;;;;;;;;;10362:267;;-1:-1:-1;;;;;;10362:267:72;;;;;;;41630:4:135;41618:17;;;10362:267:72;;;41600:36:135;10362:267:72;41701:15:135;;;41681:18;;;41674:43;41753:15;41733:18;;;41726:43;41573:18;;10362:267:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10290:339:72;;10298:34;:6;:17;;;10316:1;10298:20;;;;;;;;:::i;:34::-;-1:-1:-1;;10290:339:72;;10261:507;;;;-1:-1:-1;;;10261:507:72;;42281:2:135;10261:507:72;;;42263:21:135;42320:2;42300:18;;;42293:30;-1:-1:-1;;;;;;;;;;;42339:18:135;;;42332:62;42430:34;42410:18;;;42403:62;42502:34;42481:19;;;42474:63;-1:-1:-1;;;42553:19:135;;;42546:32;42595:19;;10261:507:72;42079:541:135;10261:507:72;10792:30;10801:6;:17;;;10819:1;10801:20;;;;;;;;:::i;:::-;;;;;;;10792:3;:8;;:30;;;;:::i;:::-;10786:36;;10997:13;-1:-1:-1;;;;;10997:49:72;;11093:13;;11107:1;11093:16;;;;;;;:::i;:::-;;;;;;;;;11087:23;;11149:20;11202:6;:24;;;11227:1;11202:27;;;;;;;;:::i;:::-;;;;;;;;;;;10997:255;;-1:-1:-1;;;;;;10997:255:72;;;;;;;41630:4:135;41618:17;;;10997:255:72;;;41600:36:135;10997:255:72;41701:15:135;;;41681:18;;;41674:43;41753:15;41733:18;;;41726:43;41573:18;;10997:255:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10939:11;:31;;;10971:1;10939:34;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10939:313:72;;;:34;;;;;;;;;;:313;11308:31;;;:34;;11340:1;;11308:34;;;;;;:::i;:::-;;;;;;;11270:11;:32;;;11303:1;11270:35;;;;;;;;:::i;:::-;;;;;;:72;-1:-1:-1;;;;;11270:72:72;;;-1:-1:-1;;;;;11270:72:72;;;;;11429:31;11728:9;11723:902;11747:6;:23;;;:30;11743:1;:34;11723:902;;;11919:71;11937:10;:24;;;11962:1;11937:27;;;;;;;;:::i;:::-;;;;;;;11972:13;;11986:1;11972:16;;;;;;;:::i;:::-;7409:1:90;11972:16:72;;;;;7392:13:90;;;;7391:19;;7385:26;;;-1:-1:-1;7297:121:90;11919:71:72;11915:692;;;12085:13;-1:-1:-1;;;;;12085:43:72;;12183:13;;12197:1;12183:16;;;;;;;:::i;:::-;;;;;;;;;12177:23;;12247:20;12313:10;:23;;;12337:1;12313:26;;;;;;;;:::i;:::-;;;;;;;12380:6;:28;;;12409:1;12380:31;;;;;;;;:::i;:::-;;;;;;;12412:23;12380:56;;;;;;;;:::i;:::-;;;;;;;;;;;12085:382;;-1:-1:-1;;;;;;12085:382:72;;;;;;;42879:4:135;42867:17;;;12085:382:72;;;42849:36:135;12085:382:72;42950:15:135;;;42930:18;;;42923:43;42982:18;;;42975:34;;;;43045:15;43025:18;;;43018:43;42821:19;;12085:382:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12018:32;;:35;;12051:1;;12018:35;;;;;;:::i;:::-;;;;;;:449;;;;;;;:::i;:::-;-1:-1:-1;;;;;12018:449:72;;;-1:-1:-1;12533:25:72;;;;;11915:692;11779:3;;;;:::i;:::-;;;;11723:902;;;;9551:3088;9546:3;;;;;:::i;:::-;;;;9500:3139;;;;9311:3338;;12709:22;12733:21;12758:153;12806:7;12832:3;12854:6;:12;;;12885:6;:12;;;12758:30;:153::i;:::-;12708:203;;;;12933:17;12925:97;;;;-1:-1:-1;;;12925:97:72;;43516:2:135;12925:97:72;;;43498:21:135;43555:2;43535:18;;;43528:30;-1:-1:-1;;;;;;;;;;;43574:18:135;;;43567:62;43665:34;43645:18;;;43638:62;-1:-1:-1;;;43716:19:135;;;43709:34;43760:19;;12925:97:72;43314:471:135;12925:97:72;13044:16;13036:86;;;;-1:-1:-1;;;13036:86:72;;43992:2:135;13036:86:72;;;43974:21:135;44031:2;44011:18;;;44004:30;-1:-1:-1;;;;;;;;;;;44050:18:135;;;44043:62;44141:27;44121:18;;;44114:55;44186:19;;13036:86:72;43790:421:135;13036:86:72;12658:475;;13207:27;13264:20;13286:10;:23;;;13247:63;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;13247:63:72;;;;;;13237:74;;13247:63;13237:74;;;;13470:11;;13237:74;;-1:-1:-1;4469:9041:72;;-1:-1:-1;;;;;;;;;4469:9041:72:o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1757:712:75:-;1991:16;;;2005:1;1991:16;;;;;;;;;1920:7;;1929:19;;1920:7;;1991:16;;;;;;;;;;;-1:-1:-1;1991:16:75;1960:47;;2034:10;2017:11;2029:1;2017:14;;;;;;;;:::i;:::-;;;;;;;;;;:27;2070:81;;-1:-1:-1;;;2070:81:75;;2054:13;;-1:-1:-1;;;;;2070:55:75;;;;;:81;;2126:11;;2139;;2070:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2070:81:75;;;;;;;;;;;;:::i;:::-;2152:1;2070:84;;;;;;;;:::i;:::-;;;;;;;;;;;2192:87;;-1:-1:-1;;;2192:87:75;;;;;45065:25:135;;;2054:100:75;45126:23:135;;;45106:18;;;45099:51;2054:100:75;;;45166:18:135;;;45159:34;;;2054:100:75;-1:-1:-1;2169:20:75;;-1:-1:-1;;;;;2192:55:75;;;;;45038:18:135;;2192:87:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2169:110:75;;;2290:26;2319:44;2350:12;2319:30;:44::i;:::-;2290:73;;2382:12;2396:65;2413:19;2434:13;2449:11;2396:16;:65::i;:::-;2374:88;;;;;;;;1757:712;;;;;;:::o;3629:2846:125:-;1939:10;;-1:-1:-1;;;;;1939:10:125;1925;:24;1917:66;;;;-1:-1:-1;;;1917:66:125;;45406:2:135;1917:66:125;;;45388:21:135;45445:2;45425:18;;;45418:30;45484:31;45464:18;;;45457:59;45533:18;;1917:66:125;45204:353:135;1917:66:125;3836:23:::1;3862:21;::::0;;;::::1;::::0;::::1;;:::i;:::-;3836:47:::0;-1:-1:-1;3893:28:125::1;;3924:18;;::::0;::::1;:4:::0;:18:::1;:::i;:::-;3893:49:::0;;-1:-1:-1;3893:49:125;-1:-1:-1;3952:32:125::1;3987:30;::::0;;;::::1;::::0;::::1;;:::i;:::-;3952:65:::0;-1:-1:-1;4179:13:125::1;:46;4193:31;;::::0;::::1;:12:::0;:31:::1;:::i;:::-;4179:46;;;;;;;;;;;;;;;;4169:4;4158:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;4148:27;;;;;;:77;4127:185;;;::::0;-1:-1:-1;;;4127:185:125;;47365:2:135;4127:185:125::1;::::0;::::1;47347:21:135::0;47404:2;47384:18;;;47377:30;47443:34;47423:18;;;47416:62;47514:31;47494:18;;;47487:59;47563:19;;4127:185:125::1;47163:425:135::0;4127:185:125::1;4435:1;4374:16;4435:1:::0;4391:31:::1;;::::0;::::1;:12:::0;:31:::1;:::i;:::-;4374:49;;;;;;;;;;;;;;;;:63;4353:154;;;::::0;-1:-1:-1;;;4353:154:125;;47795:2:135;4353:154:125::1;::::0;::::1;47777:21:135::0;47834:2;47814:18;;;47807:30;47873:34;47853:18;;;47846:62;-1:-1:-1;;;47924:18:135;;;47917:42;47976:19;;4353:154:125::1;47593:408:135::0;4353:154:125::1;4562:46;4581:27;4562:16:::0;:46:::1;:::i;:::-;4538:70;;4545:12;4538:70;;;;4517:162;;;::::0;-1:-1:-1;;;4517:162:125;;48208:2:135;4517:162:125::1;::::0;::::1;48190:21:135::0;48247:2;48227:18;;;48220:30;48286:34;48266:18;;;48259:62;-1:-1:-1;;;48337:18:135;;;48330:43;48390:19;;4517:162:125::1;48006:409:135::0;4517:162:125::1;4810:15;4849:12;4838:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;4828:35;;;;;;4810:53;;4910:42;4954:24:::0;4994:86:::1;5010:7;5019:13;;5034:16;5052:27;4994:15;:86::i;:::-;5142:197;::::0;;::::1;::::0;::::1;::::0;;::::1;5183:12;5142:197;::::0;;::::1;::::0;;::::1;::::0;;;5240:37;;::::1;::::0;5142:197;;;;5291:38;;5142:197;;;;5463:46;;4909:171;;-1:-1:-1;4909:171:125;;-1:-1:-1;5142:197:125;;5463:46:::1;::::0;5474:12;;5142:197;;5463:46:::1;;:::i;:::-;;;;;;;;;;;;;5453:57;;;;;;5401:16;:49;5418:12;:31;;;;;;;;;;:::i;:::-;5401:49;;;;;;;;;;;;;;;:109;;;;5552:49;5566:12;5580:20;5552:49;;;;;;;:::i;:::-;;;;;;;;5702:9;5697:586;5717:24:::0;;::::1;5697:586;;;6107:25;6058:75;;:17;:37;;;6096:1;6058:40;;;;;;;;:::i;:::-;;;;;;;:75;;;;:::i;:::-;-1:-1:-1::0;;;;;5969:164:125::1;1248:3;5969:17;:38;;;6008:1;5969:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5969:66:125::1;;;;;:::i;:::-;:164;5948:325;;;6252:7;;;;;;;;;3629:2846:::0;;;:::o;5948:325::-:1;5743:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5697:586;;;-1:-1:-1::0;6318:29:125::1;::::0;::::1;;6293:22;:54:::0;6445:22:::1;::::0;::::1;::::0;::::1;::::0;6412:31:::1;::::0;6318:12;6412:31:::1;:::i;:::-;6398:70;;;;;;;;;;;;3826:2649;;;;;;;;3629:2846:::0;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;50652:2:135;2401:73:0::1;::::0;::::1;50634:21:135::0;50691:2;50671:18;;;50664:30;50730:34;50710:18;;;50703:62;-1:-1:-1;;;50781:18:135;;;50774:36;50827:19;;2401:73:0::1;50450:402:135::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;2465:327:125:-:0;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:3;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;51059:2:135;3157:201:1;;;51041:21:135;51098:2;51078:18;;;51071:30;51137:34;51117:18;;;51110:62;-1:-1:-1;;;51188:18:135;;;51181:44;51242:19;;3157:201:1;50857:410:135;3157:201:1;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;2630:47:125::1;2648:15;2000:1:57;2630:17:125;:47::i;:::-;2687:32;2706:12;2687:18;:32::i;:::-;2729:10;:24:::0;;-1:-1:-1;;;;;2729:24:125;;::::1;-1:-1:-1::0;;;;;;2729:24:125;;::::1;;::::0;;;2763:9:::1;:22:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3479:99:1;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;40673:36:135;;3553:14:1;;40661:2:135;40646:18;3553:14:1;;;;;;;3479:99;3101:483;2465:327:125;;;;:::o;4911:437:57:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:57;-1:-1:-1;;;;;2285:23:57;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:57;:10;-1:-1:-1;;;;;2271:39:57;;2263:94;;;;-1:-1:-1;;;2263:94:57;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:57;;51673:2:135;5104:150:57::1;::::0;::::1;51655:21:135::0;51712:2;51692:18;;;51685:30;51751:34;51731:18;;;51724:62;51822:26;51802:18;;;51795:54;51866:19;;5104:150:57::1;51471:420:135::0;5104:150:57::1;5264:7;:25:::0;;;5304:37:::1;::::0;160:25:135;;;5313:10:57::1;::::0;5304:37:::1;::::0;148:2:135;133:18;5304:37:57::1;14:177:135::0;6024:360:57;-1:-1:-1;;;;;6127:40:57;;6106:160;;;;-1:-1:-1;;;6106:160:57;;52098:2:135;6106:160:57;;;52080:21:135;52137:2;52117:18;;;52110:30;52176:34;52156:18;;;52149:62;52247:34;52227:18;;;52220:62;-1:-1:-1;;;52298:19:135;;;52291:40;52348:19;;6106:160:57;51896:477:135;6106:160:57;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:57;;;52638:34:135;;52708:15;;;52703:2;52688:18;;52681:43;6281:52:57;;52573:18:135;6281:52:57;;;;;;;6343:14;:34;;-1:-1:-1;;;;;;6343:34:57;-1:-1:-1;;;;;6343:34:57;;;;;;;;;;6024:360::o;7084:580:89:-;-1:-1:-1;;;;;;;;;;;;;;;;;7184:23:89;;:::i;:::-;7228:3;;7217:14;;:8;7252:3;;;;7241:8;;;:14;7265:8;;;;:12;;;-1:-1:-1;;7452:1:89;7446:4;7217:14;7436:1;7429:4;7422:5;7418:16;7407:53;7396:64;-1:-1:-1;7396:64:89;7557:48;;;;7530:75;;7557:48;7582:9;7530:75;;7632:7;7624:33;;;;-1:-1:-1;;;7624:33:89;;52937:2:135;7624:33:89;;;52919:21:135;52976:2;52956:18;;;52949:30;-1:-1:-1;;;52995:18:135;;;52988:43;53048:18;;7624:33:89;52735:337:135;7624:33:89;7174:490;;7084:580;;;;:::o;4823:615::-;-1:-1:-1;;;;;;;;;;;;;;;;;4926:23:89;;:::i;:::-;4970:4;;4959:15;;:8;4995:4;;;;4984:8;;;:15;5020:4;;5009:8;;;;:15;;;;5045:4;;;;5034:8;;;:15;-1:-1:-1;;5225:1:89;5219:4;4959:15;5209:1;5202:4;5195:5;5191:16;5180:53;5169:64;-1:-1:-1;5169:64:89;5330:48;;;;5303:75;5406:7;5398:33;;;;-1:-1:-1;;;5398:33:89;;53279:2:135;5398:33:89;;;53261:21:135;53318:2;53298:18;;;53291:30;-1:-1:-1;;;53337:18:135;;;53330:43;53390:18;;5398:33:89;53077:337:135;4070:128:89;4119:14;;:::i;:::-;-1:-1:-1;4152:39:89;;;;;;;;3635:77;4152:39;;;;;;3752:77;4152:39;;;;;;;;;;;;;;3869:77;4152:39;;3986:77;4152:39;;;;;;;;;;;;;;;4070:128::o;11044:451::-;-1:-1:-1;;;;;;;;;;;;;;;;;11123:12:89;;;11185:24;-1:-1:-1;;;;;;;;;;;11193:2:89;11185:24;:::i;:::-;11173:36;;11220:239;11259:13;11270:1;11259:10;:13::i;:::-;11247:25;;-1:-1:-1;11247:25:89;-1:-1:-1;;;;;;;;;;;;11336:1:89;11333;11326:24;11318:4;:32;11314:92;;;11378:13;;;;;;;;;;;;;;;;;;;;11044:451;-1:-1:-1;;;11044:451:89:o;11314:92::-;-1:-1:-1;;;;;;;;;;;11434:1:89;11431;11424:24;11420:28;;11220:239;;9189:1112;9397:31;;;;;;;;;;;;;;;;;;9438;;;;;;;;;;;;;;;;9375:4;;;;9397:31;9480:24;;:::i;:::-;9520:9;9515:302;9539:1;9535;:5;9515:302;;;9561:9;9573:5;:1;9577;9573:5;:::i;:::-;9561:17;;9607:2;9610:1;9607:5;;;;;;;:::i;:::-;;;;;:7;9592:5;9598;:1;9607:7;9598:5;:::i;:::-;9592:12;;;;;;;:::i;:::-;;;;:22;9643:2;9646:1;9643:5;;;;;;;:::i;:::-;;;;;:7;;;9628:5;9634:1;9638;9634:5;;;;:::i;:::-;9628:12;;;;;;;:::i;:::-;;;;:22;9679:2;9682:1;9679:5;;;;;;;:::i;:::-;;;;;:7;:10;9664:5;9670;:1;9674;9670:5;:::i;:::-;9664:12;;;;;;;:::i;:::-;;;;:25;9718:2;9721:1;9718:5;;;;;;;:::i;:::-;;;;;:7;9726:1;9718:10;;;;9703:5;9709;:1;9713;9709:5;:::i;:::-;9703:12;;;;;;;:::i;:::-;;;;:25;9757:2;9760:1;9757:5;;;;;;;:::i;:::-;;;;;:7;;;9765:1;9757:10;;;;;;;:::i;:::-;;;;;9742:5;9748;:1;9752;9748:5;:::i;:::-;9742:12;;;;;;;:::i;:::-;;;;:25;9796:2;9799:1;9796:5;;;;;;;:::i;:::-;;;;;:7;;;9804:1;9796:10;;;;;;;:::i;:::-;;;;;9781:5;9787;:1;9791;9787:5;:::i;:::-;9781:12;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;9542:3:89;;;;:::i;:::-;;;;9515:302;;;;9827:21;;:::i;:::-;9858:12;10032:4;10027:3;10012:13;10005:5;10002:1;9990:10;9979:58;10282:6;;9968:69;;10282:11;;;;-1:-1:-1;10265:29:89;;-1:-1:-1;;;;;;;;;;9189:1112:89:o;3313:360:90:-;3424:7;3443:14;3460:44;3486:17;3460:25;:44::i;:::-;3443:61;;3546:6;3529:13;3524:18;;:1;:18;;3523:29;3515:127;;;;-1:-1:-1;;;3515:127:90;;53621:2:135;3515:127:90;;;53603:21:135;53660:2;53640:18;;;53633:30;53699:34;53679:18;;;53672:62;53770:33;53750:18;;;53743:61;53821:19;;3515:127:90;53419:427:135;3515:127:90;3660:6;-1:-1:-1;3313:360:90;;;;;:::o;6802:406::-;6858:6;;6902:209;6909:5;;6902:209;;6936:5;6940:1;6936;:5;:::i;:::-;6930:12;;;;7025:7;;;;:::i;:::-;;;;6902:209;;5698:1197:89;-1:-1:-1;;;;;;;;;;;;;;;;;5824:4:89;5820:1;:8;;;5812:37;;;;-1:-1:-1;;;5812:37:89;;54255:2:135;5812:37:89;;;54237:21:135;54294:2;54274:18;;;54267:30;-1:-1:-1;;;54313:18:135;;;54306:46;54369:18;;5812:37:89;54053:340:135;5812:37:89;5893:1;:6;;5898:1;5893:6;5890:44;;;-1:-1:-1;5922:1:89;5915:8;;5890:44;6016:19;;;;;;;;;5989:24;6016:19;;;;;;;;;6145:1;;6208;;6337:481;6348:1;6343:6;;:1;:6;;;6337:481;;6493:1;6483:6;;;;;;;6482:12;;:17;6478:84;;;6529:14;6534:3;6539;6529:4;:14::i;:::-;6523:20;;6478:84;6644:14;6649:3;6654;6644:4;:14::i;:::-;6638:20;-1:-1:-1;6765:7:89;6771:1;6765:7;;;;;6790:3;6337:481;;;-1:-1:-1;6885:3:89;;5698:1197;-1:-1:-1;;;;;5698:1197:89:o;4461:295::-;-1:-1:-1;;;;;;;;;;;;;;;;;4600:3:89;;:8;:20;;;;-1:-1:-1;4612:3:89;;;;:8;4600:20;4596:154;;;-1:-1:-1;;4643:13:89;;;;;;;;;-1:-1:-1;4643:13:89;;;;;;;;4461:295::o;4596:154::-;4694:45;;;;;;;;4702:1;:3;;;4694:45;;;;-1:-1:-1;;;;;;;;;;;4721:1:89;:3;;;:16;;;;:::i;:::-;4707:31;;-1:-1:-1;;;;;;;;;;;4707:31:89;:::i;:::-;4694:45;;4687:52;4461:295;-1:-1:-1;;4461:295:89:o;4596:154::-;4461:295;;;:::o;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:4;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;54600:2:135;1654:68:0;;;54582:21:135;;;54619:18;;;54612:30;54678:34;54658:18;;;54651:62;54730:18;;1654:68:0;54398:356:135;2673:187:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;5470:1257:90:-;5537:12;5655:15;5733:23;5769:20;5782:6;5769:12;:20::i;:::-;5759:31;;-1:-1:-1;;;;;5759:31:90;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5759:31:90;;5733:57;;5846:18;6098:9;6093:601;6127:10;:17;6114:10;:30;6113:45;;;;;6154:3;6150:1;:7;6113:45;6093:601;;;6257:1;:6;;;-1:-1:-1;6344:16:90;;;:21;6340:344;;6529:1;6516:16;;6491:10;6502;6491:22;;;;;;;;:::i;:::-;;;;:41;-1:-1:-1;;;;;6491:41:90;;;;;;;;;6655:12;;;;;6340:344;6160:3;;;:::i;:::-;;;6093:601;;;-1:-1:-1;6710:10:90;;5470:1257;-1:-1:-1;;;;5470:1257:90:o;2943:441:57:-;3077:14;;-1:-1:-1;;;;;3077:14:57;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:57;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:57;;54961:2:135;3048:197:57;;;54943:21:135;55000:2;54980:18;;;54973:30;55039:34;55019:18;;;55012:62;55110:34;55090:18;;;55083:62;-1:-1:-1;;;55161:19:135;;;55154:38;55209:19;;3048:197:57;54759:475:135;3048:197:57;3255:7;:26;;;3296:36;;160:25:135;;;3303:10:57;;3296:36;;148:2:135;133:18;3296:36:57;;;;;;;3342:35;3361:15;3342:18;:35::i;:::-;2943:441;;:::o;11616:433:89:-;11670:7;;;-1:-1:-1;;;;;;;;;;;11801:1:89;-1:-1:-1;;;;;;;;;;;11785:1:89;-1:-1:-1;;;;;;;;;;;11769:1:89;11766;11759:24;11752:47;11745:70;11730:85;;11912:9;11924:91;11931:4;11937:65;-1:-1:-1;;;;;;;;;;;11924:6:89;:91::i;:::-;12034:4;;11912:103;;-1:-1:-1;11616:433:89;;-1:-1:-1;;;11616:433:89:o;1193:1693:90:-;1283:7;576:3;1414:17;:24;:49;;1406:142;;;;-1:-1:-1;;;1406:142:90;;55441:2:135;1406:142:90;;;55423:21:135;55480:2;55460:18;;;55453:30;;;55519:34;55499:18;;;55492:62;55590:34;55570:18;;;55563:62;-1:-1:-1;;;55641:19:135;;;55634:35;55686:19;;1406:142:90;55239:472:135;1406:142:90;1624:24;;1620:77;;-1:-1:-1;1684:1:90;;1193:1693;-1:-1:-1;1193:1693:90:o;1620:77::-;1775:14;1878:15;2185:17;2203:1;2185:20;;;;;;;;:::i;:::-;;;;;2174:1;2185:20;;;;;2174:32;;;;-1:-1:-1;2289:568:90;2313:17;:24;2309:1;:28;2289:568;;;2485:17;2503:1;2485:20;;;;;;;;:::i;:::-;;;;;2474:1;2485:20;;;;;2474:32;;-1:-1:-1;2670:16:90;;;2662:100;;;;-1:-1:-1;;;2662:100:90;;55918:2:135;2662:100:90;;;55900:21:135;55957:2;55937:18;;;55930:30;55996:34;55976:18;;;55969:62;56067:34;56047:18;;;56040:62;-1:-1:-1;;;56118:19:135;;;56111:38;56166:19;;2662:100:90;55716:475:135;2662:100:90;2829:16;;;;2339:3;;;:::i;:::-;;;2289:568;;;-1:-1:-1;2873:6:90;;1193:1693;-1:-1:-1;;;1193:1693:90:o;12055:874:89:-;12146:14;12172:12;12194:24;;:::i;:::-;12228:20;;:::i;:::-;12269:4;12258:15;;;12341:8;;;:15;;;12425:8;;;:15;;;12509:8;;;:16;;;12535:8;;;:20;;;12565:8;;;:19;;;12673:6;12667:4;12258:15;12571:1;12650:4;12643:5;12639:16;12628:58;12617:69;-1:-1:-1;12617:69:89;12783:48;;;;12756:75;12858:7;12850:46;;;;-1:-1:-1;;;12850:46:89;;56398:2:135;12850:46:89;;;56380:21:135;56437:2;56417:18;;;56410:30;56476:28;56456:18;;;56449:56;56522:18;;12850:46:89;56196:350:135;12850:46:89;-1:-1:-1;12913:9:89;;;-1:-1:-1;;;;;12055:874:89:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:148:135:-;-1:-1:-1;;;;;288:31:135;;278:42;;268:70;;334:1;331;324:12;349:288;432:6;485:2;473:9;464:7;460:23;456:32;453:52;;;501:1;498;491:12;453:52;540:9;527:23;559:48;601:5;559:48;:::i;642:180::-;701:6;754:2;742:9;733:7;729:23;725:32;722:52;;;770:1;767;760:12;722:52;-1:-1:-1;793:23:135;;642:180;-1:-1:-1;642:180:135:o;827:127::-;888:10;883:3;879:20;876:1;869:31;919:4;916:1;909:15;943:4;940:1;933:15;959:257;1031:4;1025:11;;;1063:17;;-1:-1:-1;;;;;1095:34:135;;1131:22;;;1092:62;1089:88;;;1157:18;;:::i;:::-;1193:4;1186:24;959:257;:::o;1221:255::-;1293:2;1287:9;1335:6;1323:19;;-1:-1:-1;;;;;1357:34:135;;1393:22;;;1354:62;1351:88;;;1419:18;;:::i;1481:275::-;1552:2;1546:9;1617:2;1598:13;;-1:-1:-1;;1594:27:135;1582:40;;-1:-1:-1;;;;;1637:34:135;;1673:22;;;1634:62;1631:88;;;1699:18;;:::i;:::-;1735:2;1728:22;1481:275;;-1:-1:-1;1481:275:135:o;1761:282::-;1815:5;1863:4;1851:9;1846:3;1842:19;1838:30;1835:50;;;1881:1;1878;1871:12;1835:50;1903:22;;:::i;:::-;1894:31;;1961:9;1948:23;1941:5;1934:38;2032:2;2021:9;2017:18;2004:32;1999:2;1992:5;1988:14;1981:56;1761:282;;;;:::o;2048:646::-;2098:5;2151:3;2144:4;2136:6;2132:17;2128:27;2118:55;;2169:1;2166;2159:12;2118:55;2202:2;2196:9;2244:2;2236:6;2232:15;2313:6;2301:10;2298:22;-1:-1:-1;;;;;2265:10:135;2262:34;2259:62;2256:88;;;2324:18;;:::i;:::-;2364:10;2360:2;2353:22;;2395:6;2436:2;2428:6;2424:15;2462:3;2454:6;2451:15;2448:35;;;2479:1;2476;2469:12;2448:35;2503:6;2518:146;2534:6;2529:3;2526:15;2518:146;;;2602:17;;2590:30;;2649:4;2640:14;;;;2551;2518:146;;2699:320;2753:5;2801:4;2789:9;2784:3;2780:19;2776:30;2773:50;;;2819:1;2816;2809:12;2773:50;2841:22;;:::i;:::-;2832:31;;2886:40;2922:3;2911:9;2886:40;:::i;:::-;2879:5;2872:55;2961:51;3008:3;3001:4;2990:9;2986:20;2961:51;:::i;:::-;2954:4;2947:5;2943:16;2936:77;2699:320;;;;:::o;3024:530::-;3188:6;3196;3204;3212;3265:3;3253:9;3244:7;3240:23;3236:33;3233:53;;;3282:1;3279;3272:12;3233:53;3318:9;3305:23;3295:33;;3347:54;3393:7;3388:2;3377:9;3373:18;3347:54;:::i;:::-;3337:64;;3420:54;3466:7;3461:2;3450:9;3446:18;3420:54;:::i;:::-;3410:64;;3493:55;3540:7;3534:3;3523:9;3519:19;3493:55;:::i;:::-;3483:65;;3024:530;;;;;;;:::o;4040:121::-;4125:10;4118:5;4114:22;4107:5;4104:33;4094:61;;4151:1;4148;4141:12;4166:132;4233:20;;4262:30;4233:20;4262:30;:::i;4303:245::-;4361:6;4414:2;4402:9;4393:7;4389:23;4385:32;4382:52;;;4430:1;4427;4420:12;4382:52;4469:9;4456:23;4488:30;4512:5;4488:30;:::i;4553:1017::-;4668:6;4676;4684;4737:2;4725:9;4716:7;4712:23;4708:32;4705:52;;;4753:1;4750;4743:12;4705:52;4792:9;4779:23;4811:48;4853:5;4811:48;:::i;:::-;4878:5;-1:-1:-1;4902:2:135;4940:18;;;4927:32;-1:-1:-1;;;;;5008:14:135;;;5005:34;;;5035:1;5032;5025:12;5005:34;5073:6;5062:9;5058:22;5048:32;;5118:7;5111:4;5107:2;5103:13;5099:27;5089:55;;5140:1;5137;5130:12;5089:55;5176:2;5163:16;5198:2;5194;5191:10;5188:36;;;5204:18;;:::i;:::-;5246:53;5289:2;5270:13;;-1:-1:-1;;5266:27:135;5262:36;;5246:53;:::i;:::-;5233:66;;5322:2;5315:5;5308:17;5362:7;5357:2;5352;5348;5344:11;5340:20;5337:33;5334:53;;;5383:1;5380;5373:12;5334:53;5438:2;5433;5429;5425:11;5420:2;5413:5;5409:14;5396:45;5482:1;5477:2;5472;5465:5;5461:14;5457:23;5450:34;;5503:5;5493:15;;;;;5527:37;5560:2;5549:9;5545:18;5527:37;:::i;:::-;5517:47;;4553:1017;;;;;:::o;5575:1336::-;5646:3;5684:5;5678:12;5711:6;5706:3;5699:19;5737:4;5778:2;5773:3;5769:12;5803:11;5830;5823:18;;5880:6;5877:1;5873:14;5866:5;5862:26;5850:38;;5922:2;5915:5;5911:14;5943:1;5964;5974:911;5990:6;5985:3;5982:15;5974:911;;;6055:16;;;6043:29;;6095:13;;6167:9;;6189:22;;;6275:11;;;;6233:13;;;;6310:1;6324:455;6340:8;6335:3;6332:17;6324:455;;;6413:15;;6463:9;;-1:-1:-1;;;;;6459:35:135;6445:50;;6541:11;;;6535:18;6519:14;;;6512:42;6581:4;6635:11;;;6629:18;-1:-1:-1;;;;;6625:51:135;6609:14;;;6602:75;6748:17;;;;6714:4;6703:16;;;;6491:1;6359:11;6324:455;;;-1:-1:-1;;6863:12:135;;;;6800:5;-1:-1:-1;;6828:15:135;;;;6016:1;6007:11;5974:911;;;-1:-1:-1;6901:4:135;;5575:1336;-1:-1:-1;;;;;;;;5575:1336:135:o;6916:383::-;7199:2;7188:9;7181:21;7162:4;7219:74;7289:2;7278:9;7274:18;7266:6;7219:74;:::i;:::-;7211:82;6916:383;-1:-1:-1;;;6916:383:135:o;7304:118::-;7390:5;7383:13;7376:21;7369:5;7366:32;7356:60;;7412:1;7409;7402:12;7427:241;7483:6;7536:2;7524:9;7515:7;7511:23;7507:32;7504:52;;;7552:1;7549;7542:12;7504:52;7591:9;7578:23;7610:28;7632:5;7610:28;:::i;7673:347::-;7724:8;7734:6;7788:3;7781:4;7773:6;7769:17;7765:27;7755:55;;7806:1;7803;7796:12;7755:55;-1:-1:-1;7829:20:135;;-1:-1:-1;;;;;7861:30:135;;7858:50;;;7904:1;7901;7894:12;7858:50;7941:4;7933:6;7929:17;7917:29;;7993:3;7986:4;7977:6;7969;7965:19;7961:30;7958:39;7955:59;;;8010:1;8007;8000:12;7955:59;7673:347;;;;;:::o;8025:1224::-;8178:6;8186;8194;8202;8210;8218;8271:3;8259:9;8250:7;8246:23;8242:33;8239:53;;;8288:1;8285;8278:12;8239:53;8327:9;8314:23;8346:48;8388:5;8346:48;:::i;:::-;8413:5;-1:-1:-1;8470:2:135;8455:18;;8442:32;8483;8442;8483;:::i;:::-;8534:7;-1:-1:-1;8592:2:135;8577:18;;8564:32;-1:-1:-1;;;;;8645:14:135;;;8642:34;;;8672:1;8669;8662:12;8642:34;8711:58;8761:7;8752:6;8741:9;8737:22;8711:58;:::i;:::-;8788:8;;-1:-1:-1;8685:84:135;-1:-1:-1;8876:2:135;8861:18;;8848:32;;-1:-1:-1;8892:16:135;;;8889:36;;;8921:1;8918;8911:12;8889:36;8959:8;8948:9;8944:24;8934:34;;9006:7;8999:4;8995:2;8991:13;8987:27;8977:55;;9028:1;9025;9018:12;8977:55;9068:2;9055:16;9094:2;9086:6;9083:14;9080:34;;;9110:1;9107;9100:12;9080:34;9163:7;9158:2;9148:6;9145:1;9141:14;9137:2;9133:23;9129:32;9126:45;9123:65;;;9184:1;9181;9174:12;9123:65;9215:2;9211;9207:11;9197:21;;9237:6;9227:16;;;;;8025:1224;;;;;;;;:::o;9353:451::-;9405:3;9443:5;9437:12;9470:6;9465:3;9458:19;9496:4;9525:2;9520:3;9516:12;9509:19;;9562:2;9555:5;9551:14;9583:1;9593:186;9607:6;9604:1;9601:13;9593:186;;;9672:13;;9687:10;9668:30;9656:43;;9719:12;;;;9754:15;;;;9629:1;9622:9;9593:186;;;-1:-1:-1;9795:3:135;;9353:451;-1:-1:-1;;;;;9353:451:135:o;9809:1493::-;9983:4;10012:2;10041;10030:9;10023:21;10079:6;10073:13;10122:4;10117:2;10106:9;10102:18;10095:32;10150:62;10207:3;10196:9;10192:19;10178:12;10150:62;:::i;:::-;10136:76;;10261:2;10253:6;10249:15;10243:22;10288:2;10284:7;10355:2;10343:9;10335:6;10331:22;10327:31;10322:2;10311:9;10307:18;10300:59;10382:51;10426:6;10410:14;10382:51;:::i;:::-;10368:65;;10482:2;10474:6;10470:15;10464:22;10442:44;;10550:2;10538:9;10530:6;10526:22;10522:31;10517:2;10506:9;10502:18;10495:59;10577:51;10621:6;10605:14;10577:51;:::i;:::-;10677:2;10665:15;;10659:22;10723;;;10719:31;;10712:4;10697:20;;10690:61;10800:21;;10830:22;;;10563:65;;-1:-1:-1;10965:23:135;;;-1:-1:-1;10868:15:135;;;;10926:1;10922:14;;;10910:27;;10906:36;;11006:1;11016:257;11030:6;11027:1;11024:13;11016:257;;;11116:2;11107:6;11099;11095:19;11091:28;11086:3;11079:41;11143:50;11186:6;11177;11171:13;11143:50;:::i;:::-;11216:15;;;;11251:12;;;;11133:60;-1:-1:-1;11052:1:135;11045:9;11016:257;;;-1:-1:-1;11290:6:135;9809:1493;-1:-1:-1;;;;;;;;;9809:1493:135:o;11307:114::-;11391:4;11384:5;11380:16;11373:5;11370:27;11360:55;;11411:1;11408;11401:12;11426:243;11483:6;11536:2;11524:9;11515:7;11511:23;11507:32;11504:52;;;11552:1;11549;11542:12;11504:52;11591:9;11578:23;11610:29;11633:5;11610:29;:::i;11866:183::-;11926:4;-1:-1:-1;;;;;11951:6:135;11948:30;11945:56;;;11981:18;;:::i;:::-;-1:-1:-1;12026:1:135;12022:14;12038:4;12018:25;;11866:183::o;12054:1145::-;12185:6;12193;12201;12254:2;12242:9;12233:7;12229:23;12225:32;12222:52;;;12270:1;12267;12260:12;12222:52;12309:9;12296:23;12328:48;12370:5;12328:48;:::i;:::-;12395:5;-1:-1:-1;12419:2:135;12457:18;;;12444:32;-1:-1:-1;;;;;12488:30:135;;12485:50;;;12531:1;12528;12521:12;12485:50;12554:22;;12607:4;12599:13;;12595:27;-1:-1:-1;12585:55:135;;12636:1;12633;12626:12;12585:55;12672:2;12659:16;12695:60;12711:43;12751:2;12711:43;:::i;:::-;12695:60;:::i;:::-;12789:15;;;12871:1;12867:10;;;;12859:19;;12855:28;;;12820:12;;;;12895:19;;;12892:39;;;12927:1;12924;12917:12;12892:39;12951:11;;;;12971:142;12987:6;12982:3;12979:15;12971:142;;;13053:17;;13041:30;;13004:12;;;;13091;;;;12971:142;;;13132:5;13122:15;;;;;;;13156:37;13189:2;13178:9;13174:18;13156:37;:::i;13204:632::-;13375:2;13427:21;;;13497:13;;13400:18;;;13519:22;;;13346:4;;13375:2;13598:15;;;;13572:2;13557:18;;;13346:4;13641:169;13655:6;13652:1;13649:13;13641:169;;;13716:13;;13704:26;;13785:15;;;;13750:12;;;;13677:1;13670:9;13641:169;;;-1:-1:-1;13827:3:135;;13204:632;-1:-1:-1;;;;;;13204:632:135:o;14488:610::-;14575:6;14583;14591;14599;14652:2;14640:9;14631:7;14627:23;14623:32;14620:52;;;14668:1;14665;14658:12;14620:52;14704:9;14691:23;14681:33;;14764:2;14753:9;14749:18;14736:32;14777:30;14801:5;14777:30;:::i;:::-;14826:5;-1:-1:-1;14882:2:135;14867:18;;14854:32;-1:-1:-1;;;;;14898:30:135;;14895:50;;;14941:1;14938;14931:12;14895:50;14980:58;15030:7;15021:6;15010:9;15006:22;14980:58;:::i;:::-;14488:610;;;;-1:-1:-1;15057:8:135;-1:-1:-1;;;;14488:610:135:o;15341:735::-;15394:5;15447:3;15440:4;15432:6;15428:17;15424:27;15414:55;;15465:1;15462;15455:12;15414:55;15501:6;15488:20;15527:4;15551:60;15567:43;15607:2;15567:43;:::i;15551:60::-;15645:15;;;15731:1;15727:10;;;;15715:23;;15711:32;;;15676:12;;;;15755:15;;;15752:35;;;15783:1;15780;15773:12;15752:35;15819:2;15811:6;15807:15;15831:216;15847:6;15842:3;15839:15;15831:216;;;15927:3;15914:17;15944:30;15968:5;15944:30;:::i;:::-;15987:18;;16025:12;;;;15864;;15831:216;;;-1:-1:-1;16065:5:135;15341:735;-1:-1:-1;;;;;;15341:735:135:o;16081:689::-;16142:5;16195:3;16188:4;16180:6;16176:17;16172:27;16162:55;;16213:1;16210;16203:12;16162:55;16249:6;16236:20;16275:4;16299:60;16315:43;16355:2;16315:43;:::i;16299:60::-;16393:15;;;16479:1;16475:10;;;;16463:23;;16459:32;;;16424:12;;;;16503:15;;;16500:35;;;16531:1;16528;16521:12;16500:35;16567:2;16559:6;16555:15;16579:162;16595:6;16590:3;16587:15;16579:162;;;16663:35;16694:3;16689;16663:35;:::i;:::-;16651:48;;16719:12;;;;16621:4;16612:14;16579:162;;16775:908;16838:5;16891:3;16884:4;16876:6;16872:17;16868:27;16858:55;;16909:1;16906;16899:12;16858:55;16945:6;16932:20;16971:4;16995:60;17011:43;17051:2;17011:43;:::i;16995:60::-;17089:15;;;17175:1;17171:10;;;;17159:23;;17155:32;;;17120:12;;;;17199:15;;;17196:35;;;17227:1;17224;17217:12;17196:35;17263:2;17255:6;17251:15;17275:379;17291:6;17286:3;17283:15;17275:379;;;17377:3;17364:17;-1:-1:-1;;;;;17400:11:135;17397:35;17394:125;;;17473:1;17502:2;17498;17491:14;17394:125;17544:67;17607:3;17602:2;17588:11;17580:6;17576:24;17572:33;17544:67;:::i;:::-;17532:80;;-1:-1:-1;17632:12:135;;;;17308;;17275:379;;17688:1566;17762:5;17810:6;17798:9;17793:3;17789:19;17785:32;17782:52;;;17830:1;17827;17820:12;17782:52;17852:22;;:::i;:::-;17843:31;;17910:9;17897:23;-1:-1:-1;;;;;17980:2:135;17972:6;17969:14;17966:34;;;17996:1;17993;17986:12;17966:34;18023:56;18075:3;18066:6;18055:9;18051:22;18023:56;:::i;:::-;18016:5;18009:71;18133:2;18122:9;18118:18;18105:32;18089:48;;18162:2;18152:8;18149:16;18146:36;;;18178:1;18175;18168:12;18146:36;18214:66;18276:3;18265:8;18254:9;18250:24;18214:66;:::i;:::-;18209:2;18202:5;18198:14;18191:90;18334:2;18323:9;18319:18;18306:32;18290:48;;18363:2;18353:8;18350:16;18347:36;;;18379:1;18376;18369:12;18347:36;18415:66;18477:3;18466:8;18455:9;18451:24;18415:66;:::i;:::-;18410:2;18403:5;18399:14;18392:90;18514:50;18560:3;18555:2;18544:9;18540:18;18514:50;:::i;:::-;18509:2;18502:5;18498:14;18491:74;18599:51;18646:3;18640;18629:9;18625:19;18599:51;:::i;:::-;18592:4;18585:5;18581:16;18574:77;18704:3;18693:9;18689:19;18676:33;18660:49;;18734:2;18724:8;18721:16;18718:36;;;18750:1;18747;18740:12;18718:36;18788:58;18842:3;18831:8;18820:9;18816:24;18788:58;:::i;:::-;18781:4;18774:5;18770:16;18763:84;18900:3;18889:9;18885:19;18872:33;18856:49;;18930:2;18920:8;18917:16;18914:36;;;18946:1;18943;18936:12;18914:36;18984:58;19038:3;19027:8;19016:9;19012:24;18984:58;:::i;:::-;18977:4;18970:5;18966:16;18959:84;19096:3;19085:9;19081:19;19068:33;19052:49;;19126:2;19116:8;19113:16;19110:36;;;19142:1;19139;19132:12;19110:36;;19179:68;19243:3;19232:8;19221:9;19217:24;19179:68;:::i;:::-;19173:3;19166:5;19162:15;19155:93;;17688:1566;;;;:::o;19259:896::-;19401:6;19409;19417;19425;19433;19486:3;19474:9;19465:7;19461:23;19457:33;19454:53;;;19503:1;19500;19493:12;19454:53;19539:9;19526:23;19516:33;;19600:2;19589:9;19585:18;19572:32;-1:-1:-1;;;;;19664:2:135;19656:6;19653:14;19650:34;;;19680:1;19677;19670:12;19650:34;19719:58;19769:7;19760:6;19749:9;19745:22;19719:58;:::i;:::-;19796:8;;-1:-1:-1;19693:84:135;-1:-1:-1;19881:2:135;19866:18;;19853:32;;-1:-1:-1;19894:30:135;19853:32;19894:30;:::i;:::-;19943:5;;-1:-1:-1;20001:2:135;19986:18;;19973:32;;20017:16;;;20014:36;;;20046:1;20043;20036:12;20014:36;;20069:80;20141:7;20130:8;20119:9;20115:24;20069:80;:::i;:::-;20059:90;;;19259:896;;;;;;;;:::o;20160:467::-;20212:3;20250:5;20244:12;20277:6;20272:3;20265:19;20303:4;20332:2;20327:3;20323:12;20316:19;;20369:2;20362:5;20358:14;20390:1;20400:202;20414:6;20411:1;20408:13;20400:202;;;20479:13;;-1:-1:-1;;;;;20475:46:135;20463:59;;20542:12;;;;20577:15;;;;20436:1;20429:9;20400:202;;20632:645;20861:2;20850:9;20843:21;20824:4;20899:6;20893:13;20942:2;20937;20926:9;20922:18;20915:30;20968:62;21025:3;21014:9;21010:19;20996:12;20968:62;:::i;:::-;20954:76;;21079:4;21071:6;21067:17;21061:24;21153:2;21149:7;21137:9;21129:6;21125:22;21121:36;21116:2;21105:9;21101:18;21094:64;21175:51;21219:6;21203:14;21175:51;:::i;:::-;21167:59;;;;21264:6;21257:4;21246:9;21242:20;21235:36;20632:645;;;;;:::o;21711:501::-;21817:6;21825;21833;21886:2;21874:9;21865:7;21861:23;21857:32;21854:52;;;21902:1;21899;21892:12;21854:52;21941:9;21928:23;21960:48;22002:5;21960:48;:::i;:::-;22027:5;-1:-1:-1;22079:2:135;22064:18;;22051:32;;-1:-1:-1;22135:2:135;22120:18;;22107:32;22148;22107;22148;:::i;:::-;22199:7;22189:17;;;21711:501;;;;;:::o;22217:454::-;22528:6;22517:9;22510:25;22571:2;22566;22555:9;22551:18;22544:30;22491:4;22591:74;22661:2;22650:9;22646:18;22638:6;22591:74;:::i;:::-;22583:82;22217:454;-1:-1:-1;;;;22217:454:135:o;22911:153::-;22968:5;23013:3;23004:6;22999:3;22995:16;22991:26;22988:46;;;23030:1;23027;23020:12;22988:46;-1:-1:-1;23052:6:135;22911:153;-1:-1:-1;22911:153:135:o;23069:767::-;23250:6;23258;23266;23319:3;23307:9;23298:7;23294:23;23290:33;23287:53;;;23336:1;23333;23326:12;23287:53;23376:9;23363:23;-1:-1:-1;;;;;23446:2:135;23438:6;23435:14;23432:34;;;23462:1;23459;23452:12;23432:34;23485:64;23541:7;23532:6;23521:9;23517:22;23485:64;:::i;:::-;23475:74;;23568:60;23620:7;23615:2;23604:9;23600:18;23568:60;:::i;:::-;23558:70;;23681:3;23670:9;23666:19;23653:33;23637:49;;23711:2;23701:8;23698:16;23695:36;;;23727:1;23724;23717:12;23695:36;;23750:80;23822:7;23811:8;23800:9;23796:24;23750:80;:::i;:::-;23740:90;;;23069:767;;;;;:::o;24110:763::-;24220:6;24228;24236;24244;24297:3;24285:9;24276:7;24272:23;24268:33;24265:53;;;24314:1;24311;24304:12;24265:53;24353:9;24340:23;24372:48;24414:5;24372:48;:::i;:::-;24439:5;-1:-1:-1;24496:2:135;24481:18;;24468:32;24509:50;24468:32;24509:50;:::i;:::-;24578:7;-1:-1:-1;24637:2:135;24622:18;;24609:32;24650:50;24609:32;24650:50;:::i;:::-;24719:7;-1:-1:-1;24778:2:135;24763:18;;24750:32;24791:50;24750:32;24791:50;:::i;:::-;24110:763;;;;-1:-1:-1;24110:763:135;;-1:-1:-1;;24110:763:135:o;24878:268::-;24948:6;25001:2;24989:9;24980:7;24976:23;24972:32;24969:52;;;25017:1;25014;25007:12;24969:52;25049:9;25043:16;25068:48;25110:5;25068:48;:::i;25151:406::-;25353:2;25335:21;;;25392:2;25372:18;;;25365:30;25431:34;25426:2;25411:18;;25404:62;-1:-1:-1;;;25497:2:135;25482:18;;25475:40;25547:3;25532:19;;25151:406::o;25562:245::-;25629:6;25682:2;25670:9;25661:7;25657:23;25653:32;25650:52;;;25698:1;25695;25688:12;25650:52;25730:9;25724:16;25749:28;25771:5;25749:28;:::i;25812:404::-;26014:2;25996:21;;;26053:2;26033:18;;;26026:30;26092:34;26087:2;26072:18;;26065:62;-1:-1:-1;;;26158:2:135;26143:18;;26136:38;26206:3;26191:19;;25812:404::o;26646:127::-;26707:10;26702:3;26698:20;26695:1;26688:31;26738:4;26735:1;26728:15;26762:4;26759:1;26752:15;27623:209;27655:1;27681;27671:132;;27725:10;27720:3;27716:20;27713:1;27706:31;27760:4;27757:1;27750:15;27788:4;27785:1;27778:15;27671:132;-1:-1:-1;27817:9:135;;27623:209::o;29004:881::-;29099:6;29130:2;29173;29161:9;29152:7;29148:23;29144:32;29141:52;;;29189:1;29186;29179:12;29141:52;29222:9;29216:16;-1:-1:-1;;;;;29247:6:135;29244:30;29241:50;;;29287:1;29284;29277:12;29241:50;29310:22;;29363:4;29355:13;;29351:27;-1:-1:-1;29341:55:135;;29392:1;29389;29382:12;29341:55;29421:2;29415:9;29444:60;29460:43;29500:2;29460:43;:::i;29444:60::-;29538:15;;;29620:1;29616:10;;;;29608:19;;29604:28;;;29569:12;;;;29644:19;;;29641:39;;;29676:1;29673;29666:12;29641:39;29700:11;;;;29720:135;29736:6;29731:3;29728:15;29720:135;;;29802:10;;29790:23;;29753:12;;;;29833;;;;29720:135;;;29874:5;29004:881;-1:-1:-1;;;;;;;29004:881:135:o;30236:296::-;30305:6;30358:2;30346:9;30337:7;30333:23;30329:32;30326:52;;;30374:1;30371;30364:12;30326:52;30406:9;30400:16;-1:-1:-1;;;;;30449:5:135;30445:38;30438:5;30435:49;30425:77;;30498:1;30495;30488:12;30537:127;30598:10;30593:3;30589:20;30586:1;30579:31;30629:4;30626:1;30619:15;30653:4;30650:1;30643:15;30669:135;30708:3;-1:-1:-1;;30729:17:135;;30726:43;;;30749:18;;:::i;:::-;-1:-1:-1;30796:1:135;30785:13;;30669:135::o;31310:572::-;31537:10;31525:23;;31507:42;;31585:2;31580;31565:18;;31558:30;;;31604:18;;31597:34;;;-1:-1:-1;;;;;;31643:31:135;;31640:51;;;31687:1;31684;31677:12;31640:51;31721:6;31718:1;31714:14;31778:6;31770;31765:2;31754:9;31750:18;31737:48;31855:1;31808:22;;31832:2;31804:31;31844:13;;;-1:-1:-1;31804:31:135;31310:572;-1:-1:-1;;;31310:572:135:o;31887:954::-;31981:6;32012:2;32055;32043:9;32034:7;32030:23;32026:32;32023:52;;;32071:1;32068;32061:12;32023:52;32104:9;32098:16;-1:-1:-1;;;;;32129:6:135;32126:30;32123:50;;;32169:1;32166;32159:12;32123:50;32192:22;;32245:4;32237:13;;32233:27;-1:-1:-1;32223:55:135;;32274:1;32271;32264:12;32223:55;32303:2;32297:9;32326:60;32342:43;32382:2;32342:43;:::i;32326:60::-;32420:15;;;32502:1;32498:10;;;;32490:19;;32486:28;;;32451:12;;;;32526:19;;;32523:39;;;32558:1;32555;32548:12;32523:39;32582:11;;;;32602:209;32618:6;32613:3;32610:15;32602:209;;;32691:3;32685:10;32708:30;32732:5;32708:30;:::i;:::-;32751:18;;32635:12;;;;32789;;;;32602:209;;32846:266;32934:6;32929:3;32922:19;32986:6;32979:5;32972:4;32967:3;32963:14;32950:43;-1:-1:-1;33038:1:135;33013:16;;;33031:4;33009:27;;;33002:38;;;;33094:2;33073:15;;;-1:-1:-1;;33069:29:135;33060:39;;;33056:50;;32846:266::o;33117:330::-;33312:10;33304:6;33300:23;33289:9;33282:42;33360:2;33355;33344:9;33340:18;33333:30;33263:4;33380:61;33437:2;33426:9;33422:18;33414:6;33406;33380:61;:::i;:::-;33372:69;33117:330;-1:-1:-1;;;;;33117:330:135:o;33820:290::-;33890:6;33943:2;33931:9;33922:7;33918:23;33914:32;33911:52;;;33959:1;33956;33949:12;33911:52;33985:16;;-1:-1:-1;;;;;34030:31:135;;34020:42;;34010:70;;34076:1;34073;34066:12;34616:249;34685:6;34738:2;34726:9;34717:7;34713:23;34709:32;34706:52;;;34754:1;34751;34744:12;34706:52;34786:9;34780:16;34805:30;34829:5;34805:30;:::i;34870:175::-;34907:3;34951:4;34944:5;34940:16;34980:4;34971:7;34968:17;34965:43;;;34988:18;;:::i;:::-;35037:1;35024:15;;34870:175;-1:-1:-1;;34870:175:135:o;35050:331::-;35234:2;35223:9;35216:21;35197:4;35254:61;35311:2;35300:9;35296:18;35288:6;35280;35254:61;:::i;:::-;35246:69;;35363:10;35355:6;35351:23;35346:2;35335:9;35331:18;35324:51;35050:331;;;;;;:::o;35386:718::-;35554:4;35602:2;35591:9;35587:18;35644:10;35636:6;35632:23;35621:9;35614:42;35675:2;35713;35708;35697:9;35693:18;35686:30;35736:6;35771;35765:13;35802:6;35794;35787:22;35840:2;35829:9;35825:18;35818:25;;35878:2;35870:6;35866:15;35852:29;;35899:1;35909:169;35923:6;35920:1;35917:13;35909:169;;;35984:13;;35972:26;;36053:15;;;;36018:12;;;;35945:1;35938:9;35909:169;;;-1:-1:-1;36095:3:135;;35386:718;-1:-1:-1;;;;;;;35386:718:135:o;36511:974::-;36649:4;36678:2;36707;36696:9;36689:21;36752:6;36746:13;36741:2;36730:9;36726:18;36719:41;36824:10;36818:2;36810:6;36806:15;36800:22;36796:39;36791:2;36780:9;36776:18;36769:67;36883:2;36875:6;36871:15;36865:22;36923:4;36918:2;36907:9;36903:18;36896:32;36957:12;36951:19;37007:6;37001:3;36990:9;36986:19;36979:35;37032:1;37042:147;37056:6;37053:1;37050:13;37042:147;;;37152:20;;;37148:29;;37142:36;37117:17;;;37136:3;37113:27;37106:73;37071:10;;37042:147;;;37207:6;37204:1;37201:13;37198:92;;;37278:1;37272:3;37263:6;37252:9;37248:22;37244:32;37237:43;37198:92;-1:-1:-1;37339:2:135;37327:15;;37321:22;9330:10;9319:22;;37401:4;37386:20;;9307:35;37321:22;-1:-1:-1;37468:2:135;37447:15;-1:-1:-1;;37443:29:135;37428:45;;;;37475:3;37424:55;;36511:974;-1:-1:-1;;;;36511:974:135:o;37490:228::-;37529:3;37557:10;37594:2;37591:1;37587:10;37624:2;37621:1;37617:10;37655:3;37651:2;37647:12;37642:3;37639:21;37636:47;;;37663:18;;:::i;:::-;37699:13;;37490:228;-1:-1:-1;;;;37490:228:135:o;39527:247::-;39595:6;39648:2;39636:9;39627:7;39623:23;39619:32;39616:52;;;39664:1;39661;39654:12;39616:52;39696:9;39690:16;39715:29;39738:5;39715:29;:::i;39779:125::-;39819:4;39847:1;39844;39841:8;39838:34;;;39852:18;;:::i;:::-;-1:-1:-1;39889:9:135;;39779:125::o;40342:184::-;40412:6;40465:2;40453:9;40444:7;40440:23;40436:32;40433:52;;;40481:1;40478;40471:12;40433:52;-1:-1:-1;40504:16:135;;40342:184;-1:-1:-1;40342:184:135:o;40720:128::-;40760:3;40791:1;40787:6;40784:1;40781:13;40778:39;;;40797:18;;:::i;:::-;-1:-1:-1;40833:9:135;;40720:128::o;41780:294::-;41850:6;41903:2;41891:9;41882:7;41878:23;41874:32;41871:52;;;41919:1;41916;41909:12;41871:52;41945:16;;-1:-1:-1;;41990:35:135;;41980:46;;41970:74;;42040:1;42037;42030:12;43072:237;43111:4;-1:-1:-1;;;;;43216:10:135;;;;43186;;43238:12;;;43235:38;;;43253:18;;:::i;:::-;43290:13;;43072:237;-1:-1:-1;;;43072:237:135:o;44216:644::-;44464:10;44459:3;44455:20;44446:6;44441:3;44437:16;44433:43;44428:3;44421:56;44403:3;44508:1;44503:3;44499:11;44539:6;44533:13;44588:4;44627:2;44619:6;44615:15;44648:1;44658:175;44672:6;44669:1;44666:13;44658:175;;;44735:13;;44721:28;;44771:14;;;;44808:15;;;;44694:1;44687:9;44658:175;;;-1:-1:-1;44849:5:135;;44216:644;-1:-1:-1;;;;;;;44216:644:135:o;45562:521::-;45639:4;45645:6;45705:11;45692:25;45799:2;45795:7;45784:8;45768:14;45764:29;45760:43;45740:18;45736:68;45726:96;;45818:1;45815;45808:12;45726:96;45845:33;;45897:20;;;-1:-1:-1;;;;;;45929:30:135;;45926:50;;;45972:1;45969;45962:12;45926:50;46005:4;45993:17;;-1:-1:-1;46036:14:135;46032:27;;;46022:38;;46019:58;;;46073:1;46070;46063:12;46088:1070;46265:2;46254:9;46247:21;46317:6;46304:20;46299:2;46288:9;46284:18;46277:48;46228:4;46372:2;46364:6;46360:15;46347:29;46385:30;46409:5;46385:30;:::i;:::-;46462:10;46455:5;46451:22;46446:2;46435:9;46431:18;46424:50;;46534:2;46526:6;46522:15;46509:29;46618:2;46614:7;46605:6;46589:14;46585:27;46581:41;46561:18;46557:66;46547:94;;46637:1;46634;46627:12;46547:94;46665:31;;46719:21;;-1:-1:-1;;;;;46752:30:135;;46749:50;;;46795:1;46792;46785:12;46749:50;46843:6;46827:14;46823:27;46815:6;46811:40;46808:60;;;46864:1;46861;46854:12;46808:60;46904:4;46899:2;46888:9;46884:18;46877:32;46932:72;46999:3;46988:9;46984:19;46976:6;46971:2;46962:7;46958:16;46932:72;:::i;:::-;46918:86;;;47033:34;47063:2;47055:6;47051:15;47033:34;:::i;:::-;9330:10;9319:22;;47123:4;47108:20;;9307:35;-1:-1:-1;47146:6:135;46088:1070;-1:-1:-1;;;46088:1070:135:o;48420:391::-;48523:5;48510:19;48538:32;48562:7;48538:32;:::i;:::-;48604:10;48591:24;48579:37;;48672:4;48661:16;;;48648:30;48632:14;;;48625:54;48735:4;48724:16;;;48711:30;48695:14;;;48688:54;48798:4;48787:16;;;48774:30;48758:14;;48751:54;48420:391::o;48816:275::-;49014:3;48999:19;;49027:58;49003:9;49067:6;49027:58;:::i;49096:893::-;49377:58;49425:9;49417:6;49377:58;:::i;:::-;49472:3;49466;49455:9;49451:19;49444:32;49532:10;49523:6;49517:13;49513:30;49507:3;49496:9;49492:19;49485:59;49599:4;49591:6;49587:17;49581:24;49575:3;49564:9;49560:19;49553:53;49358:4;49653;49645:6;49641:17;49635:24;49696:3;49690;49679:9;49675:19;49668:32;49723:62;49780:3;49769:9;49765:19;49751:12;49723:62;:::i;:::-;49709:76;;49834:4;49826:6;49822:17;49816:24;49909:3;49905:8;49893:9;49885:6;49881:22;49877:37;49871:3;49860:9;49856:19;49849:66;49932:51;49976:6;49960:14;49932:51;:::i;:::-;49924:59;49096:893;-1:-1:-1;;;;;;49096:893:135:o;49994:278::-;50033:7;-1:-1:-1;;;;;50118:2:135;50115:1;50111:10;50148:2;50145:1;50141:10;50204:3;50200:2;50196:12;50191:3;50188:21;50181:3;50174:11;50167:19;50163:47;50160:73;;;50213:18;;:::i;:::-;50253:13;;49994:278;-1:-1:-1;;;;49994:278:135:o;50277:168::-;50317:7;50383:1;50379;50375:6;50371:14;50368:1;50365:21;50360:1;50353:9;50346:17;50342:45;50339:71;;;50390:18;;:::i;:::-;-1:-1:-1;50430:9:135;;50277:168::o;53851:197::-;53889:3;53917:6;53958:2;53951:5;53947:14;53985:2;53976:7;53973:15;53970:41;;;53991:18;;:::i;:::-;54040:1;54027:15;;53851:197;-1:-1:-1;;;53851:197:135:o",
    "linkReferences": {},
    "immutableReferences": {
      "18344": [
        {
          "start": 1008,
          "length": 32
        },
        {
          "start": 3461,
          "length": 32
        },
        {
          "start": 7681,
          "length": 32
        },
        {
          "start": 8089,
          "length": 32
        },
        {
          "start": 8659,
          "length": 32
        }
      ],
      "18347": [
        {
          "start": 950,
          "length": 32
        },
        {
          "start": 9455,
          "length": 32
        },
        {
          "start": 9905,
          "length": 32
        }
      ],
      "18350": [
        {
          "start": 911,
          "length": 32
        },
        {
          "start": 8985,
          "length": 32
        }
      ],
      "18353": [
        {
          "start": 1236,
          "length": 32
        },
        {
          "start": 8502,
          "length": 32
        }
      ],
      "78722": [
        {
          "start": 1310,
          "length": 32
        },
        {
          "start": 11517,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "aggregator()": "245a7bfc",
    "allTaskHashes(uint32)": "2d89f6fc",
    "allTaskResponses(uint32)": "2cb223d5",
    "blsApkRegistry()": "5df45946",
    "checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))": "6efb4636",
    "createNewTask(uint256,uint32,bytes)": "6b92787e",
    "delegation()": "df5cf723",
    "generator()": "7afa1eed",
    "getCheckSignaturesIndices(address,uint32,bytes,bytes32[])": "4f739f74",
    "getLatestPendingStateHash()": "0373408d",
    "getOperatorState(address,bytes,uint32)": "3563b0d1",
    "getOperatorState(address,bytes32,uint32)": "cefdc1d4",
    "getQuorumBitmapsAtBlockNumber(address,bytes32[],uint32)": "5c155662",
    "getTaskResponseWindowBlock()": "f5c9899d",
    "initialize(address,address,address,address)": "f8c8765e",
    "latestTaskNum()": "8b00ce7c",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "registryCoordinator()": "6d14a987",
    "renounceOwnership()": "715018a6",
    "respondToTask((uint256,uint32,bytes,uint32),(uint32,bytes32,bytes32,bytes32),(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))": "e4e3ad77",
    "setPauserRegistry(address)": "10d67a2f",
    "setStaleStakesForbidden(bool)": "416c7e5e",
    "stakeRegistry()": "68304835",
    "staleStakesForbidden()": "b98d0908",
    "taskNumber()": "72d18e8d",
    "transferOwnership(address)": "f2fde38b",
    "trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": "171f1d5b",
    "unpause(uint256)": "fabc1cbc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"_registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_taskResponseWindowBlock\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"taskIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"taskCreatedBlock\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IFinalizerTaskManager.Task\",\"name\":\"task\",\"type\":\"tuple\"}],\"name\":\"NewTaskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"StaleStakesForbiddenUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"taskIndex\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"TaskCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTaskIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"storageProofHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"pendingStateHash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct IFinalizerTaskManager.TaskResponse\",\"name\":\"taskResponse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"taskResponsedBlock\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"hashOfNonSigners\",\"type\":\"bytes32\"},{\"internalType\":\"uint96[]\",\"name\":\"quroumStakeTotals\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"quroumStakeSigned\",\"type\":\"uint96[]\"}],\"indexed\":false,\"internalType\":\"struct IFinalizerTaskManager.TaskResponseMetadata\",\"name\":\"taskResponseMetadata\",\"type\":\"tuple\"}],\"name\":\"TaskResponded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"allTaskHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"allTaskResponses\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blsApkRegistry\",\"outputs\":[{\"internalType\":\"contract IBLSApkRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint32[]\",\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point[]\",\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point[]\",\"name\":\"quorumApks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[][]\",\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\"}],\"internalType\":\"struct IBLSSignatureChecker.NonSignerStakesAndSignature\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"checkSignatures\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96[]\",\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\"}],\"internalType\":\"struct IBLSSignatureChecker.QuorumStakeTotals\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"createNewTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"nonSignerOperatorIds\",\"type\":\"bytes32[]\"}],\"name\":\"getCheckSignaturesIndices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32[]\",\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[][]\",\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\"}],\"internalType\":\"struct OperatorStateRetriever.CheckSignaturesIndices\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPendingStateHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getOperatorState\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct OperatorStateRetriever.Operator[][]\",\"name\":\"\",\"type\":\"tuple[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getOperatorState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct OperatorStateRetriever.Operator[][]\",\"name\":\"\",\"type\":\"tuple[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"operatorIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getQuorumBitmapsAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaskResponseWindowBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_generator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTaskNum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"taskCreatedBlock\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\"}],\"internalType\":\"struct IFinalizerTaskManager.Task\",\"name\":\"task\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTaskIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"storageProofHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"pendingStateHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IFinalizerTaskManager.TaskResponse\",\"name\":\"taskResponse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32[]\",\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point[]\",\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point[]\",\"name\":\"quorumApks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[]\",\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32[][]\",\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\"}],\"internalType\":\"struct IBLSSignatureChecker.NonSignerStakesAndSignature\",\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\"}],\"name\":\"respondToTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setStaleStakesForbidden\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeRegistry\",\"outputs\":[{\"internalType\":\"contract IStakeRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staleStakesForbidden\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"sigma\",\"type\":\"tuple\"}],\"name\":\"trySignatureAndApkVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"pairingSuccessful\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"siganatureIsValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))\":{\"details\":\"Before signature verification, the function verifies operator stake information.  This includes ensuring that the provided `referenceBlockNumber` is correct, i.e., ensure that the stake returned from the specified block number is recent enough and that the stake is either the most recent update for the total stake (of the operator) or latest before the referenceBlockNumber.NOTE: Be careful to ensure `msgHash` is collision-resistant! This method does not hash  `msgHash` in any way, so if an attacker is able to pass in an arbitrary value, they may be able to tamper with signature verification.\",\"params\":{\"msgHash\":\"is the hash being signed\",\"params\":\"is the struct containing information on nonsigners, stakes, quorum apks, and the aggregate signature\",\"quorumNumbers\":\"is the bytes array of quorum numbers that are being signed for\",\"referenceBlockNumber\":\"is the block number at which the stake information is being verified\"},\"returns\":{\"_0\":\"quorumStakeTotals is the struct containing the total and signed stake for each quorum\",\"_1\":\"signatoryRecordHash is the hash of the signatory record, which is used for fraud proofs\"}},\"getCheckSignaturesIndices(address,uint32,bytes,bytes32[])\":{\"params\":{\"nonSignerOperatorIds\":\"are the ids of the nonsigning operators\",\"quorumNumbers\":\"are the ids of the quorums to get the operator state for\",\"referenceBlockNumber\":\"is the block number to get the indices for\",\"registryCoordinator\":\"is the registry coordinator to fetch the AVS registry information from\"},\"returns\":{\"_0\":\"1) the indices of the quorumBitmaps for each of the operators in the @param nonSignerOperatorIds array at the given blocknumber         2) the indices of the total stakes entries for the given quorums at the given blocknumber         3) the indices of the stakes of each of the nonsigners in each of the quorums they were a             part of (for each nonsigner, an array of length the number of quorums they were a part of            that are also part of the provided quorumNumbers) at the given blocknumber         4) the indices of the quorum apks for each of the provided quorums at the given blocknumber\"}},\"getOperatorState(address,bytes,uint32)\":{\"params\":{\"blockNumber\":\"is the block number to get the operator state for\",\"quorumNumbers\":\"are the ids of the quorums to get the operator state for\",\"registryCoordinator\":\"is the registry coordinator to fetch the AVS registry information from\"},\"returns\":{\"_0\":\"2d array of Operators. For each quorum, an ordered list of Operators\"}},\"getOperatorState(address,bytes32,uint32)\":{\"params\":{\"blockNumber\":\"is the block number to get the operator state for\",\"operatorId\":\"the id of the operator to fetch the quorums lists \",\"registryCoordinator\":\"is the registry coordinator to fetch the AVS registry information from\"},\"returns\":{\"_0\":\"1) the quorumBitmap of the operator at the given blockNumber         2) 2d array of Operator structs. For each quorum the provided operator             was a part of at `blockNumber`, an ordered list of operators.\"}},\"getQuorumBitmapsAtBlockNumber(address,bytes32[],uint32)\":{\"params\":{\"blockNumber\":\"is the block number to get the quorumBitmaps for\",\"operatorIds\":\"are the ids of the operators to get the quorumBitmaps for\",\"registryCoordinator\":\"is the AVS registry coordinator to fetch the operator information from\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setStaleStakesForbidden(bool)\":{\"params\":{\"value\":\"to toggle staleStakesForbidden\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))\":{\"params\":{\"apk\":\"is the claimed G1 public key\",\"apkG2\":\"is provided G2 public key\",\"msgHash\":\"is the hash being signed\",\"sigma\":\"is the G1 point signature\"},\"returns\":{\"pairingSuccessful\":\"is true if the pairing precompile call was successful\",\"siganatureIsValid\":\"is true if the signature is valid\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"StaleStakesForbiddenUpdate(bool)\":{\"notice\":\"Emitted when `staleStakesForbiddenUpdate` is set\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))\":{\"notice\":\"This function is called by disperser when it has aggregated all the signatures of the operators that are part of the quorum for a particular taskNumber and is asserting them into onchain. The function checks that the claim for aggregated signatures are valid. The thesis of this procedure entails: - getting the aggregated pubkey of all registered nodes at the time of pre-commit by the disperser (represented by apk in the parameters), - subtracting the pubkeys of all the signers not in the quorum (nonSignerPubkeys) and storing  the output in apk to get aggregated pubkey of all operators that are part of quorum. - use this aggregated pubkey to verify the aggregated signature under BLS scheme. \"},\"getCheckSignaturesIndices(address,uint32,bytes,bytes32[])\":{\"notice\":\"this is called by the AVS operator to get the relevant indices for the checkSignatures function if they are not running an indexer    \"},\"getOperatorState(address,bytes,uint32)\":{\"notice\":\"returns the ordered list of operators (id and stake) for each quorum. The AVS coordinator  may call this function directly to get the operator state for a given block number\"},\"getOperatorState(address,bytes32,uint32)\":{\"notice\":\"This function is intended to to be called by AVS operators every time a new task is created (i.e.) the AVS coordinator makes a request to AVS operators. Since all of the crucial information is kept onchain,  operators don't need to run indexers to fetch the data.\"},\"getQuorumBitmapsAtBlockNumber(address,bytes32[],uint32)\":{\"notice\":\"this function returns the quorumBitmaps for each of the operators in the operatorIds array at the given blocknumber\"},\"getTaskResponseWindowBlock()\":{\"notice\":\"Returns the TASK_RESPONSE_WINDOW_BLOCK\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setStaleStakesForbidden(bool)\":{\"notice\":\"RegistryCoordinator owner can either enforce or not that operator stakes are staler than the delegation.minWithdrawalDelayBlocks() window.\"},\"staleStakesForbidden()\":{\"notice\":\"If true, check the staleness of the operator stakes and that its within the delegation withdrawalDelayBlocks window.\"},\"taskNumber()\":{\"notice\":\"Returns the current 'taskNumber' for the middleware\"},\"trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))\":{\"notice\":\"trySignatureAndApkVerification verifies a BLS aggregate signature and the veracity of a calculated G1 Public key\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FinalizerTaskManager.sol\":\"FinalizerTaskManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8\",\"dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7\",\"dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0x5e8efc3becf04d44f69f2794e7cc77d6ae291602a376ed88e6276b5917e8bcec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1248163ce62bdcf6a7d24a32c217b6330381f24393032369271e10a8e33f544c\",\"dweb:/ipfs/QmSRNEwkfa4QimC1KthYKskiDsFYc8RAc3pcbZUTTaPVgg\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x606eabfdc2241dab76f7c6e6754324ae9eb12b0a5068984d2c11e2cd2fa94d98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a69c88393e9cf58ab066b75c75134b8c7cd51c242b726767cd8ec7e7d8351916\",\"dweb:/ipfs/QmaNMz951WD5JZeQs5yav29mZn2E6fvdFm5u3moMupRzSM\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff\",\"dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt\"]},\"lib/eigenlayer-middleware/src/BLSApkRegistry.sol\":{\"keccak256\":\"0x4e91a22d708872ca19761fb889c810e5371b287641052f90d9a1503fbc2de6ce\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f01765776945af477dd88b9e24269d70f395347bee10c95ac0e8f49ece70c3ed\",\"dweb:/ipfs/QmWroN9Hrn2KZqLPUxxPsyg6B1bWnkRZtHypgwYr4R4gi4\"]},\"lib/eigenlayer-middleware/src/BLSApkRegistryStorage.sol\":{\"keccak256\":\"0x75f2a1c1061de4fdbda56ca5a0a2434c4ff77b4839c58aad65488c291add9159\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c9b19dcb594301ce1acf0492053fca69f02f786c4ea4a0e52324d410ba24965\",\"dweb:/ipfs/QmQ7npTs5FuLaXJ18YUwQDnah93xKEHkgaQ6xta1pgAeTk\"]},\"lib/eigenlayer-middleware/src/BLSSignatureChecker.sol\":{\"keccak256\":\"0xcff1c70a3972b73132e59caec727e5c01000fad991d78dc362b608b570afde2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://001b39240b449cd4856f3b8fc2bcffb58ab954d4e56b67fdb00f5b5e332367ef\",\"dweb:/ipfs/QmPD5w1HXBi3uG8Yv7TDquifrFQmiWD9nKAoxYXuYAxxSQ\"]},\"lib/eigenlayer-middleware/src/OperatorStateRetriever.sol\":{\"keccak256\":\"0x11d2a31261d27290015c7734708f7a9552156b72775c5df1af49bd408609071b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://595c5f28f0c25636a72ef34050916fe569f504e8b5422a165e4acf625637b714\",\"dweb:/ipfs/QmYRYRaeh9s39uBKcSenjk9NUtoHqcGCZqsJnz8YWCpX9Y\"]},\"lib/eigenlayer-middleware/src/RegistryCoordinator.sol\":{\"keccak256\":\"0x31c257062892ab0724aa9103ce0e4bdf85ac492398d8ed42c32412aac1754aa2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://88b9d10d657feadc8fd9ac4b2f2a5f78fc96fc45909184ae8621b2280c750640\",\"dweb:/ipfs/QmR63fP2VuzTjutbYRaMpmXC7NxMxwZNyJcEVRqRKSz7wr\"]},\"lib/eigenlayer-middleware/src/RegistryCoordinatorStorage.sol\":{\"keccak256\":\"0xb41df27cbe19b68176956a1244d4ab6fcd7e06a6ec46cf9b560cf1470744f4ef\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aa4573de20eeddb9c8c6ec5c8b952997247d0504eaedc15364f1e07accfc482b\",\"dweb:/ipfs/QmWoC9MsxHJphWSbmEH8AEyjMDToFhxwhtiLGAc3hPA32s\"]},\"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0xfc84df26fafb537f309a85194e88543d593762ef737f148193bb88312a4703a7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c3108311624eb32f162f34ae505ff0b24bfac37bc3586695ae1c3846be8d48d\",\"dweb:/ipfs/QmRtD8nic2vG2kRfVRDaL3WMgc8NLU7PiEx3zMZaX68msh\"]},\"lib/eigenlayer-middleware/src/interfaces/IBLSSignatureChecker.sol\":{\"keccak256\":\"0x15d69a34ec71a40a8be8f899d0b32afad4506942774fe13ec5b3761e102df0f4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1ca77384149eb38672feb4fd51664af7019ccde4e4ca2e1e1437ad9bdf28ae0f\",\"dweb:/ipfs/QmT2PmicsZEnbSHuHHdsHBjhK1jtaq7Zt1dXVx9x5roUgE\"]},\"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637\",\"dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy\"]},\"lib/eigenlayer-middleware/src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25\",\"dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY\"]},\"lib/eigenlayer-middleware/src/interfaces/IRegistryCoordinator.sol\":{\"keccak256\":\"0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db\",\"dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi\"]},\"lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol\":{\"keccak256\":\"0x89d338743852e613157a974204bef7a66e407937d4c581b1ae862e966689307f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4a90fad166378a27c0ea189ff2f2d02df7ca171152edc197f2046013e7a48e60\",\"dweb:/ipfs/QmbaHqG2jpqoyxSj7C1FFjENfsytYSKy6E1BsJozL5dvxt\"]},\"lib/eigenlayer-middleware/src/interfaces/ISocketUpdater.sol\":{\"keccak256\":\"0x4fa9fc61ed778d76d3b0ac1974000d7cb613e413e363a2334dd08e0fcd013b01\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fb67e3964e93cc9fca3ce91a7f6b67d7b1ea95a4e0568c05ad93185191ebaad0\",\"dweb:/ipfs/QmaJKFPh99zYjjpdNUS9ZbZPwamogr5FjaxuTKDJ63jwiU\"]},\"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3\",\"dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve\"]},\"lib/eigenlayer-middleware/src/libraries/BN254.sol\":{\"keccak256\":\"0x40a9a94aaa705b67d1c4efdccb8e1ff8ccf41d1ce20639f6cd6fd27d84891417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b7a07633fc3fce4d2eac8dc16ee2cf138e34583e1822d3d705d7c567667bf49\",\"dweb:/ipfs/QmVWYp64T71yKnT2Bpoq4wj7bADUKmjW8w5uzhCTh5Bs91\"]},\"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0x4ffce814c47fe37a37aad27c3f47467ec38b9d5ed2522b4227432338d603e9ba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ea1e591567eea0872726c626492b20b39b0dacfb4e94452cf15b21525257918\",\"dweb:/ipfs/QmbvBmSxoTQFEUsDjYnSKyH1DXsghJA21T3TMVHA4ZLQD6\"]},\"src/FinalizerTaskManager.sol\":{\"keccak256\":\"0x9df36343c1e22924ca25acb501e1c23b2eeee155d6ffa1db542e3b0bc76e9582\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e0b5517c278dda3fb43f0b3a8a92d3314a2c132ce0c858b20e2887731e25ba37\",\"dweb:/ipfs/QmQPnZe79GQY7kb7Qc1w6F9sLQdYZsFYHM9raDL1aGSBFj\"]},\"src/IFinalizerTaskManager.sol\":{\"keccak256\":\"0xaaad9835c253fb1211972a43831afe6a143fc9997358d3d40deb5f59d31eac6b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9999cb905fa1c175e27770374169e6909f916a146f6a43741c4bf91cfdc418ed\",\"dweb:/ipfs/QmZWRCm3zthPgSanckXLKiULrJjcztvtRitFNEkkbutdXS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "_registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_taskResponseWindowBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "taskIndex",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "struct IFinalizerTaskManager.Task",
              "name": "task",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "taskCreatedBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "quorumNumbers",
                  "type": "bytes"
                },
                {
                  "internalType": "uint32",
                  "name": "quorumThresholdPercentage",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewTaskCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "pauserRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserRegistrySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StaleStakesForbiddenUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "taskIndex",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TaskCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IFinalizerTaskManager.TaskResponse",
              "name": "taskResponse",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTaskIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "storageProofHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "pendingStateHash",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct IFinalizerTaskManager.TaskResponseMetadata",
              "name": "taskResponseMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "taskResponsedBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "hashOfNonSigners",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint96[]",
                  "name": "quroumStakeTotals",
                  "type": "uint96[]"
                },
                {
                  "internalType": "uint96[]",
                  "name": "quroumStakeSigned",
                  "type": "uint96[]"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TaskResponded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aggregator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allTaskHashes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allTaskResponses",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blsApkRegistry",
          "outputs": [
            {
              "internalType": "contract IBLSApkRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "struct IBLSSignatureChecker.NonSignerStakesAndSignature",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32[]",
                  "name": "nonSignerQuorumBitmapIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "struct BN254.G1Point[]",
                  "name": "nonSignerPubkeys",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G1Point[]",
                  "name": "quorumApks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apkG2",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "sigma",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "quorumApkIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "totalStakeIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[][]",
                  "name": "nonSignerStakeIndices",
                  "type": "uint32[][]"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkSignatures",
          "outputs": [
            {
              "internalType": "struct IBLSSignatureChecker.QuorumStakeTotals",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint96[]",
                  "name": "signedStakeForQuorum",
                  "type": "uint96[]"
                },
                {
                  "internalType": "uint96[]",
                  "name": "totalStakeForQuorum",
                  "type": "uint96[]"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "quorumThresholdPercentage",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createNewTask"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "generator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "referenceBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "nonSignerOperatorIds",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCheckSignaturesIndices",
          "outputs": [
            {
              "internalType": "struct OperatorStateRetriever.CheckSignaturesIndices",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32[]",
                  "name": "nonSignerQuorumBitmapIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "quorumApkIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "totalStakeIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[][]",
                  "name": "nonSignerStakeIndices",
                  "type": "uint32[][]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPendingStateHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorState",
          "outputs": [
            {
              "internalType": "struct OperatorStateRetriever.Operator[][]",
              "name": "",
              "type": "tuple[][]",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "operatorId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorState",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "struct OperatorStateRetriever.Operator[][]",
              "name": "",
              "type": "tuple[][]",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "operatorId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "operatorIds",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuorumBitmapsAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTaskResponseWindowBlock",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_aggregator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_generator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestTaskNum",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registryCoordinator",
          "outputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct IFinalizerTaskManager.Task",
              "name": "task",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "taskCreatedBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "quorumNumbers",
                  "type": "bytes"
                },
                {
                  "internalType": "uint32",
                  "name": "quorumThresholdPercentage",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IFinalizerTaskManager.TaskResponse",
              "name": "taskResponse",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "referenceTaskIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "storageProofHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "pendingStateHash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct IBLSSignatureChecker.NonSignerStakesAndSignature",
              "name": "nonSignerStakesAndSignature",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32[]",
                  "name": "nonSignerQuorumBitmapIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "struct BN254.G1Point[]",
                  "name": "nonSignerPubkeys",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G1Point[]",
                  "name": "quorumApks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G2Point",
                  "name": "apkG2",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ]
                },
                {
                  "internalType": "struct BN254.G1Point",
                  "name": "sigma",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "quorumApkIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "totalStakeIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32[][]",
                  "name": "nonSignerStakeIndices",
                  "type": "uint32[][]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "respondToTask"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPauserRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStaleStakesForbidden"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakeRegistry",
          "outputs": [
            {
              "internalType": "contract IStakeRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "staleStakesForbidden",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "taskNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "apk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct BN254.G2Point",
              "name": "apkG2",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ]
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "sigma",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "trySignatureAndApkVerification",
          "outputs": [
            {
              "internalType": "bool",
              "name": "pairingSuccessful",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "siganatureIsValid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))": {
            "details": "Before signature verification, the function verifies operator stake information.  This includes ensuring that the provided `referenceBlockNumber` is correct, i.e., ensure that the stake returned from the specified block number is recent enough and that the stake is either the most recent update for the total stake (of the operator) or latest before the referenceBlockNumber.NOTE: Be careful to ensure `msgHash` is collision-resistant! This method does not hash  `msgHash` in any way, so if an attacker is able to pass in an arbitrary value, they may be able to tamper with signature verification.",
            "params": {
              "msgHash": "is the hash being signed",
              "params": "is the struct containing information on nonsigners, stakes, quorum apks, and the aggregate signature",
              "quorumNumbers": "is the bytes array of quorum numbers that are being signed for",
              "referenceBlockNumber": "is the block number at which the stake information is being verified"
            },
            "returns": {
              "_0": "quorumStakeTotals is the struct containing the total and signed stake for each quorum",
              "_1": "signatoryRecordHash is the hash of the signatory record, which is used for fraud proofs"
            }
          },
          "getCheckSignaturesIndices(address,uint32,bytes,bytes32[])": {
            "params": {
              "nonSignerOperatorIds": "are the ids of the nonsigning operators",
              "quorumNumbers": "are the ids of the quorums to get the operator state for",
              "referenceBlockNumber": "is the block number to get the indices for",
              "registryCoordinator": "is the registry coordinator to fetch the AVS registry information from"
            },
            "returns": {
              "_0": "1) the indices of the quorumBitmaps for each of the operators in the @param nonSignerOperatorIds array at the given blocknumber         2) the indices of the total stakes entries for the given quorums at the given blocknumber         3) the indices of the stakes of each of the nonsigners in each of the quorums they were a             part of (for each nonsigner, an array of length the number of quorums they were a part of            that are also part of the provided quorumNumbers) at the given blocknumber         4) the indices of the quorum apks for each of the provided quorums at the given blocknumber"
            }
          },
          "getOperatorState(address,bytes,uint32)": {
            "params": {
              "blockNumber": "is the block number to get the operator state for",
              "quorumNumbers": "are the ids of the quorums to get the operator state for",
              "registryCoordinator": "is the registry coordinator to fetch the AVS registry information from"
            },
            "returns": {
              "_0": "2d array of Operators. For each quorum, an ordered list of Operators"
            }
          },
          "getOperatorState(address,bytes32,uint32)": {
            "params": {
              "blockNumber": "is the block number to get the operator state for",
              "operatorId": "the id of the operator to fetch the quorums lists ",
              "registryCoordinator": "is the registry coordinator to fetch the AVS registry information from"
            },
            "returns": {
              "_0": "1) the quorumBitmap of the operator at the given blockNumber         2) 2d array of Operator structs. For each quorum the provided operator             was a part of at `blockNumber`, an ordered list of operators."
            }
          },
          "getQuorumBitmapsAtBlockNumber(address,bytes32[],uint32)": {
            "params": {
              "blockNumber": "is the block number to get the quorumBitmaps for",
              "operatorIds": "are the ids of the operators to get the quorumBitmaps for",
              "registryCoordinator": "is the AVS registry coordinator to fetch the operator information from"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setStaleStakesForbidden(bool)": {
            "params": {
              "value": "to toggle staleStakesForbidden"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": {
            "params": {
              "apk": "is the claimed G1 public key",
              "apkG2": "is provided G2 public key",
              "msgHash": "is the hash being signed",
              "sigma": "is the G1 point signature"
            },
            "returns": {
              "pairingSuccessful": "is true if the pairing precompile call was successful",
              "siganatureIsValid": "is true if the signature is valid"
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkSignatures(bytes32,bytes,uint32,(uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]))": {
            "notice": "This function is called by disperser when it has aggregated all the signatures of the operators that are part of the quorum for a particular taskNumber and is asserting them into onchain. The function checks that the claim for aggregated signatures are valid. The thesis of this procedure entails: - getting the aggregated pubkey of all registered nodes at the time of pre-commit by the disperser (represented by apk in the parameters), - subtracting the pubkeys of all the signers not in the quorum (nonSignerPubkeys) and storing  the output in apk to get aggregated pubkey of all operators that are part of quorum. - use this aggregated pubkey to verify the aggregated signature under BLS scheme. "
          },
          "getCheckSignaturesIndices(address,uint32,bytes,bytes32[])": {
            "notice": "this is called by the AVS operator to get the relevant indices for the checkSignatures function if they are not running an indexer    "
          },
          "getOperatorState(address,bytes,uint32)": {
            "notice": "returns the ordered list of operators (id and stake) for each quorum. The AVS coordinator  may call this function directly to get the operator state for a given block number"
          },
          "getOperatorState(address,bytes32,uint32)": {
            "notice": "This function is intended to to be called by AVS operators every time a new task is created (i.e.) the AVS coordinator makes a request to AVS operators. Since all of the crucial information is kept onchain,  operators don't need to run indexers to fetch the data."
          },
          "getQuorumBitmapsAtBlockNumber(address,bytes32[],uint32)": {
            "notice": "this function returns the quorumBitmaps for each of the operators in the operatorIds array at the given blocknumber"
          },
          "getTaskResponseWindowBlock()": {
            "notice": "Returns the TASK_RESPONSE_WINDOW_BLOCK"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "setPauserRegistry(address)": {
            "notice": "Allows the unpauser to set a new pauser registry"
          },
          "setStaleStakesForbidden(bool)": {
            "notice": "RegistryCoordinator owner can either enforce or not that operator stakes are staler than the delegation.minWithdrawalDelayBlocks() window."
          },
          "staleStakesForbidden()": {
            "notice": "If true, check the staleness of the operator stakes and that its within the delegation withdrawalDelayBlocks window."
          },
          "taskNumber()": {
            "notice": "Returns the current 'taskNumber' for the middleware"
          },
          "trySignatureAndApkVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))": {
            "notice": "trySignatureAndApkVerification verifies a BLS aggregate signature and the veracity of a calculated G1 Public key"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@eigenlayer-middleware/=lib/eigenlayer-middleware/",
        "@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/",
        "@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/",
        "@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/",
        "eigenlayer-middleware/=lib/eigenlayer-middleware/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/FinalizerTaskManager.sol": "FinalizerTaskManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
        "urls": [
          "bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
          "dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c",
        "urls": [
          "bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8",
          "dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377",
        "urls": [
          "bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7",
          "dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol": {
        "keccak256": "0x5e8efc3becf04d44f69f2794e7cc77d6ae291602a376ed88e6276b5917e8bcec",
        "urls": [
          "bzz-raw://1248163ce62bdcf6a7d24a32c217b6330381f24393032369271e10a8e33f544c",
          "dweb:/ipfs/QmSRNEwkfa4QimC1KthYKskiDsFYc8RAc3pcbZUTTaPVgg"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x606eabfdc2241dab76f7c6e6754324ae9eb12b0a5068984d2c11e2cd2fa94d98",
        "urls": [
          "bzz-raw://a69c88393e9cf58ab066b75c75134b8c7cd51c242b726767cd8ec7e7d8351916",
          "dweb:/ipfs/QmaNMz951WD5JZeQs5yav29mZn2E6fvdFm5u3moMupRzSM"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338",
        "urls": [
          "bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff",
          "dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/BLSApkRegistry.sol": {
        "keccak256": "0x4e91a22d708872ca19761fb889c810e5371b287641052f90d9a1503fbc2de6ce",
        "urls": [
          "bzz-raw://f01765776945af477dd88b9e24269d70f395347bee10c95ac0e8f49ece70c3ed",
          "dweb:/ipfs/QmWroN9Hrn2KZqLPUxxPsyg6B1bWnkRZtHypgwYr4R4gi4"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/BLSApkRegistryStorage.sol": {
        "keccak256": "0x75f2a1c1061de4fdbda56ca5a0a2434c4ff77b4839c58aad65488c291add9159",
        "urls": [
          "bzz-raw://4c9b19dcb594301ce1acf0492053fca69f02f786c4ea4a0e52324d410ba24965",
          "dweb:/ipfs/QmQ7npTs5FuLaXJ18YUwQDnah93xKEHkgaQ6xta1pgAeTk"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/BLSSignatureChecker.sol": {
        "keccak256": "0xcff1c70a3972b73132e59caec727e5c01000fad991d78dc362b608b570afde2f",
        "urls": [
          "bzz-raw://001b39240b449cd4856f3b8fc2bcffb58ab954d4e56b67fdb00f5b5e332367ef",
          "dweb:/ipfs/QmPD5w1HXBi3uG8Yv7TDquifrFQmiWD9nKAoxYXuYAxxSQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/OperatorStateRetriever.sol": {
        "keccak256": "0x11d2a31261d27290015c7734708f7a9552156b72775c5df1af49bd408609071b",
        "urls": [
          "bzz-raw://595c5f28f0c25636a72ef34050916fe569f504e8b5422a165e4acf625637b714",
          "dweb:/ipfs/QmYRYRaeh9s39uBKcSenjk9NUtoHqcGCZqsJnz8YWCpX9Y"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/RegistryCoordinator.sol": {
        "keccak256": "0x31c257062892ab0724aa9103ce0e4bdf85ac492398d8ed42c32412aac1754aa2",
        "urls": [
          "bzz-raw://88b9d10d657feadc8fd9ac4b2f2a5f78fc96fc45909184ae8621b2280c750640",
          "dweb:/ipfs/QmR63fP2VuzTjutbYRaMpmXC7NxMxwZNyJcEVRqRKSz7wr"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/RegistryCoordinatorStorage.sol": {
        "keccak256": "0xb41df27cbe19b68176956a1244d4ab6fcd7e06a6ec46cf9b560cf1470744f4ef",
        "urls": [
          "bzz-raw://aa4573de20eeddb9c8c6ec5c8b952997247d0504eaedc15364f1e07accfc482b",
          "dweb:/ipfs/QmWoC9MsxHJphWSbmEH8AEyjMDToFhxwhtiLGAc3hPA32s"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol": {
        "keccak256": "0xfc84df26fafb537f309a85194e88543d593762ef737f148193bb88312a4703a7",
        "urls": [
          "bzz-raw://4c3108311624eb32f162f34ae505ff0b24bfac37bc3586695ae1c3846be8d48d",
          "dweb:/ipfs/QmRtD8nic2vG2kRfVRDaL3WMgc8NLU7PiEx3zMZaX68msh"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IBLSSignatureChecker.sol": {
        "keccak256": "0x15d69a34ec71a40a8be8f899d0b32afad4506942774fe13ec5b3761e102df0f4",
        "urls": [
          "bzz-raw://1ca77384149eb38672feb4fd51664af7019ccde4e4ca2e1e1437ad9bdf28ae0f",
          "dweb:/ipfs/QmT2PmicsZEnbSHuHHdsHBjhK1jtaq7Zt1dXVx9x5roUgE"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol": {
        "keccak256": "0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf",
        "urls": [
          "bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637",
          "dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IRegistry.sol": {
        "keccak256": "0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3",
        "urls": [
          "bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25",
          "dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IRegistryCoordinator.sol": {
        "keccak256": "0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9",
        "urls": [
          "bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db",
          "dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol": {
        "keccak256": "0x89d338743852e613157a974204bef7a66e407937d4c581b1ae862e966689307f",
        "urls": [
          "bzz-raw://4a90fad166378a27c0ea189ff2f2d02df7ca171152edc197f2046013e7a48e60",
          "dweb:/ipfs/QmbaHqG2jpqoyxSj7C1FFjENfsytYSKy6E1BsJozL5dvxt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/ISocketUpdater.sol": {
        "keccak256": "0x4fa9fc61ed778d76d3b0ac1974000d7cb613e413e363a2334dd08e0fcd013b01",
        "urls": [
          "bzz-raw://fb67e3964e93cc9fca3ce91a7f6b67d7b1ea95a4e0568c05ad93185191ebaad0",
          "dweb:/ipfs/QmaJKFPh99zYjjpdNUS9ZbZPwamogr5FjaxuTKDJ63jwiU"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol": {
        "keccak256": "0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f",
        "urls": [
          "bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3",
          "dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-middleware/src/libraries/BN254.sol": {
        "keccak256": "0x40a9a94aaa705b67d1c4efdccb8e1ff8ccf41d1ce20639f6cd6fd27d84891417",
        "urls": [
          "bzz-raw://4b7a07633fc3fce4d2eac8dc16ee2cf138e34583e1822d3d705d7c567667bf49",
          "dweb:/ipfs/QmVWYp64T71yKnT2Bpoq4wj7bADUKmjW8w5uzhCTh5Bs91"
        ],
        "license": "MIT"
      },
      "lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol": {
        "keccak256": "0x4ffce814c47fe37a37aad27c3f47467ec38b9d5ed2522b4227432338d603e9ba",
        "urls": [
          "bzz-raw://3ea1e591567eea0872726c626492b20b39b0dacfb4e94452cf15b21525257918",
          "dweb:/ipfs/QmbvBmSxoTQFEUsDjYnSKyH1DXsghJA21T3TMVHA4ZLQD6"
        ],
        "license": "BUSL-1.1"
      },
      "src/FinalizerTaskManager.sol": {
        "keccak256": "0x9df36343c1e22924ca25acb501e1c23b2eeee155d6ffa1db542e3b0bc76e9582",
        "urls": [
          "bzz-raw://e0b5517c278dda3fb43f0b3a8a92d3314a2c132ce0c858b20e2887731e25ba37",
          "dweb:/ipfs/QmQPnZe79GQY7kb7Qc1w6F9sLQdYZsFYHM9raDL1aGSBFj"
        ],
        "license": "UNLICENSED"
      },
      "src/IFinalizerTaskManager.sol": {
        "keccak256": "0xaaad9835c253fb1211972a43831afe6a143fc9997358d3d40deb5f59d31eac6b",
        "urls": [
          "bzz-raw://9999cb905fa1c175e27770374169e6909f916a146f6a43741c4bf91cfdc418ed",
          "dweb:/ipfs/QmZWRCm3zthPgSanckXLKiULrJjcztvtRitFNEkkbutdXS"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/FinalizerTaskManager.sol",
    "id": 79075,
    "exportedSymbols": {
      "AddressUpgradeable": [
        584
      ],
      "BLSApkRegistry": [
        18244
      ],
      "BLSSignatureChecker": [
        19002
      ],
      "BN254": [
        26621
      ],
      "ContextUpgradeable": [
        626
      ],
      "FinalizerTaskManager": [
        79074
      ],
      "IDelegationManager": [
        9250
      ],
      "IFinalizerTaskManager": [
        79174
      ],
      "IPausable": [
        9883
      ],
      "IPauserRegistry": [
        9913
      ],
      "IRegistryCoordinator": [
        25337
      ],
      "IServiceManager": [
        25388
      ],
      "ISignatureUtils": [
        9929
      ],
      "Initializable": [
        282
      ],
      "OperatorStateRetriever": [
        20424
      ],
      "OwnableUpgradeable": [
        131
      ],
      "Pausable": [
        12842
      ],
      "RegistryCoordinator": [
        22320
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6782:125",
    "nodes": [
      {
        "id": 78689,
        "nodeType": "PragmaDirective",
        "src": "39:23:125",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 78690,
        "nodeType": "ImportDirective",
        "src": "64:72:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 283,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78691,
        "nodeType": "ImportDirective",
        "src": "137:72:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 132,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78692,
        "nodeType": "ImportDirective",
        "src": "211:56:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol",
        "file": "@eigenlayer/contracts/permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 12843,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78693,
        "nodeType": "ImportDirective",
        "src": "269:56:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/libraries/BN254.sol",
        "file": "@eigenlayer-middleware/src/libraries/BN254.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 26622,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78694,
        "nodeType": "ImportDirective",
        "src": "326:67:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol",
        "file": "@eigenlayer-middleware/src/interfaces/IServiceManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 25389,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78696,
        "nodeType": "ImportDirective",
        "src": "395:77:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/BLSApkRegistry.sol",
        "file": "@eigenlayer-middleware/src/BLSApkRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 18245,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78695,
              "name": "BLSApkRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18244,
              "src": "403:14:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BLSApkRegistry_$18244_$",
                "typeString": "type(contract BLSApkRegistry)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78698,
        "nodeType": "ImportDirective",
        "src": "473:87:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/RegistryCoordinator.sol",
        "file": "@eigenlayer-middleware/src/RegistryCoordinator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 22321,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78697,
              "name": "RegistryCoordinator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22320,
              "src": "481:19:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RegistryCoordinator_$22320_$",
                "typeString": "type(contract RegistryCoordinator)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78701,
        "nodeType": "ImportDirective",
        "src": "561:109:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/BLSSignatureChecker.sol",
        "file": "@eigenlayer-middleware/src/BLSSignatureChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 19003,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78699,
              "name": "BLSSignatureChecker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 19002,
              "src": "569:19:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BLSSignatureChecker_$19002_$",
                "typeString": "type(contract BLSSignatureChecker)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 78700,
              "name": "IRegistryCoordinator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25337,
              "src": "590:20:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IRegistryCoordinator_$25337_$",
                "typeString": "type(contract IRegistryCoordinator)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78703,
        "nodeType": "ImportDirective",
        "src": "671:93:125",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-middleware/src/OperatorStateRetriever.sol",
        "file": "@eigenlayer-middleware/src/OperatorStateRetriever.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 20425,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78702,
              "name": "OperatorStateRetriever",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20424,
              "src": "679:22:125",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_OperatorStateRetriever_$20424_$",
                "typeString": "type(contract OperatorStateRetriever)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78704,
        "nodeType": "ImportDirective",
        "src": "766:37:125",
        "nodes": [],
        "absolutePath": "src/IFinalizerTaskManager.sol",
        "file": "./IFinalizerTaskManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79075,
        "sourceUnit": 79175,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 79074,
        "nodeType": "ContractDefinition",
        "src": "805:6015:125",
        "nodes": [
          {
            "id": 78720,
            "nodeType": "UsingForDirective",
            "src": "980:30:125",
            "nodes": [],
            "libraryName": {
              "id": 78717,
              "name": "BN254",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26621,
              "src": "986:5:125"
            },
            "typeName": {
              "id": 78719,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78718,
                "name": "BN254.G1Point",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25753,
                "src": "996:13:125"
              },
              "referencedDeclaration": 25753,
              "src": "996:13:125",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_G1Point_$25753_storage_ptr",
                "typeString": "struct BN254.G1Point"
              }
            }
          },
          {
            "id": 78722,
            "nodeType": "VariableDeclaration",
            "src": "1138:53:125",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_TASK_RESPONSE_WINDOW_BLOCK",
            "nameLocation": "1164:27:125",
            "scope": 79074,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 78721,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1138:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78725,
            "nodeType": "VariableDeclaration",
            "src": "1197:54:125",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_THRESHOLD_DENOMINATOR",
            "nameLocation": "1223:22:125",
            "scope": 79074,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78723,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1197:7:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 78724,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1248:3:125",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "internal"
          },
          {
            "id": 78727,
            "nodeType": "VariableDeclaration",
            "src": "1305:27:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "8b00ce7c",
            "mutability": "mutable",
            "name": "latestTaskNum",
            "nameLocation": "1319:13:125",
            "scope": 79074,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 78726,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1305:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78731,
            "nodeType": "VariableDeclaration",
            "src": "1562:47:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "2d89f6fc",
            "mutability": "mutable",
            "name": "allTaskHashes",
            "nameLocation": "1596:13:125",
            "scope": 79074,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
              "typeString": "mapping(uint32 => bytes32)"
            },
            "typeName": {
              "id": 78730,
              "keyType": {
                "id": 78728,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1570:6:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1562:26:125",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                "typeString": "mapping(uint32 => bytes32)"
              },
              "valueType": {
                "id": 78729,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1580:7:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 78735,
            "nodeType": "VariableDeclaration",
            "src": "1705:50:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "2cb223d5",
            "mutability": "mutable",
            "name": "allTaskResponses",
            "nameLocation": "1739:16:125",
            "scope": 79074,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
              "typeString": "mapping(uint32 => bytes32)"
            },
            "typeName": {
              "id": 78734,
              "keyType": {
                "id": 78732,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1713:6:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1705:26:125",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                "typeString": "mapping(uint32 => bytes32)"
              },
              "valueType": {
                "id": 78733,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1723:7:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 78737,
            "nodeType": "VariableDeclaration",
            "src": "1762:25:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "245a7bfc",
            "mutability": "mutable",
            "name": "aggregator",
            "nameLocation": "1777:10:125",
            "scope": 79074,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 78736,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1762:7:125",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78739,
            "nodeType": "VariableDeclaration",
            "src": "1793:24:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "7afa1eed",
            "mutability": "mutable",
            "name": "generator",
            "nameLocation": "1808:9:125",
            "scope": 79074,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 78738,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1793:7:125",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78741,
            "nodeType": "VariableDeclaration",
            "src": "1824:30:125",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "latestPendingStateHash",
            "nameLocation": "1832:22:125",
            "scope": 79074,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 78740,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1824:7:125",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78753,
            "nodeType": "ModifierDefinition",
            "src": "1881:120:125",
            "nodes": [],
            "body": {
              "id": 78752,
              "nodeType": "Block",
              "src": "1907:94:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 78747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 78744,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1925:3:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 78745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1925:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 78746,
                          "name": "aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78737,
                          "src": "1939:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1925:24:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41676772656761746f72206d757374206265207468652063616c6c6572",
                        "id": 78748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1951:31:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08b331d45d50737c39ee86458e31278e9e3e9dfd51bae70369503bd10681869a",
                          "typeString": "literal_string \"Aggregator must be the caller\""
                        },
                        "value": "Aggregator must be the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08b331d45d50737c39ee86458e31278e9e3e9dfd51bae70369503bd10681869a",
                          "typeString": "literal_string \"Aggregator must be the caller\""
                        }
                      ],
                      "id": 78743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1917:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:66:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78750,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:66:125"
                },
                {
                  "id": 78751,
                  "nodeType": "PlaceholderStatement",
                  "src": "1993:1:125"
                }
              ]
            },
            "name": "onlyAggregator",
            "nameLocation": "1890:14:125",
            "parameters": {
              "id": 78742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:125"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 78765,
            "nodeType": "ModifierDefinition",
            "src": "2114:126:125",
            "nodes": [],
            "body": {
              "id": 78764,
              "nodeType": "Block",
              "src": "2143:97:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 78759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 78756,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2161:3:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 78757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2161:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 78758,
                          "name": "generator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78739,
                          "src": "2175:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2161:23:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5461736b2067656e657261746f72206d757374206265207468652063616c6c6572",
                        "id": 78760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2186:35:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e93aba834f5600c98bd1b309c67810ed36d95ed2aa8690996cb4d67a012fdc0",
                          "typeString": "literal_string \"Task generator must be the caller\""
                        },
                        "value": "Task generator must be the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e93aba834f5600c98bd1b309c67810ed36d95ed2aa8690996cb4d67a012fdc0",
                          "typeString": "literal_string \"Task generator must be the caller\""
                        }
                      ],
                      "id": 78755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2153:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:69:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78762,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:69:125"
                },
                {
                  "id": 78763,
                  "nodeType": "PlaceholderStatement",
                  "src": "2232:1:125"
                }
              ]
            },
            "name": "onlyTaskGenerator",
            "nameLocation": "2123:17:125",
            "parameters": {
              "id": 78754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:2:125"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 78781,
            "nodeType": "FunctionDefinition",
            "src": "2246:213:125",
            "nodes": [],
            "body": {
              "id": 78780,
              "nodeType": "Block",
              "src": "2388:71:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78776,
                      "name": "_TASK_RESPONSE_WINDOW_BLOCK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78722,
                      "src": "2398:27:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78777,
                      "name": "_taskResponseWindowBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78770,
                      "src": "2428:24:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2398:54:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 78779,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:54:125"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 78773,
                    "name": "_registryCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78768,
                    "src": "2362:20:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryCoordinator_$25337",
                      "typeString": "contract IRegistryCoordinator"
                    }
                  }
                ],
                "id": 78774,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 78772,
                  "name": "BLSSignatureChecker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19002,
                  "src": "2342:19:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "2342:41:125"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 78771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78768,
                  "mutability": "mutable",
                  "name": "_registryCoordinator",
                  "nameLocation": "2279:20:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78781,
                  "src": "2258:41:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRegistryCoordinator_$25337",
                    "typeString": "contract IRegistryCoordinator"
                  },
                  "typeName": {
                    "id": 78767,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78766,
                      "name": "IRegistryCoordinator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25337,
                      "src": "2258:20:125"
                    },
                    "referencedDeclaration": 25337,
                    "src": "2258:20:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryCoordinator_$25337",
                      "typeString": "contract IRegistryCoordinator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78770,
                  "mutability": "mutable",
                  "name": "_taskResponseWindowBlock",
                  "nameLocation": "2308:24:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78781,
                  "src": "2301:31:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 78769,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2257:76:125"
            },
            "returnParameters": {
              "id": 78775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2388:0:125"
            },
            "scope": 79074,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78813,
            "nodeType": "FunctionDefinition",
            "src": "2465:327:125",
            "nodes": [],
            "body": {
              "id": 78812,
              "nodeType": "Block",
              "src": "2620:172:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78796,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78784,
                        "src": "2648:15:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$9913",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 78797,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12562,
                        "src": "2665:11:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$9913",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78795,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12671,
                      "src": "2630:17:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$9913_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 78798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2630:47:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78799,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:47:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78801,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78786,
                        "src": "2706:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 78800,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "2687:18:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 78802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2687:32:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78803,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:32:125"
                },
                {
                  "expression": {
                    "id": 78806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78804,
                      "name": "aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78737,
                      "src": "2729:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78805,
                      "name": "_aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78788,
                      "src": "2742:11:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2729:24:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78807,
                  "nodeType": "ExpressionStatement",
                  "src": "2729:24:125"
                },
                {
                  "expression": {
                    "id": 78810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78808,
                      "name": "generator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78739,
                      "src": "2763:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78809,
                      "name": "_generator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78790,
                      "src": "2775:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2763:22:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78811,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:22:125"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78793,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78792,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 202,
                  "src": "2604:11:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "2604:11:125"
              }
            ],
            "name": "initialize",
            "nameLocation": "2474:10:125",
            "parameters": {
              "id": 78791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78784,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "2501:15:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78813,
                  "src": "2485:31:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$9913",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 78783,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78782,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9913,
                      "src": "2485:15:125"
                    },
                    "referencedDeclaration": 9913,
                    "src": "2485:15:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$9913",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78786,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2526:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78813,
                  "src": "2518:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78788,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "2548:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78813,
                  "src": "2540:19:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78790,
                  "mutability": "mutable",
                  "name": "_generator",
                  "nameLocation": "2569:10:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78813,
                  "src": "2561:18:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2561:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2484:96:125"
            },
            "returnParameters": {
              "id": 78794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:125"
            },
            "scope": 79074,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78879,
            "nodeType": "FunctionDefinition",
            "src": "2883:685:125",
            "nodes": [],
            "body": {
              "id": 78878,
              "nodeType": "Block",
              "src": "3038:530:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78826,
                      "mutability": "mutable",
                      "name": "newTask",
                      "nameLocation": "3096:7:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 78878,
                      "src": "3084:19:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                        "typeString": "struct IFinalizerTaskManager.Task"
                      },
                      "typeName": {
                        "id": 78825,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78824,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79132,
                          "src": "3084:4:125"
                        },
                        "referencedDeclaration": 79132,
                        "src": "3084:4:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79132_storage_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78827,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3084:19:125"
                },
                {
                  "expression": {
                    "id": 78832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78828,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78826,
                        "src": "3113:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      },
                      "id": 78830,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79125,
                      "src": "3113:19:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78831,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78815,
                      "src": "3135:11:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3113:33:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78833,
                  "nodeType": "ExpressionStatement",
                  "src": "3113:33:125"
                },
                {
                  "expression": {
                    "id": 78842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78834,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78826,
                        "src": "3156:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      },
                      "id": 78836,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "taskCreatedBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79127,
                      "src": "3156:24:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 78839,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3190:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 78840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "3190:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 78838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3183:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 78837,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3183:6:125",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 78841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3183:20:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3156:47:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 78843,
                  "nodeType": "ExpressionStatement",
                  "src": "3156:47:125"
                },
                {
                  "expression": {
                    "id": 78848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78844,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78826,
                        "src": "3213:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      },
                      "id": 78846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "quorumThresholdPercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79131,
                      "src": "3213:33:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78847,
                      "name": "quorumThresholdPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78817,
                      "src": "3249:25:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3213:61:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 78849,
                  "nodeType": "ExpressionStatement",
                  "src": "3213:61:125"
                },
                {
                  "expression": {
                    "id": 78854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78850,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78826,
                        "src": "3284:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      },
                      "id": 78852,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "quorumNumbers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79129,
                      "src": "3284:21:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78853,
                      "name": "quorumNumbers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78819,
                      "src": "3308:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "3284:37:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 78855,
                  "nodeType": "ExpressionStatement",
                  "src": "3284:37:125"
                },
                {
                  "expression": {
                    "id": 78865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78856,
                        "name": "allTaskHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78731,
                        "src": "3404:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                          "typeString": "mapping(uint32 => bytes32)"
                        }
                      },
                      "id": 78858,
                      "indexExpression": {
                        "id": 78857,
                        "name": "latestTaskNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78727,
                        "src": "3418:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3404:28:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78862,
                              "name": "newTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78826,
                              "src": "3456:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                                "typeString": "struct IFinalizerTaskManager.Task memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                                "typeString": "struct IFinalizerTaskManager.Task memory"
                              }
                            ],
                            "expression": {
                              "id": 78860,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3445:3:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 78861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "3445:10:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 78863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3445:19:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 78859,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3435:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 78864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3435:30:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3404:61:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 78866,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:61:125"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 78868,
                        "name": "latestTaskNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78727,
                        "src": "3495:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 78869,
                        "name": "newTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78826,
                        "src": "3510:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Task_$79132_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.Task memory"
                        }
                      ],
                      "id": 78867,
                      "name": "NewTaskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79109,
                      "src": "3480:14:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_struct$_Task_$79132_memory_ptr_$returns$__$",
                        "typeString": "function (uint32,struct IFinalizerTaskManager.Task memory)"
                      }
                    },
                    "id": 78870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3480:38:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78871,
                  "nodeType": "EmitStatement",
                  "src": "3475:43:125"
                },
                {
                  "expression": {
                    "id": 78876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78872,
                      "name": "latestTaskNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78727,
                      "src": "3528:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 78875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 78873,
                        "name": "latestTaskNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78727,
                        "src": "3544:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 78874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3560:1:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3544:17:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3528:33:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 78877,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:33:125"
                }
              ]
            },
            "baseFunctions": [
              79161
            ],
            "functionSelector": "6b92787e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78822,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78821,
                  "name": "onlyTaskGenerator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78765,
                  "src": "3016:17:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "3016:17:125"
              }
            ],
            "name": "createNewTask",
            "nameLocation": "2892:13:125",
            "parameters": {
              "id": 78820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78815,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "2914:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78879,
                  "src": "2906:19:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2906:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78817,
                  "mutability": "mutable",
                  "name": "quorumThresholdPercentage",
                  "nameLocation": "2934:25:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78879,
                  "src": "2927:32:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 78816,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78819,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "2976:13:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 78879,
                  "src": "2961:28:125",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78818,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:5:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2905:85:125"
            },
            "returnParameters": {
              "id": 78823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:125"
            },
            "scope": 79074,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 79049,
            "nodeType": "FunctionDefinition",
            "src": "3629:2846:125",
            "nodes": [],
            "body": {
              "id": 79048,
              "nodeType": "Block",
              "src": "3826:2649:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78894,
                      "mutability": "mutable",
                      "name": "taskCreatedBlock",
                      "nameLocation": "3843:16:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 79048,
                      "src": "3836:23:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 78893,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3836:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78897,
                  "initialValue": {
                    "expression": {
                      "id": 78895,
                      "name": "task",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78882,
                      "src": "3862:4:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$79132_calldata_ptr",
                        "typeString": "struct IFinalizerTaskManager.Task calldata"
                      }
                    },
                    "id": 78896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "taskCreatedBlock",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 79127,
                    "src": "3862:21:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3836:47:125"
                },
                {
                  "assignments": [
                    78899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78899,
                      "mutability": "mutable",
                      "name": "quorumNumbers",
                      "nameLocation": "3908:13:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 79048,
                      "src": "3893:28:125",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 78898,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3893:5:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78902,
                  "initialValue": {
                    "expression": {
                      "id": 78900,
                      "name": "task",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78882,
                      "src": "3924:4:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$79132_calldata_ptr",
                        "typeString": "struct IFinalizerTaskManager.Task calldata"
                      }
                    },
                    "id": 78901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "quorumNumbers",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 79129,
                    "src": "3924:18:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3893:49:125"
                },
                {
                  "assignments": [
                    78904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78904,
                      "mutability": "mutable",
                      "name": "quorumThresholdPercentage",
                      "nameLocation": "3959:25:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 79048,
                      "src": "3952:32:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 78903,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3952:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78907,
                  "initialValue": {
                    "expression": {
                      "id": 78905,
                      "name": "task",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78882,
                      "src": "3987:4:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$79132_calldata_ptr",
                        "typeString": "struct IFinalizerTaskManager.Task calldata"
                      }
                    },
                    "id": 78906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "quorumThresholdPercentage",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 79131,
                    "src": "3987:30:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3952:65:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 78919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78912,
                                  "name": "task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78882,
                                  "src": "4169:4:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$79132_calldata_ptr",
                                    "typeString": "struct IFinalizerTaskManager.Task calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Task_$79132_calldata_ptr",
                                    "typeString": "struct IFinalizerTaskManager.Task calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 78910,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4158:3:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 78911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "4158:10:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 78913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4158:16:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 78909,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4148:9:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 78914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4148:27:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 78915,
                            "name": "allTaskHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78731,
                            "src": "4179:13:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                              "typeString": "mapping(uint32 => bytes32)"
                            }
                          },
                          "id": 78918,
                          "indexExpression": {
                            "expression": {
                              "id": 78916,
                              "name": "taskResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78885,
                              "src": "4193:12:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                              }
                            },
                            "id": 78917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "referenceTaskIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79134,
                            "src": "4193:31:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4179:46:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4148:77:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "737570706c696564207461736b20646f6573206e6f74206d6174636820746865206f6e65207265636f7264656420696e2074686520636f6e7472616374",
                        "id": 78920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4239:63:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8358489e92dfb0f78b5b06c25508a0cca1da42041fdf02ce0f7644a8978f5461",
                          "typeString": "literal_string \"supplied task does not match the one recorded in the contract\""
                        },
                        "value": "supplied task does not match the one recorded in the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8358489e92dfb0f78b5b06c25508a0cca1da42041fdf02ce0f7644a8978f5461",
                          "typeString": "literal_string \"supplied task does not match the one recorded in the contract\""
                        }
                      ],
                      "id": 78908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4127:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4127:185:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78922,
                  "nodeType": "ExpressionStatement",
                  "src": "4127:185:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 78932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 78924,
                            "name": "allTaskResponses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78735,
                            "src": "4374:16:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                              "typeString": "mapping(uint32 => bytes32)"
                            }
                          },
                          "id": 78927,
                          "indexExpression": {
                            "expression": {
                              "id": 78925,
                              "name": "taskResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78885,
                              "src": "4391:12:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                              }
                            },
                            "id": 78926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "referenceTaskIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79134,
                            "src": "4391:31:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4374:49:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 78930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4435:1:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 78929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4427:7:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 78928,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4427:7:125",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 78931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4427:10:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4374:63:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41676772656761746f722068617320616c726561647920726573706f6e64656420746f20746865207461736b",
                        "id": 78933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4451:46:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18a5615a90a29a83c795202265db28429fc474d0ab42d5385a7c045c332da9d5",
                          "typeString": "literal_string \"Aggregator has already responded to the task\""
                        },
                        "value": "Aggregator has already responded to the task"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18a5615a90a29a83c795202265db28429fc474d0ab42d5385a7c045c332da9d5",
                          "typeString": "literal_string \"Aggregator has already responded to the task\""
                        }
                      ],
                      "id": 78923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4353:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4353:154:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78935,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:154:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 78945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 78939,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4545:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 78940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "4545:12:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 78938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4538:6:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 78937,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4538:6:125",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 78941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4538:20:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 78944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 78942,
                            "name": "taskCreatedBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78894,
                            "src": "4562:16:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 78943,
                            "name": "_TASK_RESPONSE_WINDOW_BLOCK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78722,
                            "src": "4581:27:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "4562:46:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "4538:70:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41676772656761746f722068617320726573706f6e64656420746f20746865207461736b20746f6f206c617465",
                        "id": 78946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4622:47:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb69c0d38964a05e04a8fd500fc841b0f74595aa8c55ac0f3b2712f8584276a4",
                          "typeString": "literal_string \"Aggregator has responded to the task too late\""
                        },
                        "value": "Aggregator has responded to the task too late"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb69c0d38964a05e04a8fd500fc841b0f74595aa8c55ac0f3b2712f8584276a4",
                          "typeString": "literal_string \"Aggregator has responded to the task too late\""
                        }
                      ],
                      "id": 78936,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4517:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4517:162:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78948,
                  "nodeType": "ExpressionStatement",
                  "src": "4517:162:125"
                },
                {
                  "assignments": [
                    78950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78950,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "4818:7:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 79048,
                      "src": "4810:15:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 78949,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4810:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78957,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78954,
                            "name": "taskResponse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78885,
                            "src": "4849:12:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                              "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                              "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                            }
                          ],
                          "expression": {
                            "id": 78952,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4838:3:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 78953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4838:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 78955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4838:24:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 78951,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4828:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 78956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4828:35:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4810:53:125"
                },
                {
                  "assignments": [
                    78960,
                    78962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78960,
                      "mutability": "mutable",
                      "name": "quorumStakeTotals",
                      "nameLocation": "4935:17:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 79048,
                      "src": "4910:42:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QuorumStakeTotals_$24919_memory_ptr",
                        "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals"
                      },
                      "typeName": {
                        "id": 78959,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78958,
                          "name": "QuorumStakeTotals",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24919,
                          "src": "4910:17:125"
                        },
                        "referencedDeclaration": 24919,
                        "src": "4910:17:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuorumStakeTotals_$24919_storage_ptr",
                          "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78962,
                      "mutability": "mutable",
                      "name": "hashOfNonSigners",
                      "nameLocation": "4962:16:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 79048,
                      "src": "4954:24:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 78961,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4954:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78969,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78964,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78950,
                        "src": "5010:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 78965,
                        "name": "quorumNumbers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78899,
                        "src": "5019:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 78966,
                        "name": "taskCreatedBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78894,
                        "src": "5034:16:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 78967,
                        "name": "nonSignerStakesAndSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78888,
                        "src": "5052:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonSignerStakesAndSignature_$24912_memory_ptr",
                          "typeString": "struct IBLSSignatureChecker.NonSignerStakesAndSignature memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_struct$_NonSignerStakesAndSignature_$24912_memory_ptr",
                          "typeString": "struct IBLSSignatureChecker.NonSignerStakesAndSignature memory"
                        }
                      ],
                      "id": 78963,
                      "name": "checkSignatures",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18906,
                      "src": "4994:15:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$_t_uint32_$_t_struct$_NonSignerStakesAndSignature_$24912_memory_ptr_$returns$_t_struct$_QuorumStakeTotals_$24919_memory_ptr_$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes calldata,uint32,struct IBLSSignatureChecker.NonSignerStakesAndSignature memory) view returns (struct IBLSSignatureChecker.QuorumStakeTotals memory,bytes32)"
                      }
                    },
                    "id": 78968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4994:86:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_QuorumStakeTotals_$24919_memory_ptr_$_t_bytes32_$",
                      "typeString": "tuple(struct IBLSSignatureChecker.QuorumStakeTotals memory,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4909:171:125"
                },
                {
                  "assignments": [
                    78972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78972,
                      "mutability": "mutable",
                      "name": "taskResponseMetadata",
                      "nameLocation": "5119:20:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 79048,
                      "src": "5091:48:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskResponseMetadata_$79152_memory_ptr",
                        "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata"
                      },
                      "typeName": {
                        "id": 78971,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78970,
                          "name": "TaskResponseMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79152,
                          "src": "5091:20:125"
                        },
                        "referencedDeclaration": 79152,
                        "src": "5091:20:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskResponseMetadata_$79152_storage_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78985,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78976,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5183:5:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 78977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "5183:12:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 78975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5176:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 78974,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5176:6:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5176:20:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 78979,
                        "name": "hashOfNonSigners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78962,
                        "src": "5210:16:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 78980,
                          "name": "quorumStakeTotals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78960,
                          "src": "5240:17:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuorumStakeTotals_$24919_memory_ptr",
                            "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals memory"
                          }
                        },
                        "id": 78981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalStakeForQuorum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24918,
                        "src": "5240:37:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                          "typeString": "uint96[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 78982,
                          "name": "quorumStakeTotals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78960,
                          "src": "5291:17:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuorumStakeTotals_$24919_memory_ptr",
                            "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals memory"
                          }
                        },
                        "id": 78983,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signedStakeForQuorum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24915,
                        "src": "5291:38:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                          "typeString": "uint96[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                          "typeString": "uint96[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                          "typeString": "uint96[] memory"
                        }
                      ],
                      "id": 78973,
                      "name": "TaskResponseMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79152,
                      "src": "5142:20:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TaskResponseMetadata_$79152_storage_ptr_$",
                        "typeString": "type(struct IFinalizerTaskManager.TaskResponseMetadata storage pointer)"
                      }
                    },
                    "id": 78984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5142:197:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskResponseMetadata_$79152_memory_ptr",
                      "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5091:248:125"
                },
                {
                  "expression": {
                    "id": 78997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78986,
                        "name": "allTaskResponses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78735,
                        "src": "5401:16:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
                          "typeString": "mapping(uint32 => bytes32)"
                        }
                      },
                      "id": 78989,
                      "indexExpression": {
                        "expression": {
                          "id": 78987,
                          "name": "taskResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78885,
                          "src": "5418:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                            "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                          }
                        },
                        "id": 78988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "referenceTaskIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79134,
                        "src": "5418:31:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5401:49:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78993,
                              "name": "taskResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78885,
                              "src": "5474:12:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                              }
                            },
                            {
                              "id": 78994,
                              "name": "taskResponseMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78972,
                              "src": "5488:20:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TaskResponseMetadata_$79152_memory_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                              },
                              {
                                "typeIdentifier": "t_struct$_TaskResponseMetadata_$79152_memory_ptr",
                                "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                              }
                            ],
                            "expression": {
                              "id": 78991,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5463:3:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 78992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "5463:10:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 78995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5463:46:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 78990,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5453:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 78996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5453:57:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5401:109:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 78998,
                  "nodeType": "ExpressionStatement",
                  "src": "5401:109:125"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 79000,
                        "name": "taskResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78885,
                        "src": "5566:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                        }
                      },
                      {
                        "id": 79001,
                        "name": "taskResponseMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78972,
                        "src": "5580:20:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskResponseMetadata_$79152_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_TaskResponseMetadata_$79152_memory_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponseMetadata memory"
                        }
                      ],
                      "id": 78999,
                      "name": "TaskResponded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79117,
                      "src": "5552:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_TaskResponse_$79141_memory_ptr_$_t_struct$_TaskResponseMetadata_$79152_memory_ptr_$returns$__$",
                        "typeString": "function (struct IFinalizerTaskManager.TaskResponse memory,struct IFinalizerTaskManager.TaskResponseMetadata memory)"
                      }
                    },
                    "id": 79002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5552:49:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79003,
                  "nodeType": "EmitStatement",
                  "src": "5547:54:125"
                },
                {
                  "body": {
                    "id": 79034,
                    "nodeType": "Block",
                    "src": "5748:535:125",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 79030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 79020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 79015,
                                  "name": "quorumStakeTotals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78960,
                                  "src": "5969:17:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QuorumStakeTotals_$24919_memory_ptr",
                                    "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals memory"
                                  }
                                },
                                "id": 79016,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "signedStakeForQuorum",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24915,
                                "src": "5969:38:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                                  "typeString": "uint96[] memory"
                                }
                              },
                              "id": 79018,
                              "indexExpression": {
                                "id": 79017,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79005,
                                "src": "6008:1:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5969:41:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 79019,
                              "name": "_THRESHOLD_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78725,
                              "src": "6013:22:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5969:66:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 79029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 79021,
                                  "name": "quorumStakeTotals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78960,
                                  "src": "6058:17:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QuorumStakeTotals_$24919_memory_ptr",
                                    "typeString": "struct IBLSSignatureChecker.QuorumStakeTotals memory"
                                  }
                                },
                                "id": 79022,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalStakeForQuorum",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24918,
                                "src": "6058:37:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                                  "typeString": "uint96[] memory"
                                }
                              },
                              "id": 79024,
                              "indexExpression": {
                                "id": 79023,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79005,
                                "src": "6096:1:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6058:40:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 79027,
                                  "name": "quorumThresholdPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78904,
                                  "src": "6107:25:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "id": 79026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6101:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 79025,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6101:5:125",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 79028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6101:32:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "6058:75:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "5969:164:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 79033,
                        "nodeType": "IfStatement",
                        "src": "5948:325:125",
                        "trueBody": {
                          "id": 79032,
                          "nodeType": "Block",
                          "src": "6148:125:125",
                          "statements": [
                            {
                              "functionReturnParameters": 78892,
                              "id": 79031,
                              "nodeType": "Return",
                              "src": "6252:7:125"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 79011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 79008,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79005,
                      "src": "5717:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 79009,
                        "name": "quorumNumbers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78899,
                        "src": "5721:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 79010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5721:20:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5717:24:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79035,
                  "initializationExpression": {
                    "assignments": [
                      79005
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 79005,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5710:1:125",
                        "nodeType": "VariableDeclaration",
                        "scope": 79035,
                        "src": "5702:9:125",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 79004,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5702:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 79007,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 79006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5714:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5702:13:125"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 79013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5743:3:125",
                      "subExpression": {
                        "id": 79012,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79005,
                        "src": "5743:1:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 79014,
                    "nodeType": "ExpressionStatement",
                    "src": "5743:3:125"
                  },
                  "nodeType": "ForStatement",
                  "src": "5697:586:125"
                },
                {
                  "expression": {
                    "id": 79039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79036,
                      "name": "latestPendingStateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78741,
                      "src": "6293:22:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 79037,
                        "name": "taskResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78885,
                        "src": "6318:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                          "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                        }
                      },
                      "id": 79038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pendingStateHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79140,
                      "src": "6318:29:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6293:54:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 79040,
                  "nodeType": "ExpressionStatement",
                  "src": "6293:54:125"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79042,
                          "name": "taskResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78885,
                          "src": "6412:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                            "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                          }
                        },
                        "id": 79043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "referenceTaskIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79134,
                        "src": "6412:31:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 79044,
                          "name": "taskResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78885,
                          "src": "6445:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                            "typeString": "struct IFinalizerTaskManager.TaskResponse calldata"
                          }
                        },
                        "id": 79045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blockHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79136,
                        "src": "6445:22:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 79041,
                      "name": "TaskCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79123,
                      "src": "6398:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32)"
                      }
                    },
                    "id": 79046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6398:70:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79047,
                  "nodeType": "EmitStatement",
                  "src": "6393:75:125"
                }
              ]
            },
            "functionSelector": "e4e3ad77",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78891,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78890,
                  "name": "onlyAggregator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78753,
                  "src": "3811:14:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "3811:14:125"
              }
            ],
            "name": "respondToTask",
            "nameLocation": "3638:13:125",
            "parameters": {
              "id": 78889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78882,
                  "mutability": "mutable",
                  "name": "task",
                  "nameLocation": "3675:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 79049,
                  "src": "3661:18:125",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$79132_calldata_ptr",
                    "typeString": "struct IFinalizerTaskManager.Task"
                  },
                  "typeName": {
                    "id": 78881,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78880,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79132,
                      "src": "3661:4:125"
                    },
                    "referencedDeclaration": 79132,
                    "src": "3661:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$79132_storage_ptr",
                      "typeString": "struct IFinalizerTaskManager.Task"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78885,
                  "mutability": "mutable",
                  "name": "taskResponse",
                  "nameLocation": "3711:12:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 79049,
                  "src": "3689:34:125",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TaskResponse_$79141_calldata_ptr",
                    "typeString": "struct IFinalizerTaskManager.TaskResponse"
                  },
                  "typeName": {
                    "id": 78884,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78883,
                      "name": "TaskResponse",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79141,
                      "src": "3689:12:125"
                    },
                    "referencedDeclaration": 79141,
                    "src": "3689:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskResponse_$79141_storage_ptr",
                      "typeString": "struct IFinalizerTaskManager.TaskResponse"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78888,
                  "mutability": "mutable",
                  "name": "nonSignerStakesAndSignature",
                  "nameLocation": "3768:27:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 79049,
                  "src": "3733:62:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NonSignerStakesAndSignature_$24912_memory_ptr",
                    "typeString": "struct IBLSSignatureChecker.NonSignerStakesAndSignature"
                  },
                  "typeName": {
                    "id": 78887,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78886,
                      "name": "NonSignerStakesAndSignature",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24912,
                      "src": "3733:27:125"
                    },
                    "referencedDeclaration": 24912,
                    "src": "3733:27:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NonSignerStakesAndSignature_$24912_storage_ptr",
                      "typeString": "struct IBLSSignatureChecker.NonSignerStakesAndSignature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3651:150:125"
            },
            "returnParameters": {
              "id": 78892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3826:0:125"
            },
            "scope": 79074,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 79057,
            "nodeType": "FunctionDefinition",
            "src": "6481:90:125",
            "nodes": [],
            "body": {
              "id": 79056,
              "nodeType": "Block",
              "src": "6534:37:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79054,
                    "name": "latestTaskNum",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78727,
                    "src": "6551:13:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 79053,
                  "id": 79055,
                  "nodeType": "Return",
                  "src": "6544:20:125"
                }
              ]
            },
            "baseFunctions": [
              79167
            ],
            "functionSelector": "72d18e8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "taskNumber",
            "nameLocation": "6490:10:125",
            "parameters": {
              "id": 79050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6500:2:125"
            },
            "returnParameters": {
              "id": 79053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79057,
                  "src": "6526:6:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 79051,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6526:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6525:8:125"
            },
            "scope": 79074,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 79065,
            "nodeType": "FunctionDefinition",
            "src": "6577:120:125",
            "nodes": [],
            "body": {
              "id": 79064,
              "nodeType": "Block",
              "src": "6646:51:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79062,
                    "name": "_TASK_RESPONSE_WINDOW_BLOCK",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78722,
                    "src": "6663:27:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 79061,
                  "id": 79063,
                  "nodeType": "Return",
                  "src": "6656:34:125"
                }
              ]
            },
            "baseFunctions": [
              79173
            ],
            "functionSelector": "f5c9899d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskResponseWindowBlock",
            "nameLocation": "6586:26:125",
            "parameters": {
              "id": 79058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6612:2:125"
            },
            "returnParameters": {
              "id": 79061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79065,
                  "src": "6638:6:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 79059,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6637:8:125"
            },
            "scope": 79074,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 79073,
            "nodeType": "FunctionDefinition",
            "src": "6703:115:125",
            "nodes": [],
            "body": {
              "id": 79072,
              "nodeType": "Block",
              "src": "6772:46:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79070,
                    "name": "latestPendingStateHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78741,
                    "src": "6789:22:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 79069,
                  "id": 79071,
                  "nodeType": "Return",
                  "src": "6782:29:125"
                }
              ]
            },
            "functionSelector": "0373408d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPendingStateHash",
            "nameLocation": "6712:25:125",
            "parameters": {
              "id": 79066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6737:2:125"
            },
            "returnParameters": {
              "id": 79069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79073,
                  "src": "6763:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 79067,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6763:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6762:9:125"
            },
            "scope": 79074,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78705,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 282,
              "src": "842:13:125"
            },
            "id": 78706,
            "nodeType": "InheritanceSpecifier",
            "src": "842:13:125"
          },
          {
            "baseName": {
              "id": 78707,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 131,
              "src": "861:18:125"
            },
            "id": 78708,
            "nodeType": "InheritanceSpecifier",
            "src": "861:18:125"
          },
          {
            "baseName": {
              "id": 78709,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12842,
              "src": "885:8:125"
            },
            "id": 78710,
            "nodeType": "InheritanceSpecifier",
            "src": "885:8:125"
          },
          {
            "baseName": {
              "id": 78711,
              "name": "BLSSignatureChecker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19002,
              "src": "899:19:125"
            },
            "id": 78712,
            "nodeType": "InheritanceSpecifier",
            "src": "899:19:125"
          },
          {
            "baseName": {
              "id": 78713,
              "name": "OperatorStateRetriever",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20424,
              "src": "924:22:125"
            },
            "id": 78714,
            "nodeType": "InheritanceSpecifier",
            "src": "924:22:125"
          },
          {
            "baseName": {
              "id": 78715,
              "name": "IFinalizerTaskManager",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79174,
              "src": "952:21:125"
            },
            "id": 78716,
            "nodeType": "InheritanceSpecifier",
            "src": "952:21:125"
          }
        ],
        "canonicalName": "FinalizerTaskManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          79074,
          79174,
          20424,
          19002,
          24967,
          12842,
          9883,
          131,
          626,
          282
        ],
        "name": "FinalizerTaskManager",
        "nameLocation": "814:20:125",
        "scope": 79075,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 125
}