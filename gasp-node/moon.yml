type: application
language: rust
toolchain:
  rust:
    version: nightly-2024-01-20
env:
  CARGO_TERM_COLOR: 'always'

fileGroups:
  sources:
    - 'pallets/**/*'
    - 'rollup/**/*'
    - 'rpc/**/*'
    - 'Cargo.toml'

tasks:
  build:
    command: cargo build --release
    inputs: ['@globs(sources)']
    options:
      outputStyle: 'stream'
    outputs:
      - 'target/release/rollup-node'
      - 'target/release/wbuild/rollup-runtime/rollup_runtime.compact.compressed.wasm'
    env:
      SCCACHE_GCS_KEY_PREFIX: gasp-node-release
  
  build-standard-runtime:
    extends: build
    args: '--target-dir target/standard-runtime'
    options:
      outputStyle: stream
      mergeOutputs: replace
    outputs:
      - 'target/standard-runtime/release/rollup-node'
      - 'target/standard-runtime/release/wbuild/rollup-runtime/rollup_runtime.compact.compressed.wasm'

  build-fast-runtime:
    extends: build
    args: '--no-default-features --features=fast-runtime --target-dir target/fast-runtime'
    options:
      outputStyle: stream
      mergeOutputs: replace
    outputs:
      - 'target/fast-runtime/release/rollup-node'
      - 'target/fast-runtime/release/wbuild/rollup-runtime/rollup_runtime.compact.compressed.wasm'

  build-unlocked-runtime:
    extends: build
    args: '--no-default-features --features=unlocked --target-dir target/unlocked-runtime'
    options:
      outputStyle: stream
      mergeOutputs: replace
    outputs:
      - 'target/unlocked-runtime/release/rollup-node'
      - 'target/unlocked-runtime/release/wbuild/rollup-runtime/rollup_runtime.compact.compressed.wasm'

  build-image-local:
    script: 'docker buildx build --build-arg ENABLE_FAST_RUNTIME=true -t gaspxyz/rollup-node:local .'
    inputs: ['@globs(sources)', 'Dockerfile']

  build-image-ci:
    script: "echo new"
    # script: |
    #   docker buildx build --build-arg TARGET_DIR=target/standard-runtime/release -t gaspxyz/rollup-node:${IMAGE_TAG:-ci} -f Dockerfile.ci --load .
    #   docker buildx build --build-arg TARGET_DIR=target/fast-runtime/release -t gaspxyz/rollup-node:${IMAGE_TAG:-ci}-fast -f Dockerfile.ci --load .
    #   docker buildx build --build-arg TARGET_DIR=target/unlocked-runtime/release -t gaspxyz/rollup-node:${IMAGE_TAG:-ci}-unlocked -f Dockerfile.ci --load .    
    # script: |
    #   docker buildx build --build-arg TARGET_DIR=target/standard-runtime/release -t gaspxyz/rollup-node:${IMAGE_TAG:-ci} -f Dockerfile.ci --load --push .
    #   docker buildx build --build-arg TARGET_DIR=target/unlocked-runtime/release -t gaspxyz/rollup-node:${IMAGE_TAG:-ci}-unlocked -f Dockerfile.ci --load --push .
    #   docker buildx build --build-arg TARGET_DIR=target/fast-runtime/release -t gaspxyz/rollup-node:${IMAGE_TAG:-ci}-fast -f Dockerfile.ci --load --push .
    deps: ['build-standard-runtime', 'build-fast-runtime', 'build-unlocked-runtime']
    options:
      cache: false

  format:
    command: cargo fmt --all -- --check
    inputs: ['@globs(sources)']

  lint:
    command: cargo clippy -p pallet-xyk
    inputs: ['@globs(sources)']
    env:
      SCCACHE_GCS_KEY_PREFIX: gasp-node

  test:
    command: cargo test
    inputs: ['@globs(sources)']
    env:
      SCCACHE_GCS_KEY_PREFIX: gasp-node
