// This file is part of Mangata.

// Copyright (C) 2020-2022 Mangata Foundation.
// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_market
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2024-11-25, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("rollup-local"), DB CACHE: 1024

// Executed Command:
// target/release/rollup-node
// benchmark
// pallet
// -l=info,runtime::collective=warn,xyk=warn
// --chain
// rollup-local
// --wasm-execution
// compiled
// --pallet
// *
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --template
// ./templates/module-weight-template.hbs
// --output
// ./benchmarks/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_market.
pub trait WeightInfo {
	fn create_pool_xyk() -> Weight;
	fn mint_liquidity_xyk() -> Weight;
	fn mint_liquidity_fixed_amounts_xyk() -> Weight;
	fn mint_liquidity_using_vesting_native_tokens_by_vesting_index_xyk() -> Weight;
	fn mint_liquidity_using_vesting_native_tokens_xyk() -> Weight;
	fn burn_liquidity_xyk() -> Weight;
	fn multiswap_asset_xyk(y: u32, ) -> Weight;
	fn multiswap_asset_buy_xyk(y: u32, ) -> Weight;
	fn create_pool_sswap() -> Weight;
	fn mint_liquidity_sswap() -> Weight;
	fn mint_liquidity_fixed_amounts_sswap() -> Weight;
	fn mint_liquidity_using_vesting_native_tokens_by_vesting_index_sswap() -> Weight;
	fn mint_liquidity_using_vesting_native_tokens_sswap() -> Weight;
	fn burn_liquidity_sswap() -> Weight;
	fn multiswap_asset_sswap(y: u32, ) -> Weight;
	fn multiswap_asset_buy_sswap(y: u32, ) -> Weight;
	fn is_swap_tokens_lockless() -> Weight;
}

/// Weights for pallet_market using the Mangata node and recommended hardware.
pub struct ModuleWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for ModuleWeight<T> {
	// Storage: `AssetRegistry::Metadata` (r:3 w:1)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Bootstrap::BootstrapSchedule` (r:1 w:0)
	// Proof: `Bootstrap::BootstrapSchedule` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Xyk::Pools` (r:2 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:1)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:0 w:1)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:0 w:1)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	fn create_pool_xyk() -> Weight {
		(Weight::from_parts(170_010_000, 0))
			.saturating_add(T::DbWeight::get().reads(14 as u64))
			.saturating_add(T::DbWeight::get().writes(12 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:1 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:1 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:1)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::RewardsInfo` (r:1 w:1)
	// Proof: `ProofOfStake::RewardsInfo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ProofOfStake::TotalActivatedLiquidity` (r:1 w:1)
	// Proof: `ProofOfStake::TotalActivatedLiquidity` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn mint_liquidity_xyk() -> Weight {
		(Weight::from_parts(216_450_000, 0))
			.saturating_add(T::DbWeight::get().reads(16 as u64))
			.saturating_add(T::DbWeight::get().writes(10 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:2 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:4 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:7 w:7)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:1)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::RewardsInfo` (r:1 w:1)
	// Proof: `ProofOfStake::RewardsInfo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ProofOfStake::TotalActivatedLiquidity` (r:1 w:1)
	// Proof: `ProofOfStake::TotalActivatedLiquidity` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn mint_liquidity_fixed_amounts_xyk() -> Weight {
		(Weight::from_parts(407_209_000, 0))
			.saturating_add(T::DbWeight::get().reads(25 as u64))
			.saturating_add(T::DbWeight::get().writes(14 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Vesting::Vesting` (r:2 w:2)
	// Proof: `Vesting::Vesting` (`max_values`: None, `max_size`: Some(1857), added: 4332, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Locks` (r:2 w:2)
	// Proof: `Tokens::Locks` (`max_values`: None, `max_size`: Some(1249), added: 3724, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:1 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:1 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn mint_liquidity_using_vesting_native_tokens_by_vesting_index_xyk() -> Weight {
		(Weight::from_parts(237_820_000, 0))
			.saturating_add(T::DbWeight::get().reads(17 as u64))
			.saturating_add(T::DbWeight::get().writes(11 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Vesting::Vesting` (r:2 w:2)
	// Proof: `Vesting::Vesting` (`max_values`: None, `max_size`: Some(1857), added: 4332, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Locks` (r:2 w:2)
	// Proof: `Tokens::Locks` (`max_values`: None, `max_size`: Some(1249), added: 3724, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:1 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:1 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn mint_liquidity_using_vesting_native_tokens_xyk() -> Weight {
		(Weight::from_parts(239_980_000, 0))
			.saturating_add(T::DbWeight::get().reads(17 as u64))
			.saturating_add(T::DbWeight::get().writes(11 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:1 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:0)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:1 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn burn_liquidity_xyk() -> Weight {
		(Weight::from_parts(153_580_000, 0))
			.saturating_add(T::DbWeight::get().reads(12 as u64))
			.saturating_add(T::DbWeight::get().writes(7 as u64))
	}
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:99 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:100 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:99 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:100 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:297 w:198)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:400 w:400)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn multiswap_asset_xyk(y: u32, ) -> Weight {
		(Weight::from_parts(309_150_000, 0))
			// Standard Error: 341_216
			.saturating_add((Weight::from_parts(236_593_363, 0)).saturating_mul(y as u64))
			.saturating_add(T::DbWeight::get().reads(20 as u64))
			.saturating_add(T::DbWeight::get().reads((11 as u64).saturating_mul(y as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((6 as u64).saturating_mul(y as u64)))
	}
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:99 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:100 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:297 w:198)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:99 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:100 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:400 w:400)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn multiswap_asset_buy_xyk(y: u32, ) -> Weight {
		(Weight::from_parts(334_430_000, 0))
			// Standard Error: 468_448
			.saturating_add((Weight::from_parts(255_448_728, 0)).saturating_mul(y as u64))
			.saturating_add(T::DbWeight::get().reads(20 as u64))
			.saturating_add(T::DbWeight::get().reads((11 as u64).saturating_mul(y as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((6 as u64).saturating_mul(y as u64)))
	}
	// Storage: `AssetRegistry::Metadata` (r:3 w:1)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Bootstrap::BootstrapSchedule` (r:1 w:0)
	// Proof: `Bootstrap::BootstrapSchedule` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:1)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:0 w:1)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	fn create_pool_sswap() -> Weight {
		(Weight::from_parts(173_740_000, 0))
			.saturating_add(T::DbWeight::get().reads(12 as u64))
			.saturating_add(T::DbWeight::get().writes(10 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:1)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::RewardsInfo` (r:1 w:1)
	// Proof: `ProofOfStake::RewardsInfo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ProofOfStake::TotalActivatedLiquidity` (r:1 w:1)
	// Proof: `ProofOfStake::TotalActivatedLiquidity` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn mint_liquidity_sswap() -> Weight {
		(Weight::from_parts(215_460_000, 0))
			.saturating_add(T::DbWeight::get().reads(15 as u64))
			.saturating_add(T::DbWeight::get().writes(9 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:6 w:6)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:2 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:1)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::RewardsInfo` (r:1 w:1)
	// Proof: `ProofOfStake::RewardsInfo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ProofOfStake::TotalActivatedLiquidity` (r:1 w:1)
	// Proof: `ProofOfStake::TotalActivatedLiquidity` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn mint_liquidity_fixed_amounts_sswap() -> Weight {
		(Weight::from_parts(260_690_000, 0))
			.saturating_add(T::DbWeight::get().reads(18 as u64))
			.saturating_add(T::DbWeight::get().writes(11 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Vesting::Vesting` (r:2 w:2)
	// Proof: `Vesting::Vesting` (`max_values`: None, `max_size`: Some(1857), added: 4332, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Locks` (r:2 w:2)
	// Proof: `Tokens::Locks` (`max_values`: None, `max_size`: Some(1249), added: 3724, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn mint_liquidity_using_vesting_native_tokens_by_vesting_index_sswap() -> Weight {
		(Weight::from_parts(237_010_000, 0))
			.saturating_add(T::DbWeight::get().reads(16 as u64))
			.saturating_add(T::DbWeight::get().writes(10 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Vesting::Vesting` (r:2 w:2)
	// Proof: `Vesting::Vesting` (`max_values`: None, `max_size`: Some(1857), added: 4332, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Locks` (r:2 w:2)
	// Proof: `Tokens::Locks` (`max_values`: None, `max_size`: Some(1249), added: 3724, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn mint_liquidity_using_vesting_native_tokens_sswap() -> Weight {
		(Weight::from_parts(235_200_000, 0))
			.saturating_add(T::DbWeight::get().reads(16 as u64))
			.saturating_add(T::DbWeight::get().writes(10 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:0)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn burn_liquidity_sswap() -> Weight {
		(Weight::from_parts(125_970_000, 0))
			.saturating_add(T::DbWeight::get().reads(11 as u64))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
	}
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:99 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:99 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:100 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:597 w:597)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:101 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:198 w:99)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn multiswap_asset_sswap(y: u32, ) -> Weight {
		(Weight::from_parts(289_970_000, 0))
			// Standard Error: 256_965
			.saturating_add((Weight::from_parts(220_298_290, 0)).saturating_mul(y as u64))
			.saturating_add(T::DbWeight::get().reads(20 as u64))
			.saturating_add(T::DbWeight::get().reads((12 as u64).saturating_mul(y as u64)))
			.saturating_add(T::DbWeight::get().writes(13 as u64))
			.saturating_add(T::DbWeight::get().writes((7 as u64).saturating_mul(y as u64)))
	}
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:99 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:99 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:100 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:597 w:597)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:101 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:198 w:99)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn multiswap_asset_buy_sswap(y: u32, ) -> Weight {
		(Weight::from_parts(331_599_000, 0))
			// Standard Error: 265_694
			.saturating_add((Weight::from_parts(261_837_989, 0)).saturating_mul(y as u64))
			.saturating_add(T::DbWeight::get().reads(20 as u64))
			.saturating_add(T::DbWeight::get().reads((12 as u64).saturating_mul(y as u64)))
			.saturating_add(T::DbWeight::get().writes(13 as u64))
			.saturating_add(T::DbWeight::get().writes((7 as u64).saturating_mul(y as u64)))
	}
	// Storage: `Xyk::Pools` (r:2 w:0)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	fn is_swap_tokens_lockless() -> Weight {
		(Weight::from_parts(16_623_000, 0))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: `AssetRegistry::Metadata` (r:3 w:1)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Bootstrap::BootstrapSchedule` (r:1 w:0)
	// Proof: `Bootstrap::BootstrapSchedule` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Xyk::Pools` (r:2 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:1)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:0 w:1)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:0 w:1)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	fn create_pool_xyk() -> Weight {
		(Weight::from_parts(170_010_000, 0))
			.saturating_add(RocksDbWeight::get().reads(14 as u64))
			.saturating_add(RocksDbWeight::get().writes(12 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:1 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:1 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:1)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::RewardsInfo` (r:1 w:1)
	// Proof: `ProofOfStake::RewardsInfo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ProofOfStake::TotalActivatedLiquidity` (r:1 w:1)
	// Proof: `ProofOfStake::TotalActivatedLiquidity` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn mint_liquidity_xyk() -> Weight {
		(Weight::from_parts(216_450_000, 0))
			.saturating_add(RocksDbWeight::get().reads(16 as u64))
			.saturating_add(RocksDbWeight::get().writes(10 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:2 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:4 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:7 w:7)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:1)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::RewardsInfo` (r:1 w:1)
	// Proof: `ProofOfStake::RewardsInfo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ProofOfStake::TotalActivatedLiquidity` (r:1 w:1)
	// Proof: `ProofOfStake::TotalActivatedLiquidity` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn mint_liquidity_fixed_amounts_xyk() -> Weight {
		(Weight::from_parts(407_209_000, 0))
			.saturating_add(RocksDbWeight::get().reads(25 as u64))
			.saturating_add(RocksDbWeight::get().writes(14 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Vesting::Vesting` (r:2 w:2)
	// Proof: `Vesting::Vesting` (`max_values`: None, `max_size`: Some(1857), added: 4332, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Locks` (r:2 w:2)
	// Proof: `Tokens::Locks` (`max_values`: None, `max_size`: Some(1249), added: 3724, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:1 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:1 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn mint_liquidity_using_vesting_native_tokens_by_vesting_index_xyk() -> Weight {
		(Weight::from_parts(237_820_000, 0))
			.saturating_add(RocksDbWeight::get().reads(17 as u64))
			.saturating_add(RocksDbWeight::get().writes(11 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Vesting::Vesting` (r:2 w:2)
	// Proof: `Vesting::Vesting` (`max_values`: None, `max_size`: Some(1857), added: 4332, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Locks` (r:2 w:2)
	// Proof: `Tokens::Locks` (`max_values`: None, `max_size`: Some(1249), added: 3724, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:1 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:1 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn mint_liquidity_using_vesting_native_tokens_xyk() -> Weight {
		(Weight::from_parts(239_980_000, 0))
			.saturating_add(RocksDbWeight::get().reads(17 as u64))
			.saturating_add(RocksDbWeight::get().writes(11 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:1 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:0)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:1 w:1)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn burn_liquidity_xyk() -> Weight {
		(Weight::from_parts(153_580_000, 0))
			.saturating_add(RocksDbWeight::get().reads(12 as u64))
			.saturating_add(RocksDbWeight::get().writes(7 as u64))
	}
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:99 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:100 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:99 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:100 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:297 w:198)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:400 w:400)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn multiswap_asset_xyk(y: u32, ) -> Weight {
		(Weight::from_parts(309_150_000, 0))
			// Standard Error: 341_216
			.saturating_add((Weight::from_parts(236_593_363, 0)).saturating_mul(y as u64))
			.saturating_add(RocksDbWeight::get().reads(20 as u64))
			.saturating_add(RocksDbWeight::get().reads((11 as u64).saturating_mul(y as u64)))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
			.saturating_add(RocksDbWeight::get().writes((6 as u64).saturating_mul(y as u64)))
	}
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:99 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:100 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:297 w:198)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityAssets` (r:99 w:0)
	// Proof: `Xyk::LiquidityAssets` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:100 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:400 w:400)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:2 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn multiswap_asset_buy_xyk(y: u32, ) -> Weight {
		(Weight::from_parts(334_430_000, 0))
			// Standard Error: 468_448
			.saturating_add((Weight::from_parts(255_448_728, 0)).saturating_mul(y as u64))
			.saturating_add(RocksDbWeight::get().reads(20 as u64))
			.saturating_add(RocksDbWeight::get().reads((11 as u64).saturating_mul(y as u64)))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
			.saturating_add(RocksDbWeight::get().writes((6 as u64).saturating_mul(y as u64)))
	}
	// Storage: `AssetRegistry::Metadata` (r:3 w:1)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Bootstrap::BootstrapSchedule` (r:1 w:0)
	// Proof: `Bootstrap::BootstrapSchedule` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:1)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:0 w:1)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	fn create_pool_sswap() -> Weight {
		(Weight::from_parts(173_740_000, 0))
			.saturating_add(RocksDbWeight::get().reads(12 as u64))
			.saturating_add(RocksDbWeight::get().writes(10 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:1)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::RewardsInfo` (r:1 w:1)
	// Proof: `ProofOfStake::RewardsInfo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ProofOfStake::TotalActivatedLiquidity` (r:1 w:1)
	// Proof: `ProofOfStake::TotalActivatedLiquidity` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn mint_liquidity_sswap() -> Weight {
		(Weight::from_parts(215_460_000, 0))
			.saturating_add(RocksDbWeight::get().reads(15 as u64))
			.saturating_add(RocksDbWeight::get().writes(9 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:6 w:6)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:2 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `MultiPurposeLiquidity::ReserveStatus` (r:1 w:1)
	// Proof: `MultiPurposeLiquidity::ReserveStatus` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::RewardsInfo` (r:1 w:1)
	// Proof: `ProofOfStake::RewardsInfo` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `ProofOfStake::TotalActivatedLiquidity` (r:1 w:1)
	// Proof: `ProofOfStake::TotalActivatedLiquidity` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn mint_liquidity_fixed_amounts_sswap() -> Weight {
		(Weight::from_parts(260_690_000, 0))
			.saturating_add(RocksDbWeight::get().reads(18 as u64))
			.saturating_add(RocksDbWeight::get().writes(11 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Vesting::Vesting` (r:2 w:2)
	// Proof: `Vesting::Vesting` (`max_values`: None, `max_size`: Some(1857), added: 4332, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Locks` (r:2 w:2)
	// Proof: `Tokens::Locks` (`max_values`: None, `max_size`: Some(1249), added: 3724, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn mint_liquidity_using_vesting_native_tokens_by_vesting_index_sswap() -> Weight {
		(Weight::from_parts(237_010_000, 0))
			.saturating_add(RocksDbWeight::get().reads(16 as u64))
			.saturating_add(RocksDbWeight::get().writes(10 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `ProofOfStake::PromotedPoolRewards` (r:1 w:0)
	// Proof: `ProofOfStake::PromotedPoolRewards` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	// Storage: `Vesting::Vesting` (r:2 w:2)
	// Proof: `Vesting::Vesting` (`max_values`: None, `max_size`: Some(1857), added: 4332, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Locks` (r:2 w:2)
	// Proof: `Tokens::Locks` (`max_values`: None, `max_size`: Some(1249), added: 3724, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `Tokens::NextCurrencyId` (r:1 w:0)
	// Proof: `Tokens::NextCurrencyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn mint_liquidity_using_vesting_native_tokens_sswap() -> Weight {
		(Weight::from_parts(235_200_000, 0))
			.saturating_add(RocksDbWeight::get().reads(16 as u64))
			.saturating_add(RocksDbWeight::get().writes(10 as u64))
	}
	// Storage: `Xyk::LiquidityPools` (r:1 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:1 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:2 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:5 w:5)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:0)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn burn_liquidity_sswap() -> Weight {
		(Weight::from_parts(125_970_000, 0))
			.saturating_add(RocksDbWeight::get().reads(11 as u64))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
	}
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:99 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:99 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:100 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:597 w:597)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:101 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:198 w:99)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn multiswap_asset_sswap(y: u32, ) -> Weight {
		(Weight::from_parts(289_970_000, 0))
			// Standard Error: 256_965
			.saturating_add((Weight::from_parts(220_298_290, 0)).saturating_mul(y as u64))
			.saturating_add(RocksDbWeight::get().reads(20 as u64))
			.saturating_add(RocksDbWeight::get().reads((12 as u64).saturating_mul(y as u64)))
			.saturating_add(RocksDbWeight::get().writes(13 as u64))
			.saturating_add(RocksDbWeight::get().writes((7 as u64).saturating_mul(y as u64)))
	}
	// Storage: `Maintenance::MaintenanceStatus` (r:1 w:0)
	// Proof: `Maintenance::MaintenanceStatus` (`max_values`: Some(1), `max_size`: Some(2), added: 497, mode: `MaxEncodedLen`)
	// Storage: `Xyk::LiquidityPools` (r:99 w:0)
	// Proof: `Xyk::LiquidityPools` (`max_values`: None, `max_size`: Some(29), added: 2504, mode: `MaxEncodedLen`)
	// Storage: `StableSwap::Pools` (r:99 w:0)
	// Proof: `StableSwap::Pools` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	// Storage: `AssetRegistry::Metadata` (r:100 w:0)
	// Proof: `AssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(153), added: 2628, mode: `MaxEncodedLen`)
	// Storage: `Tokens::Accounts` (r:597 w:597)
	// Proof: `Tokens::Accounts` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:101 w:2)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	// Storage: `Xyk::Pools` (r:198 w:99)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	// Storage: `Tokens::TotalIssuance` (r:1 w:1)
	// Proof: `Tokens::TotalIssuance` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn multiswap_asset_buy_sswap(y: u32, ) -> Weight {
		(Weight::from_parts(331_599_000, 0))
			// Standard Error: 265_694
			.saturating_add((Weight::from_parts(261_837_989, 0)).saturating_mul(y as u64))
			.saturating_add(RocksDbWeight::get().reads(20 as u64))
			.saturating_add(RocksDbWeight::get().reads((12 as u64).saturating_mul(y as u64)))
			.saturating_add(RocksDbWeight::get().writes(13 as u64))
			.saturating_add(RocksDbWeight::get().writes((7 as u64).saturating_mul(y as u64)))
	}
	// Storage: `Xyk::Pools` (r:2 w:0)
	// Proof: `Xyk::Pools` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	fn is_swap_tokens_lockless() -> Weight {
		(Weight::from_parts(16_623_000, 0))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
	}
}
