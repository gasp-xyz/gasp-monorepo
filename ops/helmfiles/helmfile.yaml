environments: 
  default:
    values:
     - environmentName: local
     - config/default.yaml
  fungible:
    values:
     - environmentName: {{ env "ENVIRONMENT" }}
     - config/fungible.yaml
  dev:
    values:
      - environmentName: dev
      - config/dev.yaml
  frontend:
    values:
      - environmentName: frontend
      - config/frontend.yaml
  holesky:
    values:
    - environmentName: holesky
    - config/holesky.yaml
---
repositories:
  - name: ethereum-helm-charts
    url: https://ethpandaops.github.io/ethereum-helm-charts
  - name: blockscout
    url: https://blockscout.github.io/helm-charts
  - name: mangata-node
    url: git+https://github.com/mangata-finance/helm-charts@charts?ref=node-v2.3.0
    
helmDefaults:
  kubeContext: gke_direct-pixel-353917_europe-west1_mangata-dev-alpha
  wait: false
  diffArgs:
    - "--suppress" 
    - "Job"
  # TODO: To remove after updating Helm charts
    - "--suppress-output-line-regex"
    - "(application|component|heritage|service|isP2P|isRpc):.+"

releases:
  - name: evm-node-eth
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ .Values.evmNode.enabled }}
    chart: ../helm-charts/evm-node
    values:
      - image:
          repository: mangatasolutions/anvil
          tag: {{ requiredEnv "IMAGE_TAG" | quote }}
        remoteCluster: {{ .Values.remoteCluster }}
        environment: {{ .Values.environmentName }}
        nameOverride: 'evm-node-eth'
        envSelector: ethereum-stub
        enablePersistence: true
        verifierEnabled: {{ .Values | get "blockscoutEnabled" false }}
        verifierUrl: 'http://blockscout-eth-blockscout-stack-blockscout-svc:80/api'
        # If customChainspecUrlEth is not set, the node will use the default chainspec instead
        customGenesisUrl: {{ .Values | get "evmNode.customGenesisUrlEth" "" }}
  
  - name: evm-node-arb
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ and .Values.evmNode.enabled .Values.enableArbitrumServices | toYaml }}
    chart: ../helm-charts/evm-node
    values:
      - image:
          repository: mangatasolutions/anvil
          tag: {{ requiredEnv "IMAGE_TAG" | quote }}
        remoteCluster: {{ .Values.remoteCluster }}
        environment: {{ .Values.environmentName }}
        nameOverride: 'evm-node-arb'
        envSelector: arbitrum-stub
        enablePersistence: true
        verifierEnabled: {{ .Values | get "blockscoutEnabled" false }}
        verifierUrl: 'http://blockscout-arb-blockscout-stack-blockscout-svc:80/api'
        # If customChainspecUrlArb is not set, the node will use the default chainspec instead
        customGenesisUrl: {{ .Values | get "evmNode.customGenesisUrlArb" "" }}

  - name: avs-aggregator
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ .Values.aggregatorEnabled }}
    chart: ../helm-charts/rollup-node
    values:
      - image:
          repository: mangatasolutions/avs-aggregator
          tag: {{ .Values | get "aggregatorImageTag" (requiredEnv "IMAGE_TAG") | quote }}
        environment: {{ .Values.environmentName }}
        remoteCluster: {{ .Values.remoteCluster }}
        envSecrets: {{ .Values.aggregatorEnvSecrets | expandSecretRefs | toYaml | nindent 10 }}
        env: {{ .Values.aggregatorEnv | toYaml | nindent 10 }}

  - name: avs-finalizer
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ .Values.finalizerEnabled }}
    chart: ../helm-charts/rollup-node
    values:
      - image:
          repository: mangatasolutions/avs-finalizer
          tag: {{ .Values | get "finalizerImageTag" (requiredEnv "IMAGE_TAG") | quote }}
        environment: {{ .Values.environmentName }}
        remoteCluster: {{ .Values.remoteCluster }}
        rpcPort: 9010
        enableServiceMonitorCollectors: {{ .Values.finalizerEnableServiceMonitorCollectors }}
        prometheus:
          enabled: true
        envSecrets: {{ .Values.finalizerEnvSecrets | expandSecretRefs | toYaml | nindent 10 }}
        env: {{ .Values.finalizerEnv | toYaml | nindent 10 }}

  - name: gasp-syncer
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ .Values.gaspSyncerEnabled }}
    chart: ../helm-charts/gasp-syncer
    values:
      - image:
          repository: mangatasolutions/gasp-syncer
          tag: {{ .Values | get "gaspSyncerImageTag" (requiredEnv "IMAGE_TAG") | quote }}
        environment: {{ .Values.environmentName }}
        env: {{ .Values.gaspSyncerEnv | toYaml | nindent 10 }}
        envSecrets: {{ .Values.gaspSyncerEnvSecrets | expandSecretRefs | toYaml | nindent 10 }}
  
  - name: rollup-sequencer-eth
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ .Values.sequencerEnabled }}
    chart: ../helm-charts/rollup-sequencer
    values:
      - image:
          repository: mangatasolutions/rollup-sequencer
          tag: {{ .Values | get "sequencerImageTag" (requiredEnv "IMAGE_TAG") | quote }}
        environment: {{ .Values.environmentName }}
        mnemonic: {{ .Values.firstSequencerMnemonicEth | fetchSecretValue | quote }}
        ethChainUrl:  {{ .Values.sequencerChainUrlEth | fetchSecretValue | quote }}
        env: {{ .Values.sequencerEnvEth | toYaml | nindent 10 }}

  - name: rollup-sequencer-arb
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ and .Values.sequencerEnabled .Values.enableArbitrumServices }}
    chart: ../helm-charts/rollup-sequencer
    values:
      - image:
          repository: mangatasolutions/rollup-sequencer
          tag: {{ .Values | get "sequencerImageTag" (requiredEnv "IMAGE_TAG") | quote }}
        environment: {{ .Values.environmentName }}
        mnemonic: {{ .Values.firstSequencerMnemonicArb | fetchSecretValue | quote }}
        ethChainUrl:  {{ .Values.sequencerChainUrlArb | fetchSecretValue | quote }}
        env: {{ .Values.sequencerEnvArb | toYaml | nindent 10 }}
  
  - name: rollup-sequencer-eth-2
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ .Values.secondSequencerEnabled }}
    chart: ../helm-charts/rollup-sequencer
    values:
      - image:
          repository: mangatasolutions/rollup-sequencer
          tag: {{ .Values | get "sequencerImageTag" (requiredEnv "IMAGE_TAG") | quote }}
        environment: {{ .Values.environmentName }}
        mnemonic: {{ .Values.secondSequencerMnemonicEth | fetchSecretValue | quote }}
        ethChainUrl:  {{ .Values.sequencerChainUrlEth | fetchSecretValue | quote }}
        env: {{ .Values.sequencerEnvEth | toYaml | nindent 10 }}
  
  - name: rollup-sequencer-arb-2
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ and .Values.secondSequencerEnabled .Values.enableArbitrumServices }}
    chart: ../helm-charts/rollup-sequencer
    values:
      - image:
          repository: mangatasolutions/rollup-sequencer
          tag: {{ .Values | get "sequencerImageTag" (requiredEnv "IMAGE_TAG") | quote }}
        environment: {{ .Values.environmentName }}
        mnemonic: {{ .Values.secondSequencerMnemonicArb | fetchSecretValue | quote }}
        ethChainUrl:  {{ .Values.sequencerChainUrlArb | fetchSecretValue | quote }}
        env: {{ .Values.sequencerEnvArb | toYaml | nindent 10 }}

  - name: blockscout-eth
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ .Values.blockscoutEnabled }}
    chart: blockscout/blockscout-stack
    dependencies:
      - chart: oci://registry-1.docker.io/bitnamicharts/postgresql
        version: '12.x.x'
      - chart: ethereum-helm-charts/smart-contract-verifier-http
        version: '0.1.2'
    values:
      - smart-contract-verifier-http:
          enabled: true
        postgresql:
          enabled: true
          image:
            registry: docker.io
            repository: bitnami/postgresql
            tag: 15.3.0-debian-11-r7
          pullPolicy: IfNotPresent
          auth:
            enablePostgresUser: true
            postgresPassword: postgres
            username: postgres
            password: postgres
          primary:
            extendedConfiguration: |
              max_connections = 1024
          persistence:
            enabled: true
            size: 8Gi
        config:
          network:
            id: 1337
            name: 'Ether'
            shortname: 'Ether'
          testnet: true
          account:
            enabled: false
          prometheus:
            enabled: false
        blockscout:
          image:
            tag: 6.7.1.commit.1015bfd0
          env:
            DATABASE_URL: 'postgresql://postgres:postgres@blockscout-eth-postgresql:5432/blockscout?ssl=false'
            SECRET_KEY_BASE: RMgI4C1HSkxsEjdhtGMfwAHfyT6CKWXOgzCboJflfSm4jeAlic52io05KB6mqzc5
            ETHEREUM_JSONRPC_VARIANT: 'geth'
            ETHEREUM_JSONRPC_HTTP_URL: http://evm-node-eth:8545
            ETHEREUM_JSONRPC_WS_URL: ws://evm-node-eth:8546
            ETHEREUM_JSONRPC_TRACE_URL: http://evm-node-eth:8545
            MICROSERVICE_SC_VERIFIER_ENABLED: true
            MICROSERVICE_SC_VERIFIER_URL: 'http://blockscout-eth-smart-contract-verifier-http:8050'
            MICROSERVICE_SC_VERIFIER_TYPE: sc_verifier
          ingress:
            enabled: true
            hostname: blockscout.rollup-{{ .Values.environmentName }}-eth.gasp.xyz
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: 'true'
            className: nginx
            tls:
              enabled: true
        frontend:
          enabled: true
          replicaCount: 1
          image:
            tag: v1.32.0-alpha.2
          ingress:
            enabled: true
            hostname: blockscout.rollup-{{ .Values.environmentName }}-eth.gasp.xyz
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: 'true'
            className: nginx
            tls:
              enabled: true
          env:
            NEXT_PUBLIC_API_PROTOCOL: https
            NEXT_PUBLIC_API_BASE_PATH: '/'
            NEXT_PUBLIC_APP_PROTOCOL: https
            NEXT_PUBLIC_HOMEPAGE_CHARTS: "[\"daily_txs\"]"
            NEXT_PUBLIC_VISUALIZE_API_HOST: https://visualizer.services.blockscout.com/
            NEXT_PUBLIC_API_WEBSOCKET_PROTOCOL: wss
            NEXT_PUBLIC_API_SPEC_URL: https://raw.githubusercontent.com/blockscout/blockscout-api-v2-swagger/main/swagger.yaml
            NEXT_PUBLIC_AD_TEXT_PROVIDER: 'none'
            NEXT_PUBLIC_AD_BANNER_PROVIDER: 'none'
        stats:
          enabled: true
          env:
            STATS__SERVER__HTTP__ENABLED: true
            STATS__SERVER__HTTP__ADDR: '0.0.0.0:8050'
            STATS__DB_URL: 'postgresql://postgres:postgres@blockscout-eth-postgresql:5432/blockscout-stats?ssl=false'
            STATS__BLOCKSCOUT_DB_URL: 'postgresql://postgres:postgres@blockscout-eth-postgresql:5432/blockscout?ssl=false'
            STATS__CREATE_DATABASE: true
            STATS__RUN_MIGRATIONS: true
          ingress:
            enabled: true
            hostname: stats.blockscout.rollup-{{ .Values.environmentName }}-eth.gasp.xyz
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: 'true'
            className: nginx
            tls:
              enabled: true
  
  - name: blockscout-arb
    namespace: 'rollup-{{ .Values.environmentName }}'
    installed: {{ and .Values.blockscoutEnabled .Values.enableArbitrumServices }}
    chart: blockscout/blockscout-stack
    dependencies:
      - chart: oci://registry-1.docker.io/bitnamicharts/postgresql
        version: '12.x.x'
      - chart: ethereum-helm-charts/smart-contract-verifier-http
        version: '0.1.2'
    values:
      - smart-contract-verifier-http:
          enabled: true
        postgresql:
          enabled: true
          image:
            registry: docker.io
            repository: bitnami/postgresql
            tag: 15.3.0-debian-11-r7
          pullPolicy: IfNotPresent
          auth:
            enablePostgresUser: true
            postgresPassword: postgres
            username: postgres
            password: postgres
          primary:
            extendedConfiguration: |
              max_connections = 1024
          persistence:
            enabled: true
            size: 8Gi
        config:
          network:
            id: 1337
            name: 'Arbitrum'
            shortname: 'Arb'
          testnet: true
          account:
            enabled: false
          prometheus:
            enabled: false
        blockscout:
          image:
            tag: 6.7.1.commit.1015bfd0
          env:
            DATABASE_URL: 'postgresql://postgres:postgres@blockscout-arb-postgresql:5432/blockscout?ssl=false'
            SECRET_KEY_BASE: RMgI4C1HSkxsEjdhtGMfwAHfyT6CKWXOgzCboJflfSm4jeAlic52io05KB6mqzc5
            ETHEREUM_JSONRPC_VARIANT: 'geth'
            ETHEREUM_JSONRPC_HTTP_URL: http://evm-node-arb:8545
            ETHEREUM_JSONRPC_WS_URL: ws://evm-node-arb:8546
            ETHEREUM_JSONRPC_TRACE_URL: http://evm-node-arb:8545
            MICROSERVICE_SC_VERIFIER_ENABLED: true
            MICROSERVICE_SC_VERIFIER_URL: 'http://blockscout-arb-smart-contract-verifier-http:8050'
            MICROSERVICE_SC_VERIFIER_TYPE: sc_verifier
          ingress:
            enabled: true
            hostname: blockscout.rollup-{{ .Values.environmentName }}-arb.gasp.xyz
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: 'true'
            className: nginx
            tls:
              enabled: true
        frontend:
          enabled: true
          replicaCount: 1
          image:
            tag: v1.32.0-alpha.2
          ingress:
            enabled: true
            hostname: blockscout.rollup-{{ .Values.environmentName }}-arb.gasp.xyz
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: 'true'
            className: nginx
            tls:
              enabled: true
          env:
            NEXT_PUBLIC_API_PROTOCOL: https
            NEXT_PUBLIC_API_BASE_PATH: '/'
            NEXT_PUBLIC_APP_PROTOCOL: https
            NEXT_PUBLIC_HOMEPAGE_CHARTS: "[\"daily_txs\"]"
            NEXT_PUBLIC_VISUALIZE_API_HOST: https://visualizer.services.blockscout.com/
            NEXT_PUBLIC_API_WEBSOCKET_PROTOCOL: wss
            NEXT_PUBLIC_API_SPEC_URL: https://raw.githubusercontent.com/blockscout/blockscout-api-v2-swagger/main/swagger.yaml
            NEXT_PUBLIC_AD_TEXT_PROVIDER: 'none'
            NEXT_PUBLIC_AD_BANNER_PROVIDER: 'none'
        stats:
          enabled: true
          env:
            STATS__SERVER__HTTP__ENABLED: true
            STATS__SERVER__HTTP__ADDR: '0.0.0.0:8050'
            STATS__DB_URL: 'postgresql://postgres:postgres@blockscout-arb-postgresql:5432/blockscout-stats?ssl=false'
            STATS__BLOCKSCOUT_DB_URL: 'postgresql://postgres:postgres@blockscout-arb-postgresql:5432/blockscout?ssl=false'
            STATS__CREATE_DATABASE: true
            STATS__RUN_MIGRATIONS: true
          ingress:
            enabled: true
            hostname: stats.blockscout.rollup-{{ .Values.environmentName }}-arb.gasp.xyz
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: 'true'
            className: nginx
            tls:
              enabled: true

  - name: collator-01
    installed: {{ .Values.collatorsEnabled }}
    needs: [collator-02]
    chart: mangata-node/node
    namespace: 'rollup-{{ .Values.environmentName }}'
    values:
      - image:
          repository: {{ .Values.collator.image.repository | quote }}
          tag: {{ .Values.collator.image.tag | quote }}
        environment: 'rollup-{{ .Values.environmentName }}'
        chain: {{ .Values | getOrNil "collator.chain" }}
        disableChainspecGeneration: {{ .Values | getOrNil "collator.disableChainspecGeneration" }}
        customChainspecUrl: {{ .Values | get "collator.customChainspecUrl" "" }}
        domainZone: gasp.xyz
        command: '/app/node'
        isParachain: false
        isCollator: false
        role: collator
        remoteCluster: {{ .Values.remoteCluster }}
        wsHealthExporter: {{ .Values.collator.wsHealthExporter | toYaml | nindent 10 }}
        enableServiceMonitorCollectors: {{ .Values.collator.enableServiceMonitorCollectors }}
        storageClass: {{ .Values.collator.storageClass | quote }}
        storageSize: {{ .Values.collator.storageSize | quote }}
        resources: {{ .Values | getOrNil "collator.resources" | toYaml | nindent 10 }}
        tolerations: {{ .Values | getOrNil "collator.tolerations" | toYaml | nindent 10 }}
        # collator-01 specific configs
        nodeSelector: {{ .Values | getOrNil "collator.collator01.nodeSelector" | toYaml | nindent 10 }}
        customNodeKey: {{ .Values.collator.collator01.customNodeKey }}
        bootnodeAddr: {{ .Values.collator.collator01.bootnodeAddr }}
        extraArgs: {{ .Values.collator.collator01.extraArgs | toYaml | nindent 10 }}
  
  - name: collator-02
    installed: {{ .Values.collatorsEnabled }}
    chart: mangata-node/node
    namespace: 'rollup-{{ .Values.environmentName }}'
    values:
      - image:
          repository: {{ .Values.collator.image.repository | quote }}
          tag: {{ .Values.collator.image.tag | quote }}
        environment: 'rollup-{{ .Values.environmentName }}'
        chain: {{ .Values | getOrNil "collator.chain" }}
        disableChainspecGeneration: {{ .Values | getOrNil "collator.disableChainspecGeneration" }}
        customChainspecUrl: {{ .Values | get "collator.customChainspecUrl" "" }}
        domainZone: gasp.xyz
        command: '/app/node'
        isParachain: false
        isCollator: false
        role: collator
        remoteCluster: {{ .Values.remoteCluster }}
        wsHealthExporter: {{ .Values.collator.wsHealthExporter | toYaml | nindent 10 }}
        enableServiceMonitorCollectors: {{ .Values.collator.enableServiceMonitorCollectors }}
        storageClass: {{ .Values.collator.storageClass | quote }}
        storageSize: {{ .Values.collator.storageSize | quote }}
        resources: {{ .Values | getOrNil "collator.resources" | toYaml | nindent 10 }}
        tolerations: {{ .Values | getOrNil "collator.tolerations" | toYaml | nindent 10 }}
        # collator-02 specific configs
        nodeSelector: {{ .Values | getOrNil "collator.collator02.nodeSelector" | toYaml | nindent 10 }}
        customNodeKey: {{ .Values.collator.collator02.customNodeKey }}
        bootnodeAddr: {{ .Values.collator.collator02.bootnodeAddr }}
        extraArgs: {{ .Values.collator.collator02.extraArgs | toYaml | nindent 10 }}
  
  - name: rpc-01
    installed: {{ .Values.collatorRpcNodesEnabled }}
    chart: mangata-node/node
    namespace: 'rollup-{{ .Values.environmentName }}'
    values:
      - image:
          repository: {{ .Values.collator.image.repository | quote }}
          tag: {{ .Values.collator.image.tag | quote }}
        environment: 'rollup-{{ .Values.environmentName }}'
        chain: {{ .Values | getOrNil "collator.chain" }}
        disableChainspecGeneration: {{ .Values | getOrNil "collator.disableChainspecGeneration" }}
        customChainspecUrl: {{ .Values | get "collator.customChainspecUrl" "" }}
        domainZone: gasp.xyz
        command: '/app/node'
        isParachain: false
        isCollator: false
        role: rpc
        remoteCluster: {{ .Values.remoteCluster }}
        wsHealthExporter: {{ .Values.collator.wsHealthExporter | toYaml | nindent 10 }}
        enableServiceMonitorCollectors: {{ .Values.collator.enableServiceMonitorCollectors }}
        storageClass: {{ .Values.collator.storageClass | quote }}
        storageSize: {{ .Values.collator.storageSize | quote }}
        resources: {{ .Values | getOrNil "collator.resources" | toYaml | nindent 10 }}
        tolerations: {{ .Values | getOrNil "collator.tolerations" | toYaml | nindent 10 }}
        # rpc-01 specific configs
        bootnodeAddr: /dns/collator-01-p2p/tcp/30333/p2p/12D3KooWQVtLSDM8ZuaExjLygBKBjA43gKUZH3wiooxs7Qp7iEQK
        extraArgs:
          - --pruning=archive
          - --rpc-max-connections=5000
        nodeSelector:
          production: "true"
          topology.kubernetes.io/zone: europe-west1-b

  - name: rpc-02
    installed: {{ .Values.collatorRpcNodesEnabled }}
    chart: mangata-node/node
    namespace: 'rollup-{{ .Values.environmentName }}'
    values:
      - image:
          repository: {{ .Values.collator.image.repository | quote }}
          tag: {{ .Values.collator.image.tag | quote }}
        environment: 'rollup-{{ .Values.environmentName }}'
        chain: {{ .Values | getOrNil "collator.chain" }}
        disableChainspecGeneration: {{ .Values | getOrNil "collator.disableChainspecGeneration" }}
        customChainspecUrl: {{ .Values | get "collator.customChainspecUrl" "" }}
        domainZone: gasp.xyz
        command: '/app/node'
        isParachain: false
        isCollator: false
        role: rpc
        remoteCluster: {{ .Values.remoteCluster }}
        wsHealthExporter: {{ .Values.collator.wsHealthExporter | toYaml | nindent 10 }}
        enableServiceMonitorCollectors: {{ .Values.collator.enableServiceMonitorCollectors }}
        storageClass: {{ .Values.collator.storageClass | quote }}
        storageSize: {{ .Values.collator.storageSize | quote }}
        resources: {{ .Values | getOrNil "collator.resources" | toYaml | nindent 10 }}
        tolerations: {{ .Values | getOrNil "collator.tolerations" | toYaml | nindent 10 }}
        # rpc-01 specific configs
        bootnodeAddr: /dns/collator-01-p2p/tcp/30333/p2p/12D3KooWQVtLSDM8ZuaExjLygBKBjA43gKUZH3wiooxs7Qp7iEQK
        extraArgs:
          - --pruning=archive
          - --rpc-max-connections=5000
        nodeSelector:
          production: "true"
          topology.kubernetes.io/zone: europe-west1-c

  - name: rpc-shared-dns-record
    installed: {{ eq .Values.environmentName "holesky" }}
    namespace: 'rollup-{{ .Values.environmentName }}'
    chart: ../helm-charts/shared-dns-record
    values:
      - url: 'rollup-{{ .Values.environmentName }}-rpc.gasp.xyz'
        serviceSelector:
          role: rpc

  - name: rpc-shared-dns-record-testnet
    installed: {{ eq .Values.environmentName "holesky" }}
    namespace: 'rollup-{{ .Values.environmentName }}'
    chart: ../helm-charts/shared-dns-record
    values:
      - url: 'rollup-testnet-rpc.gasp.xyz'
        serviceSelector:
          role: rpc

  - name: rpc-shared-dns-record-legacy
    installed: {{ eq .Values.environmentName "holesky" }}
    namespace: 'rollup-{{ .Values.environmentName }}'
    chart: ../helm-charts/shared-dns-record
    values:
      - url: 'rollup-testnet-rpc.mangata.online'
        serviceSelector:
          role: rpc