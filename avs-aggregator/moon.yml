language: go
type: application

toolchain:
  node:
    version: '22.11.0'

fileGroups:
  sources:
    - 'bindings/**/*'
    - 'cmd/**/*'
    - 'core/**/*'
    - 'mocks/**/*'
    - 'types/**/*'
    - '*.go'
    - 'go.mod'
    - 'go.sum'
    - '/go.work'
    - '/go.work.sum'
    - '/avs-eigensdk-go/**/*.go'
    - '/avs-eigensdk-go/**/go.mod'
env:
  IMAGE_BUILD_REPOSITORY: europe-docker.pkg.dev/direct-pixel-353917/gasp-xyz/gasp-avs-aggregator
  DOCKERHUB_REPOSITORY: gaspxyz/gasp-avs-aggregator

tasks:
  prepare-toolchain:
    command: go version
    options:
      cache: false

  # format:
  #   command: 'go fmt ./...'
  #   inputs: ['@globs(sources)']

  build:
    command: 'go build -o build/avs-aggregator cmd/main.go'
    inputs: ['@globs(sources)']
    outputs: ['build/avs-aggregator']
  
  build-image-local:
    command: 'docker buildx build -t gaspxyz/avs-aggregator:local -f Dockerfile --load ../'
    inputs: ['@globs(sources)', 'Dockerfile']

  buildkit-build-and-push-image-digests:
    command: >
      docker buildx build --platform linux/amd64,linux/arm64
      --cache-from type=registry,ref=${IMAGE_BUILD_REPOSITORY}:buildcache
      --cache-to type=registry,ref=${IMAGE_BUILD_REPOSITORY}:buildcache,mode=max
      --output type=image,push=true,push-by-digest=true,name=${IMAGE_BUILD_REPOSITORY}
      --metadata-file avs-aggregator-buildkit-metadata.json -f Dockerfile ../
    inputs: ["@globs(sources)", "Dockerfile"]
    outputs: ['avs-aggregator-buildkit-metadata.json']
    options:
      outputStyle: stream
      cache: true
      internal: true
  
  build-image-ci:
    script: |
      set -ex
      IMAGE_DIGEST=$(jq -r '."containerimage.digest"' avs-aggregator-buildkit-metadata.json)

      docker buildx imagetools create \
        --tag ${IMAGE_BUILD_REPOSITORY}:${IMAGE_TAG:-ci} \
        --tag ${DOCKERHUB_REPOSITORY}:${IMAGE_TAG:-ci} \
        ${IMAGE_BUILD_REPOSITORY}@${IMAGE_DIGEST}

      echo "Successfully created ${IMAGE_BUILD_REPOSITORY}:${IMAGE_TAG:-ci} from existing digests"
    deps: ['buildkit-build-and-push-image-digests']
    inputs: ['avs-aggregator-buildkit-metadata.json']
    options:
      cache: false

  release:
    command: 'yarn run release'
    options:
      cache: false
      runInCI: false