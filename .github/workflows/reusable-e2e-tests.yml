name: Run e2e tests
on:
  workflow_call:
    inputs:
      e2eBranch:
        type: string
        required: false
      globalVersion:
        type: string
        required: false
        default: "8dd0c81aa88b967334d001d8cae031f8799a189f"
  workflow_dispatch:
    inputs:
      e2eBranch:
        type: string
        required: false
      globalVersion:
        type: string
        required: false
        default: "8dd0c81aa88b967334d001d8cae031f8799a189f"

permissions:
  contents: read
  actions: read
  checks: write

env:
  CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}
  DEFAULT_E2E_REPO_BRANCH: eth-rollup-develop
  AVS_AGGREGATOR_VERSION: ${{ inputs.globalVersion }}
  UPDATER_VERSION: ${{ inputs.globalVersion }}
  ROLLUP_SEQUENCER_VERSION: ${{ inputs.globalVersion }}
  GASP_AVS_VERSION: ${{ inputs.globalVersion }}-fast
  GASP_CONTRACTS_VERSION: ${{ inputs.globalVersion }}
  FERRY_DEPOSIT_VERSION: ${{ inputs.globalVersion }}
  FERRY_WITHDRAWAL_VERSION: ${{ inputs.globalVersion }}
  ROLLUP_NODE_VERSION: ${{ inputs.globalVersion }}-fast

jobs:
  run-e2e-tests:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Start env
        run: docker compose up -d

      - name: Use custom branch in e2e tests repository if it exists, otherwise use default branch
        id: e2e
        run: |
          # Implementation of this conditional action was taken from here:
          # https://github.com/actions/checkout/issues/512#issuecomment-1264735491

          # This condition check if the input 'e2eBranch' is empty, and if it is, it checks if the current branch name exists in 'mangata-e2e' repository
          if [[ -z "${{ inputs.e2eBranch }}" ]]; then
            # Checking if current branch name exists in 'mangata-e2e' repository
            if git ls-remote --heads --quiet --exit-code https://github.com/mangata-finance/mangata-e2e.git ${{ env.CURRENT_BRANCH }}; then
              echo "Using custom '${{ env.CURRENT_BRANCH }}' branch as it exists in 'mangata-e2e' repository"
              echo "BRANCH=${{ env.CURRENT_BRANCH }}" >> $GITHUB_OUTPUT
            else
              echo "Custom branch '${{ env.CURRENT_BRANCH }}' does not exist in 'mangata-e2e' repository, using default '${{ env.DEFAULT_E2E_REPO_BRANCH }}' branch"
              echo "BRANCH=${{ env.DEFAULT_E2E_REPO_BRANCH }}" >> $GITHUB_OUTPUT
            fi
          else
            echo "Using '${{ inputs.e2eBranch }}' branch fo 'mangata-e2e' repository as it was provided in the input"
            echo "BRANCH=${{ inputs.e2eBranch }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout tests
        uses: actions/checkout@v4
        with:
          repository: mangata-finance/mangata-e2e
          ref: ${{ steps.e2e.outputs.BRANCH }}
          path: e2eTests

      - name: Install e2e tests dependencies
        working-directory: e2eTests
        run: yarn install

      - name: Docker ps
        run: docker ps --no-trunc

      - name: Run tests
        working-directory: e2eTests
        run: yarn test-rollup

      - name: Get sequencer logs
        if: success() || failure()
        run: docker logs rollup-sequencer-eth-1
      - name: Get aggregator logs
        if: success() || failure()
        run: docker logs rollup-avs-aggregator-1
      - name: Get gasp-avs logs
        if: success() || failure()
        run: docker logs rollup-gasp-avs-1
      - name: Get updater-arb logs
        if: success() || failure()
        run: docker logs rollup-updater-arb-1
      - name: Get node logs
        if: success() || failure()
        run: docker logs rollup-node-alice-1

      - name: Test Report
        uses: dorny/test-reporter@v1.8.0
        if: success() || failure()
        with:
          name: E2E report test-rollup
          path: e2eTests/reports/*.xml
          reporter: jest-junit

  run-avs-tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        test-command:
          - "moon gasp-avs:e2e-test-opt-out"
          - "moon gasp-avs:e2e-test-corrupted"
    env:
      MOON_TOOLCHAIN_FORCE_GLOBALS: node,yarn
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install proto manually
        run: |
          curl -fsSL https://moonrepo.dev/install/proto.sh -o /tmp/proto_install.sh && chmod +x /tmp/proto_install.sh
          bash /tmp/proto_install.sh 0.47.3 --yes && rm /tmp/proto_install.sh
          echo "$HOME/.proto/bin" >> $GITHUB_PATH
      - run: cd gasp-avs/tests && proto setup --yes
      # - run: cd gasp-avs/tests && proto activate --yes
      # - run: cd gasp-avs/tests && proto install
      - run: cd gasp-avs/tests && proto diagnose
      - run: cd gasp-avs/tests && proto status
      - run: cd gasp-avs/tests && proto regen
      - run: cd gasp-avs/tests && proto debug env
      - run: cd gasp-avs/tests && proto debug config
      
      - run: corepack enable && corepack prepare yarn@4.6.0 --activate
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./gasp-avs/.nvmrc
          cache: yarn
          cache-dependency-path: './gasp-avs/tests/yarn.lock'
      - run: cd gasp-avs/tests && yarn install

      # - name: Start env
      #   run: bash -c "docker compose up --wait || true"

      # - name: Install Foundry
      #   uses: foundry-rs/foundry-toolchain@v1
      # - name: build and copy contracts
      #   working-directory: contracts
      #   run: forge build

      # - name: gasp-avs tests - install deps
      #   working-directory: gasp-avs/tests/
      #   run: yarn install

      # - name: wait 4 minutes for agg to warm up
      #   run: sleep 240s

      - name: Run test command "${{ matrix.test-command }}"
        run: ${{ matrix.test-command }}

      - uses: appthrust/moon-ci-retrospect@v1
        if: success() || failure()

      - name: Test Report
        uses: dorny/test-reporter@v1.9.1
        continue-on-error: true
        if: success() || failure() # run this step even if previous step failed
        with:
          name: gasp-avs tests report ${{ matrix.test-command }} # Name of the check run which will be created
          path: gasp-avs/tests/reports/*.xml # Path to test results
          reporter: jest-junit # Format of test results

      - name: Get avs-aggregator logs
        if: success() || failure()
        run: docker logs rollup-avs-aggregator-1

      - name: Get gasp-avs logs
        if: success() || failure()
        run: docker logs rollup-gasp-avs-1

      - name: Get anvil logs
        if: success() || failure()
        run: docker logs rollup-eth-stub-1

      - run: docker ps

  ferry-withdrawal-test:
    name: Ferry withdrawal tests
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ferry-withdrawal
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: corepack enable && corepack prepare yarn@4.6.0 --activate
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./ferry-withdrawal/.nvmrc
          cache: yarn
          cache-dependency-path: "./ferry-withdrawal/yarn.lock"

      - run: yarn install --immutable
      - run: yarn run build

      - name: Build
        working-directory: .
        run: docker compose up --wait ferry-withdrawal-eth

      - name: Test L1 interface
        run: yarn run test-l1

      - name: Test L2 interface
        run: yarn run test-l2

      - name: Test ferry
        run: yarn run test-ferry

      - name: Test closer service
        run: yarn run test-closer

  ferry-deposit-test:
    name: Ferry deposit tests
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ferry-deposit
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: corepack enable && corepack prepare yarn@4.6.0 --activate
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./ferry-deposit/.nvmrc
          cache: yarn
          cache-dependency-path: "./ferry-deposit/yarn.lock"

      - run: yarn install --immutable
      - run: yarn run build

      - name: Build
        working-directory: .
        run: docker compose up --wait ferry-deposit-eth

      - name: Test L1 interface
        run: yarn run test-l1

      - name: Test L2 interface
        run: yarn run test-l2

      - name: Test ferry
        run: yarn run test-ferry

