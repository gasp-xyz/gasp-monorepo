name: Run e2e
on:
  pull_request:
    types: [opened, synchronize, closed]

  workflow_dispatch:
      inputs:
        environment:
          description: ''
          required: false
          default: ''

permissions:
  contents: write
  id-token: write
  deployments: write
  checks: write

concurrency: 
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  init:
    name: Set global version
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    outputs:
      GLOBAL_VERSION: ${{ steps.set_vars.outputs.GLOBAL_VERSION }}
    steps:
      - name: Set global version
        id: set_vars
        run: echo "GLOBAL_VERSION=${{ github.sha }}" >> $GITHUB_OUTPUT
  
  #build-and-test:
    #needs: [init]
    #name: Build
    #uses: ./.github/workflows/reusable-build-and-test.yml
    #secrets: inherit
    #with:
      #version: ${{ needs.init.outputs.GLOBAL_VERSION }}

  start-env:
    runs-on: [ubuntu-latest]
    needs: [init]
    steps:
      - uses: actions/checkout@v4
      - name: Build parachain launch
        working-directory: ops/parachain-launch-mangata-node/
        run: npx @open-web3/parachain-launch generate config.yml -y

      - name: Submodules setup
        run: git submodule update --init --recursive

      #- name: build finalizer
      #  working-directory: avs-finalizer/
      #  run: cargo +stable build --release

      - name: Start env
        run: |
          export AVS_AGGREGATOR_VERSION=8dd0c81aa88b967334d001d8cae031f8799a189f
          export AVS_FINALIZER_VERSION=8dd0c81aa88b967334d001d8cae031f8799a189f
          docker compose up --build --wait 
        

      - name: Sleep for 2 minutes
        run: sleep 120s

        
  