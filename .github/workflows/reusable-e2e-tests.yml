name: Run e2e tests
on:
  workflow_call:
    inputs:
      globalVersion:
        type: string
        required: false
        default: "8dd0c81aa88b967334d001d8cae031f8799a189f"
      cacheEnabled:
        type: boolean
        required: false
        default: true
  workflow_dispatch:
    inputs:
      globalVersion:
        type: string
        required: false
        default: "8dd0c81aa88b967334d001d8cae031f8799a189f"
      cacheEnabled:
        type: boolean
        required: false
        default: true

permissions:
  contents: read
  actions: read
  checks: write

env:
  CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}
  DEFAULT_E2E_REPO_BRANCH: eth-rollup-develop
  AVS_AGGREGATOR_VERSION: ${{ inputs.globalVersion }}
  UPDATER_VERSION: ${{ inputs.globalVersion }}
  ROLLUP_SEQUENCER_VERSION: ${{ inputs.globalVersion }}
  GASP_AVS_VERSION: ${{ inputs.globalVersion }}-fast
  GASP_CONTRACTS_VERSION: ${{ inputs.globalVersion }}
  FERRY_DEPOSIT_VERSION: ${{ inputs.globalVersion }}
  FERRY_WITHDRAWAL_VERSION: ${{ inputs.globalVersion }}
  ROLLUP_NODE_VERSION: ${{ inputs.globalVersion }}-fast
  IMAGE_TAG: ${{ inputs.globalVersion }}
  MOON_CACHE: "${{ inputs.cacheEnabled && 'read-write' || 'off' }}"
  CACHE_VERSION: 1

jobs:
  # run-avs-tests:
  #   runs-on: ubuntu-24.04
  #   strategy:
  #     matrix:
  #       test:
  #         - command: "moon gasp-avs:e2e-test-opt-out"
  #           name: "test-opt-out"
  #         - command: "moon gasp-avs:e2e-test-corrupted"
  #           name: "test-corrupted"
  #   env:
  #     MOON_TOOLCHAIN_FORCE_GLOBALS: node,yarn
  #     IMAGE_TAG: ${{ inputs.globalVersion }}
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         submodules: false
  #     - name: Cache Git submodules
  #       if: inputs.cacheEnabled == true
  #       uses: actions/cache@v4
  #       id: cache
  #       with:
  #         path: |
  #           .git/modules
  #         key: submodules-${{ env.CACHE_VERSION }}-${{ hashFiles('.gitmodules') }}-${{ github.sha }}
  #         restore-keys: |
  #           submodules-${{ env.CACHE_VERSION }}-${{ hashFiles('.gitmodules') }}-
  #           submodules-${{ env.CACHE_VERSION }}-
  #     - run: |
  #         git config --global url."https://github.com/".insteadOf "git@github.com:"
  #         git submodule update --init --recursive --depth 1

  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         cache: ${{ inputs.cacheEnabled }}
  #     - name: build and copy contracts
  #       working-directory: contracts
  #       run: forge build

  #     - uses: moonrepo/setup-toolchain@v0.4.1
  #       with:
  #         cache-version: ${{ env.CACHE_VERSION }}
  #         cache: ${{ inputs.cacheEnabled }}
      
  #     - run: corepack enable && corepack prepare yarn@4.7.0 --activate
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version-file: ./gasp-avs/.nvmrc
  #         cache: ${{ inputs.cacheEnabled && 'yarn' || '' }}
  #         cache-dependency-path: './gasp-avs/tests/yarn.lock'
  #     - run: cd gasp-avs/tests && yarn install

  #     - name: Run test command "${{ matrix.test.command }}"
  #       run: ${{ matrix.test.command }}

  #     - name: Show Docker Compose logs in case of failure
  #       if: failure()
  #       run: cat $GITHUB_WORKSPACE/tmp/logs/*.txt

  #     - name: Upload logs as an artifact on failure
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ matrix.test.name }}-logs
  #         path: tmp/logs/

  #     - uses: appthrust/moon-ci-retrospect@v1
  #       if: success() || failure()

  ferry-withdrawal-test:
    name: Ferry withdrawal tests
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ferry-withdrawal
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false
      - name: Cache Git submodules
        if: inputs.cacheEnabled == true
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            .git/modules
          key: submodules-${{ env.CACHE_VERSION }}-${{ hashFiles('.gitmodules') }}-${{ github.sha }}
          restore-keys: |
            submodules-${{ env.CACHE_VERSION }}-${{ hashFiles('.gitmodules') }}-
            submodules-${{ env.CACHE_VERSION }}-
      - run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git submodule update --init --recursive --depth 1

      - run: corepack enable && corepack prepare yarn@4.7.0 --activate
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./ferry-withdrawal/.nvmrc
          cache: ${{ inputs.cacheEnabled && 'yarn' || '' }}
          cache-dependency-path: "./ferry-withdrawal/yarn.lock"

      - run: yarn install --immutable
      - run: yarn run build

      - name: Build
        working-directory: .
        run: docker compose up --wait ferry-withdrawal-eth

      - name: Test L1 interface
        run: yarn run test-l1

      - name: Test L2 interface
        run: yarn run test-l2

      - name: Test ferry
        run: yarn run test-ferry

      - name: Test closer service
        run: yarn run test-closer

  ferry-deposit-test:
    name: Ferry deposit tests
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ferry-deposit
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false
      - name: Cache Git submodules
        if: inputs.cacheEnabled == true
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            .git/modules
          key: submodules-${{ env.CACHE_VERSION }}-${{ hashFiles('.gitmodules') }}-${{ github.sha }}
          restore-keys: |
            submodules-${{ env.CACHE_VERSION }}-${{ hashFiles('.gitmodules') }}-
            submodules-${{ env.CACHE_VERSION }}-
      - run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git submodule update --init --recursive --depth 1

      - run: corepack enable && corepack prepare yarn@4.7.0 --activate
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./ferry-deposit/.nvmrc
          cache: ${{ inputs.cacheEnabled && 'yarn' || '' }}
          cache-dependency-path: "./ferry-deposit/yarn.lock"

      - run: yarn install --immutable
      - run: yarn run build

      - name: Build
        working-directory: .
        run: docker compose up --wait ferry-deposit-eth

      - name: Test L1 interface
        run: yarn run test-l1

      - name: Test L2 interface
        run: yarn run test-l2

      - name: Test ferry
        run: yarn run test-ferry

