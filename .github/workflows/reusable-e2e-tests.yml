name: Run e2e tests
on:
  workflow_call:
    inputs:
      e2eBranch:
        type: string
        required: false
      globalVersion:
        type: string
        required: false
        default: "8dd0c81aa88b967334d001d8cae031f8799a189f"
  workflow_dispatch:
    inputs:
      e2eBranch:
        type: string
        required: false
      globalVersion:
        type: string
        required: false
        default: "8dd0c81aa88b967334d001d8cae031f8799a189f"

permissions:
  contents: read
  actions: read
  checks: write

env:
  CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}
  DEFAULT_E2E_REPO_BRANCH: eth-rollup-develop
  AVS_AGGREGATOR_VERSION: ${{ inputs.globalVersion }}
  UPDATER_VERSION: ${{ inputs.globalVersion }}
  ROLLUP_SEQUENCER_VERSION: ${{ inputs.globalVersion }}
  GASP_AVS_VERSION: ${{ inputs.globalVersion }}-fast
  GASP_CONTRACTS_VERSION: ${{ inputs.globalVersion }}
  FERRY_DEPOSIT_VERSION: ${{ inputs.globalVersion }}
  FERRY_WITHDRAWAL_VERSION: ${{ inputs.globalVersion }}
  ROLLUP_NODE_VERSION: ${{ inputs.globalVersion }}-fast
  IMAGE_TAG: ${{ inputs.globalVersion }}

jobs:
  run-avs-tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        test-command:
          - "moon gasp-avs:e2e-test-opt-out"
          - "moon gasp-avs:e2e-test-corrupted"
    env:
      MOON_TOOLCHAIN_FORCE_GLOBALS: node,yarn
      IMAGE_TAG: ${{ inputs.globalVersion }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Cache Git submodules
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            avs-eigensdk-go
            contracts/lib/forge-std
            contracts/lib/eigenlayer-middleware
            gasp-node/gasp-e2e
          key: submodules-${{ hashFiles('.gitmodules') }}-${{ github.sha }}
          restore-keys: |
            submodules-${{ hashFiles('.gitmodules') }}-
            submodules-
      - uses: actions/checkout@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install proto manually
        run: |
          curl -fsSL https://moonrepo.dev/install/proto.sh -o /tmp/proto_install.sh && chmod +x /tmp/proto_install.sh
          bash /tmp/proto_install.sh 0.47.3 --yes && rm /tmp/proto_install.sh
          echo "$HOME/.proto/bin" >> $GITHUB_PATH
      - run: cd gasp-avs/tests && proto setup --yes
      - run: cd gasp-avs/tests && proto install
      - run: cd gasp-avs/tests && proto diagnose
      - run: cd gasp-avs/tests && proto status
      
      - run: corepack enable && corepack prepare yarn@4.6.0 --activate
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./gasp-avs/.nvmrc
          cache: yarn
          cache-dependency-path: './gasp-avs/tests/yarn.lock'
      - run: cd gasp-avs/tests && yarn install

      - name: Run test command "${{ matrix.test-command }}"
        run: ${{ matrix.test-command }}

      - uses: appthrust/moon-ci-retrospect@v1
        if: success() || failure()

  ferry-withdrawal-test:
    name: Ferry withdrawal tests
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ferry-withdrawal
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: corepack enable && corepack prepare yarn@4.6.0 --activate
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./ferry-withdrawal/.nvmrc
          cache: yarn
          cache-dependency-path: "./ferry-withdrawal/yarn.lock"

      - run: yarn install --immutable
      - run: yarn run build

      - name: Build
        working-directory: .
        run: docker compose up --wait ferry-withdrawal-eth

      - name: Test L1 interface
        run: yarn run test-l1

      - name: Test L2 interface
        run: yarn run test-l2

      - name: Test ferry
        run: yarn run test-ferry

      - name: Test closer service
        run: yarn run test-closer

  ferry-deposit-test:
    name: Ferry deposit tests
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ferry-deposit
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: corepack enable && corepack prepare yarn@4.6.0 --activate
      - uses: actions/setup-node@v4
        with:
          node-version-file: ./ferry-deposit/.nvmrc
          cache: yarn
          cache-dependency-path: "./ferry-deposit/yarn.lock"

      - run: yarn install --immutable
      - run: yarn run build

      - name: Build
        working-directory: .
        run: docker compose up --wait ferry-deposit-eth

      - name: Test L1 interface
        run: yarn run test-l1

      - name: Test L2 interface
        run: yarn run test-l2

      - name: Test ferry
        run: yarn run test-ferry

