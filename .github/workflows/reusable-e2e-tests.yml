name: Run e2e tests
on:
  workflow_dispatch:
      inputs:
        e2eBranch:
          required: false
          default: 'eth-rollup-develop'
        substrateNodeVersion:
          required: false
          default: 'eth-rollup-develop'
        globalVersion:
          required: false
          default: '8dd0c81aa88b967334d001d8cae031f8799a189f'

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  run-e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start env
        env:
          AVS_AGGREGATOR_VERSION: ${{ github.event.inputs.globalVersion }}
          AVS_FINALIZER_VERSION: ${{ github.event.inputs.globalVersion }}
          ROLLUP_SEQUENCER_VERSION: ${{ github.event.inputs.globalVersion }}
          ROLLUP_UPDATER_VERSION: ${{ github.event.inputs.globalVersion }}
          MANGATA_NODE_VERSION: ${{ github.event.inputs.substrateNodeVersion }}
        run: docker compose up -d --wait

      - name: Checkout tests
        uses: actions/checkout@v4
        with:
          repository: mangata-finance/mangata-e2e
          ref: ${{ github.event.inputs.e2eBranch }}
          path: e2eTests

      - name: Install e2e tests dependencies
        working-directory: e2eTests
        run: yarn install

      - name: Run tests
        working-directory: e2eTests
        run: yarn test-rollup

      - name: Get sequencer logs 
        if: success() || failure()
        run: docker logs rollup-sequencer-1
      - name: Get updater logs 
        if: success() || failure()
        run: docker logs rollup-updater-1

      - name: Test Report
        uses: dorny/test-reporter@v1.8.0
        if: success() || failure()
        with:
          name: E2E report test-rollup
          path: e2eTests/reports/*.xml
          reporter: jest-junit

  run-avs-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Start env
        env:
          AVS_AGGREGATOR_VERSION: ${{ github.event.inputs.globalVersion }}
          AVS_FINALIZER_VERSION: ${{ github.event.inputs.globalVersion }}
          ROLLUP_SEQUENCER_VERSION: ${{ github.event.inputs.globalVersion }}
          ROLLUP_UPDATER_VERSION: ${{ github.event.inputs.globalVersion }}
          MANGATA_NODE_VERSION: ${{ github.event.inputs.substrateNodeVersion }}
        run: docker compose up -d --wait && docker ps

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: build and copy contracts
        working-directory: contracts
        run: |
          forge build 
          cp out/FinalizerTaskManager.sol/FinalizerTaskManager.json ../avs-finalizer/tests/abis/FinalizerTaskManager.json
          cp out/IndexRegistryStorage.sol/IndexRegistryStorage.json ../avs-finalizer/tests/abis/IndexRegistryStorage.json
          cp out/RegistryCoordinator.sol/RegistryCoordinator.json ../avs-finalizer/tests/abis/RegistryCoordinator.json
          cp out/RegistryCoordinatorStorage.sol/RegistryCoordinatorStorage.json ../avs-finalizer/tests/abis/RegistryCoordinatorStorage.json     

      - name: FINALIZER tests - install deps
        working-directory: avs-finalizer/tests/
        run: yarn install
  
      - name: FINALIZER tests - run tests
        working-directory: avs-finalizer/tests/
        run: yarn test

      - name: Get avs-aggregator logs
        if: success() || failure()
        run: docker logs rollup-avs-aggregator-1
      
      - name: Get avs-finalizer logs
        if: success() || failure()
        run: docker logs rollup-avs-finalizer-1

      - name: Get anvil logs
        if: success() || failure()
        run: docker logs rollup-anvil-1

      - run: docker ps
