name: Build and test

on:
  workflow_call:
    inputs:
      version:
        description: Version to be assigned to the built image
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  rolldown-contract:
    name: Build and test Rolldown contract
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Install deps
        working-directory: rolldown-contract
        run: forge install
      - name: Run tests
        working-directory: rolldown-contract
        run: forge test -vvv

  build-anvil-with-state-image:
    name: Build anvil with state Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: foundry-rs/foundry-toolchain@v1
      
      - name: Install `contracts` deps
        working-directory: contracts
        run: forge install
      - name: Install `rolldown-contract` deps
        working-directory: rolldown-contract
        run: forge install

      - name: Generate `anvil` state json
        run: make deploy-all-contracts-and-save-state
      
      - run: |
          docker login -u ${{ secrets.ORG_DOCKERHUB_USERNAME }} -p ${{ secrets.ORG_DOCKERHUB_TOKEN }}
          docker buildx create --use
          docker buildx build --push --platform linux/amd64 -t mangatasolutions/anvil:${{ inputs.version }} -f ops/anvil-with-state-image/Dockerfile .

  build-avs-aggregator-image:
    name: Build avs-aggregator Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: |
          docker login -u ${{ secrets.ORG_DOCKERHUB_USERNAME }} -p ${{ secrets.ORG_DOCKERHUB_TOKEN }}
          docker buildx create --use
          docker buildx build --push --platform linux/amd64,linux/arm64 -t mangatasolutions/avs-aggregator:${{ inputs.version }} -f avs-aggregator/cmd/Dockerfile .
  build-avs-finalizer-image:
    name: Build avs-finalizer Docker image
    uses: ./.github/workflows/reusable-rust-build.yml
    secrets: inherit
    with:
      version: ${{ inputs.version }}
  build-rollup-updater-image:
    name: Build rollup-updater Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker login -u ${{ secrets.ORG_DOCKERHUB_USERNAME }} -p ${{ secrets.ORG_DOCKERHUB_TOKEN }}
          docker buildx create --use
          # docker buildx build --push --platform linux/amd64,linux/arm64 -t mangatasolutions/rollup-updater:${{ inputs.version }} ./rollup-updater
          docker buildx build --push --platform linux/amd64 -t mangatasolutions/rollup-updater:${{ inputs.version }} ./rollup-updater
  build-rollup-sequencer-image:
    name: Build rollup-sequencer Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker login -u ${{ secrets.ORG_DOCKERHUB_USERNAME }} -p ${{ secrets.ORG_DOCKERHUB_TOKEN }}
          docker buildx create --use
          # docker buildx build --push --platform linux/amd64,linux/arm64 -t mangatasolutions/rollup-sequencer:${{ inputs.version }} ./rollup-sequencer
          docker buildx build --push --platform linux/amd64 -t mangatasolutions/rollup-sequencer:${{ inputs.version }} ./rollup-sequencer
